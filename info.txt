Intro
0:00
today we are going to build the service that you often see on Instagram it allows users to create simple landing
0:05
pages with multiple links okay so now let me show you how it works okay so here as you can see we have a simple
0:11
landing page with about pricing contact and on the right we have sign in and create account in the middle we have a
0:17
hero section where we can create a an account with specific username so for example I can put here David and it will
0:24
create me an account with this specific username and Link but because I already
0:29
created an account I can go here to sign in to my existing account so I click sign in with Google and I will just pick
0:36
my Gmail account so this is how user panel looks like as you can see there are many things here the first thing is
0:42
uh I can just click here to open my public profile public page and this is
0:48
how it looks like so as you can see the first thing is a hero image here on the background then we have Avatar display
0:54
name location bio some buttons and then custom links all of this is added in
1:00
this user panel so for example I can change the background color to a dark
1:05
blue or I can change an image let's maybe change an image to this uh MacBook
1:11
photo so I will click open we have a nice looking popups here uploading Now it's uploaded and I just need to hit
1:18
save and it will be saved to my profile so this is how it looks like for all of
1:23
my visitors and I can just go back here and change more stuff if I want I can
1:29
just maybe remove this Sweden from this location and I can change stuff in my
1:34
bio if I want to I can also change my avatar if I want let's say I want to
1:40
have a newer picture here and it's uploading another photo Now it's
1:45
uploaded so I can just hit save I can go to my public profile and just refresh
1:50
and I can see my new photo here then we have those buttons and those buttons are
1:55
editable here and as you can see for all of those buttons we just need to put information that can be either like a
2:02
phone for mobile or a link or email address so for example I can add Discord and I can add my Discord link here I can
2:10
remove those buttons with those trash icon buttons so I can just remove this Discord because I'm not going to use it
2:17
and I can also sort them so for example I can put the email button first and
2:23
let's hit save let's go to my public page here let's refresh and as you can see the email button goes first then we
2:30
have those links and as you can see for each link we have a title subtitle and
2:36
an icon it can be a default icon or we can upload a custom icon so same thing
2:42
here we can just scroll down to links and uh for each link we have three links here we can addit title subtitle the URL
2:50
for this link we can change icon same thing it just uploads a file and we can
2:56
of course remove a link with this button and we can of course sort everything so
3:02
let me for example put this one first the one with my picture here let's hit save and if I go to my public profile
3:09
and hit refresh it goes first now but that's not all because we have also analytics here so if I click here on
3:16
analytics I can see all of my visits for my profile or my on my public page so
3:22
today I had the 11 views that's really nice then we have even clicks for our
3:28
links I have Three Links and I can see that this link in the middle has the
3:33
most clicks because it has three Clicks in total and one click today all of this
3:39
is of course mobile responsive so it looks good both on mobile and on desktop
3:44
for this project we are going to use latest NEX js14 Tailwind CSS for styling
3:49
and for our database this tutorial may look like it's very long because it's 12 hours but that's because I
3:56
wanted to explain as much as possible to make it easy to to follow even for beginners the whole project is built
4:02
from scratch so there is no starter code or anything I will put the timestamps in the source code in the description and
4:09
as always all I ask for is that you will smash that like button for me to give me some extra motivation for the future
4:16
projects and if you have questions or anything let me know in the comments and now without further Ado let's dive into
4:22
the code all right so as always as you can see we are starting with an empty
4:27
directory here's my empty directory Dory it's called the link list this will be the name of the project for me and here
4:35
I have my editor and here I have an empty uh Chrome browser I have opened my
4:43
uh terminal here in the same directory and I will start by installing a brand
4:49
new NEX app so as always I will do this with yarn it's a little bit faster than
4:55
mpm so let's do yarn create next up and let's add a DOT here so it will be
5:01
installed in the current directory let's do enter and now let's see typescript no
5:07
not this time yes link yes attainment yes Source directory yes please up
5:14
router yes and up router yes because we will do a lot of server components so
5:21
that is nice now um import alas no I don't need to configure this so now it's
5:27
installing and everything looks fine and now let's see now it's installed so
5:34
we can do something like this here Dev and we get a link here uh that we can uh
5:41
open so let's open this one and we have our next app uh visible here so that is
5:48
nice now I will close uh hide the terminal now let's go to source and
5:54
inside up we have our page JS so I will start by removing all of this main HTML
6:04
element and let's put Dave for now and let's put test here and uh let's see if
6:11
I refresh yes we have test let's now see if we can let's go to Global CSS let's
6:18
remove all of this so we have only white page here yes uh that looks nice now
6:26
let's go back to our page so um for our
6:32
homepage for our index page I would like to have a simple
6:37
header and then hero section and that will be basically it so let's start with
6:44
this I'm going to put maybe let's use your main element here and let's put a
6:52
header and then I will have a hero section so let's put section like this
7:00
and inside our header I will have a link to a a logo with a link so let's put a
7:09
link uh that will go to Just homepage and let's say that the link
7:16
this logo will be just uh link list list something like this uh we will also have
7:24
navigation so I will have uh several links here to
7:30
um about or something like this and then let's put about here and
7:37
you can also have more pages uh uh later if you want so let's put maybe uh
7:45
pricing and here pricing and let's put contact as well
7:53
and let's put contact here and that would be good for now and and uh then we
8:00
have a inside header we have a logo then we have navigation another thing I would like to
8:07
have is like uh on the right side I would like to have information about
8:13
logged in user so like da uh with um
8:19
another navigation so uh uh let's put the a link
8:25
yeah let's put this as a link to slash login and it will say sign in and we'll
8:35
have another one for Crea an account so let's do create account and let's do
8:43
slash register okay and that will be it so now
8:49
we have this div with have those two links and then we have all of this that
8:55
should be on the left side let's put all of this uh the logo and this navigation to a
9:02
separate div so now we have two Dives the first one to be on the left side and then this one to be on the right side so
9:09
now for the header I want to do something like this I want to have a
9:14
grayish color let's do gray 300 uh that's maybe too dark let's see
9:21
200 um or maybe let's do white header so let's do background white but the page
9:29
will be grayish so let's go to globals let's do body and let's do apply and
9:36
let's do background gray and gray and let's do 100 so now we have gray page
9:44
and white header now let's go back to our header and here let's also add a
9:50
small border on the bottom border B for Border button and now we have something
9:56
like this so now this is the first div this is the second div let's put those
10:02
next to each other so let's put flex here and let's put justify between so
10:09
now as you can see this is on the left this is on the right now the first da that has this link and navigation let's
10:17
also put those two parts next to each other so let's add a class name here uh
10:24
flex and let's put gap of uh maybe no gap for now let's see
10:29
yeah but we will need some Gap let's do gap of U four let's see yeah I think
10:36
that looks nice uh now for the header uh
10:42
I would like to have some spacing on the sides so let's do padding maybe on all
10:48
sides so let's do padding of four so now we have something like this and uh I
10:54
think this looks nice and now let's add some spacing but between those navigation links so here let's do a
11:01
class name let's put flex and gap of two let's see how it looks like yeah maybe a
11:08
little bit of more little bit more spacing let's do gap of
11:13
four yeah now I would like to have those in different color so I will do text
11:21
Gray and maybe let's do 700 that's still too dark let's do 500 and I will instead
11:30
of gray I will use slate 500 yeah so they are grayish all right uh maybe
11:36
those could be smaller as well so let's do text smm yeah and I think it looks nice um
11:46
those are not centered as you can see this is more to the bottom so to fix it I'm going to add the here let's do items
11:54
Center and now they are in the Middle with this link l thing right uh now on the I think this
12:03
looks fine enough maybe we could add an icon here later on uh now for this right
12:10
side let's see here we have a div um maybe let's changes to
12:16
navigation uh doesn't really matter if it's div or nav let's put a flex and
12:23
let's add gap of four yeah let's add text small and and let's add text slate
12:31
500 so now we have something like this maybe those could be a little bit closer
12:36
to each other let's do gap of two now that's to Too Close three well let's put
12:43
it four right four looks nice and uh yeah I think this this will
12:49
work all right so we have something like this and uh our header looks almost okay
12:58
maybe I would like like to have a bit a little bit more spacing here so here I
13:04
will do a gap of six and yeah I think this looks fine so we have our header
13:12
here and it will be nice to put it as separate uh component so I'm going to
13:17
cut it from here and I will put this uh inside the source I will put a new
13:25
directory called components and and here I will put new
13:31
file and uh let's put this as a header.
13:37
JS and uh let's not us again and let's
13:42
do export default function let's do header and let's see return now we need
13:50
to return all of this and uh as you can see now we don't have any header but we
13:56
can import it so here let's do header like this and as you can see it
14:04
added this import line for me import header from components header if it doesn't do it automatically for you you
14:12
need to add it manually those Imports are not used anymore so let's remove those and we have our header here all
14:20
right so now here we have a section and I want to have um some kind of hero
14:27
section here so a big title here and a smaller title and a small form here so
14:36
uh let's do H1 and let's say it will be
14:41
your one link for everything yeah something like this and then we will
14:48
have an H2 share your uh Links
14:55
music um social Prof profiles contact
15:01
info and more uh on one page something
15:06
of this and uh now we need to have a little bit of styling for those headers
15:13
so the first one let's put text EXT extra
15:19
large and let's make this one bold as well so it's the font bold let's see
15:26
yeah it should be even bigger as the 4XL yeah and here I would like to break line
15:32
so let's do break line here let's see yeah something like this now um I want
15:40
to have the same spacing on the sides so for this section let's add padding of
15:47
four from all sides and uh this looks
15:53
fine now for this uh subtitle I would like this to be
15:59
um to be more grayish so let's do I'm going to put this here this here let's
16:05
add a class names and let's do text slight 500 and let's make it bigger
16:12
let's do text Xcel and um I want this one to have some
16:18
margin from the top let's do eight yeah maybe eight is too much let's do six and
16:25
I want this one to also break somewhere somewhere here so to do this I'm going
16:32
to put both of those into a DI that will have a a Max wave of uh I don't know
16:40
let's do small and let's see I'm going to put this H1 and H2 here inside so now
16:48
as you can see uh it's like this I think it's fine maybe we can make this one a
16:54
little bit brighter let's see 300 no I can not see anything 400 400 is fine
17:01
let's see how this will look like with gray instead of slate I think gray is a little bit better here so let's do gray
17:09
but let's put back 500 all right so this looks
17:15
fine and uh maybe I will make this even
17:21
bigger so let's do six XL and it looks fine but I want to have
17:27
more space in here your one link for everything yes now um here underneath I
17:35
will have a small form so here I will put uh under this if I put a
17:42
form and it will be something like this this form will have an input of type
17:49
text and it will also say something like this uh uh it will have a button uh of
17:58
time type uh submit uh it will say join for
18:05
free uh yeah and for this Batton I want this Batton to be um blueish so let's
18:13
add the class name let's do background blue let's do not 900 let's do um
18:22
500 let's do text white and uh now let's
18:28
see um let's add a little bit of padding padding four I think this looks nice
18:34
more padding on the sides so uh let's do padding top and the b top and the bottom
18:41
four on the sides it will be six uh this looks nice uh now uh I will
18:49
do something like this uh for this form I'm will add the class names like
18:55
Flex and uh now the input is the same same size here that's
19:00
nice uh now before the input I would like to have a span or just a text
19:07
saying uh uh what your uh page will look like what your link will look like and
19:13
let's say it will be link list. two slash uh so we will have something like
19:19
this as you can see uh let's make it more to the middle here so let's add
19:26
items uh items Center so we have something like this
19:32
and now the input doesn't take the whole half but uh we can fix it so for this
19:39
input let's add some class names padding on the top and the bottom of four and
19:45
now it's the same have here as you can see and uh now for this uh or this uh
19:53
text here I want the background also to be white so let's add a class name name background white and might should take
20:02
all the all the space so let's do padding on the top and the bottom four
20:08
yeah so we have something like this here we can edit uh let's add um placeholder
20:13
for the input so let's add placeholder username it will say
20:19
username so now we have something like this link list. 2/ username and here we
20:24
can put a username uh I would like to have a little bit of padding here on this span
20:31
so let's maybe put this here this here let's do padding left off uh let's do
20:39
four so now we have something like this uh looks nice maybe bit a little bit of
20:46
uh pading on the right or I don't know if it's needed maybe this looks fine now for the
20:52
whole thing uh I would like to add a little bit of Shadow so let's do Shadow
20:59
and let's see and no it takes it goes all the way even here and um let's
21:07
change this to flex um well let's see in line not Flex in line let's do inline
21:16
Flex I think it was inline Flex yeah so it doesn't go all the way
21:21
to the right with this Shadow so uh this looks fine uh maybe we can be have a
21:29
little bit of Shadow so let's do Shadow large so now we have more
21:36
Shadow and that looks really nice um H now uh I want to have uh more
21:45
spacing here right so maybe from this div with the text I'm going to add
21:50
margin bottom of let's do four and let's see so uh that's not enough let's do I
21:58
don't know six or maybe eight yeah six looks like this and uh I would say it's
22:05
uh almost good let's try with eight to do even more and I think this looks fine
22:15
uh maybe I will do the shadow a little bit darker so let's do here Shadow and
22:22
let's do black and yeah that's too dark let's do black divided by
22:30
50% okay that's still too much let's do 20 yes so we have now something like
22:36
this uh I think this will look uh fine maybe we can do darker gray so let's do
22:43
gray of I don't know 700 so yeah now we have something like
22:49
this and uh yeah I think this this will work you can test with other colors and
22:55
other and other here H transparency if you want I think this uh looks fine
23:04
right now I would like to Center this or push it more to the bottom so let's see
23:10
here inside the section I'm going to add the padding top of something big let's
23:15
do 16 that's not super big let's try with 32 okay that's a little bit better so
23:23
now we have something like this and uh I think it uh it looks fine for bigger
23:30
screens like this one it should be more centered uh but we can uh fix it uh
23:37
later or maybe let's see now uh for the section as the max wave of uh large so
23:46
now if I and let's also add MX Auto so it will be
23:51
centered okay so now it's uh this big okay it needs to be much bigger let's do
23:59
2 XL and now it's here and well it stays
24:04
here let's see with 4 XL then it's here and if I make it
24:11
bigger then it stays uh here yeah uh let's maybe keep
24:16
it for XL as maximum but let's do the same with our header so it will be also
24:23
centered let's go to header and uh let's see
24:29
uh here we have this parrant white and we want to have it on the whole uh with
24:34
from the left to the right but let's put a div and inside this div let's put
24:40
everything inside and for this main div and we want to make it Max wave of I
24:47
think it was 4XL and let's add this border
24:53
justify and padding uh maybe not padding but the rest let's put this here flex
25:00
and justify so now if I make it this wide okay as you can see it's not
25:06
centered because I forgot to add MX Auto so margin on the sides should be
25:13
automatically the same and now it's uh better so now if I make it this let's
25:20
see if it's in line with this your almost is so something is a little bit
25:27
off let's see what it is and I think is this
25:32
padding let's change this to padding on the top and the bottom to before and here let's add padding on the sides to
25:39
before okay now let's try let's see yeah now everything is in line so uh that's
25:47
good and uh yeah and I think our maybe
25:54
for small screens we can add more padding on the sides so let's do here uh eight so we have
26:02
more padding here and let's do same for this section here let's see section
26:10
padding four uh let's change this to Ping six and padding from the top 32
26:17
okay so now uh everything is still in line and uh yeah I think it looks uh
26:25
fine so later we also add some examples here of uh of pages of other
26:33
users uh or maybe uh here mobile version of a preview how it looks like and uh
26:41
for now let's focus that we can uh actually uh put uh stuff here and we can
26:49
hit this button and something will happen one thing that is off is that uh
26:55
when I make this thing smaller you can see that crate account
27:01
is doesn't have any padding on the right side so let's fix this first let's go to
27:07
header and let's see on this D we have uh uh let's see Max wave flex and and
27:16
let's see MX Auto here inside we should have uh we shouldn't have this padding x
27:25
uh here because it's on for this uh left side so now we don't have even here and
27:32
now let's do this thing here uh padding let's do six on the sides and now we
27:39
have here and here we have padding on the sides of six let's see how it looks
27:45
like if it's still in line with the rest I think it is so uh yeah that looks
27:51
nicer because now we have some spacing here right but now the next part will be
27:57
fixing this form and of course fixing also this uh
28:03
authentication we need to be able to authenticate login register and we need to fix this form as well all right so uh
Authentication
28:13
to fix this thing uh what we want this thing to do is uh that you will uh grab
28:22
a username for our uh website and it will redirect you to the login
28:30
page um and for this sign in for example it will also redirect you to a login
28:36
page so uh let's start by creating a login page first so uh I will first go
28:44
to this thing inside header and we will change this to be a link to a login page
28:50
so here we have our header and it goes to SL login but if I click here it will
28:56
get a I will get a 44 because we don't have a page for this let's go inside up
29:03
and let's create a directory called login login and uh let's hit enter and inside
29:13
let's put a page.js all right and let's do here
29:18
export default function let's call This One login page and the name here doesn't
29:26
really matter you can put just login or just uh doesn't matter because it's a
29:31
default export all right so uh let's see uh here inside we will need to have a
29:38
return and let's put a diff with a test inside so as you can see now we have
29:43
only test but uh I would like to have our header and so so uh to fix it I will
29:52
uh get the rid of this header from the page and I will put this inside our
29:57
layout so inside our layout as you can see we have just HTML tag and body and
30:04
here we have our children I'm going to change this and inside our body I will
30:10
put a main element and then I will do I put header here and then after header I
30:17
will put children so now we have two headers for the uh homepage because uh
30:23
we don't need this header anymore inside our homepage because we have have it inside layout so now we have a layout
30:30
here and now if I click sign in we have a test including our including
30:38
our uh header here because it's inside lout uh but let's see we don't have this
30:44
padding on the sides right uh so maybe let's add it to uh layout as well so
30:51
let's put the div with some class names for our children here and and those
30:57
class names will be uh let's go to the page homepage and those class names will
31:03
be those padding of six and uh Max wave
31:09
of 4XL and MX AO let's grab it let's put it inside
31:15
layout and let's see let's also grab this padding of six and uh let's put this here uh but
31:25
this uh pading top of 32 it will be only for the homepage because only here for
31:32
this hereo section we want this big padding if we go to the login page well
31:38
a padding top of 32 is not is not needed here so let's go to our login page and
31:46
here inside I will uh have a H1 that will say maybe
31:53
not login let's say sign in and we need to uh make it bigger um
32:03
let's do class names and let's put something like this and let's make it
32:10
text and let's do 4XL and let's make it bold let's make it
32:16
bold font bold and let's make it centered so let's do text Center text
32:23
Center let's put this here and this here so now we have some something like this
32:28
sign in and um well but maybe we can do
32:33
something uh a little bit prettier here maybe we can have a box to sign in so uh
32:42
for this div uh I'll put another one here inside and I'll put this H1 in here
32:50
for this div I will put a white uh background so it's the background white
32:56
as you can see we have this and now let's add border so something like this
33:03
yeah now let's add some padding so let's do padding four yeah that's better and
33:10
now let's also add the well let's add Max wave of uh extra small so this size
33:21
of the uh box and let's make it centered so let's do MX AO so now we have sign in
33:28
that looks like this right uh this looks fine uh What uh
33:35
I would like to do here is uh is to have
33:40
a button here underneath uh that will be uh signning with Google so here
33:47
underneath let's put a button button uh it will say sign in with Google
33:56
something like this and yeah that will work let's try to style it a little bit so let's add a
34:04
class names and the background will be blue for this button of uh I don't know
34:11
500 let's see yeah let's do text white text Center and let's do wave of full so
34:21
it will take all the space yes that's nice and let's add some pading on the
34:27
top and the bottom of four yes and U from this H1 let's put uh
34:35
some margin bottom of at least six so we'll have some spacing and I will have
34:41
something like this sign in with Google I think that looks uh nice but uh
34:49
I would like to have a some kind of maybe Google icon here and I think it
34:56
will be it it will look uh much nicer so um to get a Google icon maybe we will
35:03
use uh awesome uh icons font awesome icons let's see uh let's add it to let's
35:13
see let's go to the start page icons and let's search for
35:19
Google and yeah this one looks fine uh so this is what we are going to use uh
35:25
for react and and we are going to use uh just this individual
35:32
import um using icons with react let's open this and let's see here uh we need
35:39
to install this and this so let's do this let's open Terminal let's add the
35:46
open a new tab here let's do yarn add this and let's also do yarn add this
35:55
yarn add this and uh now let's see how we can add
36:01
those so we just do font awesome icon fa Google so let's put this text inside the
36:10
span and here let's put F A icon whoops
36:15
it doesn't looks font awesome icon let's do font awesome icon and our icon will
36:23
be fa Google so let's do have a Google looks like we cannot import it
36:30
like this uh let's see why let's import it manually so let's do let's do import
36:37
fa Google uh from and uh let's see how we
36:44
need to using icons with react let's open this thing
36:50
again and we need to import it from here uh not from here let's see uh let's see
36:57
if this icon is free first uh so we want only free icons yes this one is
37:04
free and uh we need to import it for
37:09
react individual import fa Google let's try again fa A Go Go looks like we need
37:18
to add this import manually is the for awesome pre solid SVG
37:25
icons and now let's see if I will save this can resolve uh okay YN ad for
37:33
awesome free Sol svj icons let's try again fa Google let's save fa Google can
37:40
resolve 642 the version is the same let's see no
37:46
animation react and let's try maybe uh again individual import using icons with
37:54
react and not globally we want to do like this not
38:01
globally we want to do individual icons so we have this we cannot import like
38:09
this but let's try with fa envelope and let's see if fa envelope
38:15
will work let's do fa envelope and let's
38:20
see can't resolve for awesome font awesome SVG core okay maybe we need to
38:28
add it as well so let's do yarn add and let's do this and now it kind of works
38:34
and let's try with uh fa Google fa a
38:39
Google let's see what does it say unused okay let's use it and I don't see the
38:48
icon cannot resolve okay maybe it's somewhere else it's not it's maybe not
38:54
here so uh let's see what else do we need we have this free solid SVG icons
39:01
but we may need some more here as you can see we need three brand SVG icons so
39:09
let's yarn add those as well and now maybe it will be it will work better to
39:17
automatically import those so let's do fa Google and as you can see I can
39:23
import this one from free Brands SVG I so uh that's good and we have our
39:30
Imports here so that's good and we have our Google icon let's see what happens
39:37
now if I will add some class names here let's add wave of six yeah that's really
39:43
nice so now it's smaller Let's uh do for the Batton let's add
39:49
flex and let's add some gap of uh two
39:54
here and let's do just justify and let's do Center yeah so it's
40:01
in the middle and I think this looks really nice maybe this white box is not
40:09
needed so let me try to remove this uh background white and border now we have
40:15
something like this maybe we can even add some extra text here um like sign
40:25
into your account using one of the
40:32
methods below something like this let's make this uh centered as well so let's
40:38
do text Center and we want to have margin bottom of six let's say and here let's decrease
40:46
to two so we have something like this and I think this looks fine maybe we can
40:53
more make it more grayish so let's do text gray 500 and uh yeah I think uh it looks fine
41:04
later you can add more uh more stuff here sign in with I
41:10
don't know uh something else like Tik Tok or Instagram or Facebook and maybe
41:18
we can also make it not uh blue but more like white whsh so let's try try to make
41:27
it background white and let's add shadow
41:33
shadow yeah I think this looks uh nice as well sign in with Google all right so
41:40
uh we have our login page and uh let's do that create account for now we'll go
41:47
to the same page so let's go to our header components header and it will go
41:54
to login as well right and uh now we need to fix our
42:00
authentication so let's go back to our login page and here we have this button
42:07
let's put that will have an on click and for now let's put an arrow function and
42:15
uh well let's see now it's broken and on click needs to be a function but we have
42:22
an AR function so let's refresh uh even hundreds cannot be passed to
42:29
client component okay we cannot have on click in client components well to fix it I'm going to
42:37
put this button uh somewhere else uh so let's go
42:43
maybe to components and I will do directory here called let's do
42:49
buttons and I will create a button that will say login with
42:56
Google and. JS and let's do export default function log with
43:04
Google like this and let's do return Yes
43:10
and let's put uh this button cut this from here and let's put this here and
43:18
yes now let's imported here so let's do login uh with Google
43:26
uh yes like this we don't need those two font awesome Imports here anymore and
43:32
now we can go inside this login with Google and let's go to the top and let's put use client so it's a client
43:40
component now this icon is much smaller let's see why let's maybe change this to
43:47
Wi of eight no still nothing uh let's see why we have some padding here and we
43:56
have Flex let's add items Center
44:02
Center yeah and uh that's a little bit uh better let's change this let's remove
44:09
this uh yeah I think uh I think it looks fine but maybe it would be better to
44:16
have uh a bigger uh icon here so uh let's see what if we make it half of uh
44:24
12 okay then it's big let's do eight okay then it's this big I think it looks
44:31
fine maybe we can do like six and more Gap let's do gap of three yeah I think
44:38
this looks fine all right so uh now this button doesn't do anything but we will
44:44
fix it in a moment uh I'm going to add the next out
44:50
here and uh yeah let's open next out let's go to get
44:57
started existing project let's do yarn ad yarn ad next out and let's see for
45:05
the next JS 13 and upwards we need to use uh this thing here so we need to
45:12
create a file inside uh let's see uh
45:18
let's open this again uh nextjs 1 we need to add it inside up using this
45:25
guide okay here guide and we need to put this file so inside up we need to have
45:32
API directory let's do new directory called API and inside API we need to
45:40
have off directory so let do new directory off and inside of directory we
45:47
need to have this directory so let's do a new directory
45:52
called uh I think it was next up off like this let's see next off yes and
46:00
this is because it will grab all of the URLs that will go to/ API slof and
46:06
inside here we need to have route. uh JS they have TS because they have example
46:13
for typescript I'm going to use route JS right and we need to have this kind
46:21
of Handler so let's put this here and here we will have our
46:27
options and it's much better to have options as a separate constant because
46:33
we will need to uh import it somewhere else later so let's use here um let's
46:40
define this constant called of uh options equals object as you can see
46:47
here it's an object so let's put it here and here let's do just uh of options
46:55
right and now for the options let's see what kind of options uh they don't specify the
47:02
options here or maybe they do uh some of them uh but I'm going to close this part
47:07
of the documentation and here on getting started you can see that we have
47:13
providers and providers are all of like methods that you can use to login and
47:20
I'm going with Google so here we have for example Google provider and and I'm
47:26
going with this one so let's do Google provider we need to put it inside providers so inside our options let's
47:33
put providers and it's an I think it's a
47:38
array yes providers let's put Google provider we need to import it Google
47:45
provider well I cannot import it let's see why let's try to put it like this
47:51
let's put this import summer here on the top and uh now as you can see we need to
47:59
have inside our EnV configuration Google client ID and Google client secret for
48:06
this we need to go to our Google console uh console cloud googlec and I will
48:12
create a new project for this let's do new project and let's call it link list
48:19
link list uh yeah let's create and now it's
48:24
creating this uh a project for me creating project link list let's select
48:30
this project and yeah now let's search for o
48:35
uh open authentication and yeah let's hit credentials and let's see so we need to
48:43
create Google client ID and Google client secret uh inside our uh let's see
48:50
inside our uh EnV configuration so uh let's let's close source for now and
48:58
inside our main directory I will put that EnV and let's put Google client ID
49:03
to be this and go client secret will be empty string for now and uh well here
49:11
inside we are going to need to create uh or paste both of those so to
49:20
do this um I will go to First configure concerns configure content screen for
49:27
our login external create app name uh let's do Link Link list and email my
49:38
email here and here another email so let's I will just put my email you you
49:45
can use your email it doesn't really matter let's go save and continue and uh this is now uh
49:54
done let's do let's see stive Scopes restricted Scopes that's fine let's do
50:00
save and continue test users no save and continue and back to dashboard so um
50:09
let's go back to credentials and now we can create credentials or client
50:16
ID and uh let's see application type web application and now authorize redirect
50:23
URLs and for this we need to put uh let's see here is the information for
50:30
development it's Local Host 3000 as we have Local Host 3,000 sometimes you can
50:36
have another Port use like 3,001 4,000 but basically you get the idea and
50:42
you need to put all of this so the whole URL so I'm going to copy this and
50:47
remember if you deploy your app to another domain you need to add another
50:53
link so for now I'm going to put only one but if you have more in the future
50:58
like your own domain or versal subdomain you put it uh separately um to and you
51:06
redirect all let's hit create and here we have client ID and client secret so
51:13
let's put this here client ID and client secret client secret here and now let's
51:22
see now uh it should work but another thing I would like to add is
51:30
uh we have our provider but uh one more thing I would
51:35
like to add is uh adapter and because I want to store user
51:44
information uh of all of the users who log in and sessions inside a database
51:51
and for this I'm going to use and uh because it's super simple to spin up
51:58
a Monga Atlas database so let's go to Monga
52:03
Atlas and let's see I'm going to sign in here with my Google account and here
52:10
again I'm going to create a new project let's hit new project and here it will
52:16
be link list let's hit next and create
52:22
project and now let's create a database for our project a free database that is
52:28
nice let's hit create and now we need to have username and password I will put
52:34
link list here and I'm going to just copy this password let's create user
52:41
that's fine uh for the access here IP addresses as you can see my IP address
52:48
has been automatically added um so that is good I can just
52:54
click finish and close go to overview and I have copied the password and I'm
53:00
going to paste it here for now but the thing here is I will click connect here
53:07
and let's go to let's do for example mongod db4 vs code or shell or Compass
53:13
doesn't uh really matter uh it will give you the same uh string is so I'm going
53:20
to copy this and let's put this as a let's do uh URL and let's put this
53:30
maybe we can call it U I think it's more correct way as you can see here we have user and here we
53:37
have password that we need to put so I'm going to cut this and I'm going to paste
53:42
it here I'm going to change this password later so you guys cannot use it you need to create your own here after
53:50
slash uh after this uh Slash uh you put your uh database name I think test is
53:57
default but I'm going to put it anyway uh so you can have several uh database
54:03
inside why inside one uh database or project instance so I'm going to do test
54:11
here right so this is done and we have our uh URI now let's go back to
54:19
this uh uh documentation for our adapter here as you can see we will need uh to
54:27
have this mongod DB client so let's uh see first we will need to
54:33
install this with yarn so let's do yarn add mongodb and now they want us to put this
54:44
somewhere this code so it will just prepare a database connection for next
54:50
hour so inside source I'm going to put a new directory called
54:56
Libs and um I will do new file and let's put this client.js
55:03
and I'm going to paste all this here and this is in typescript so I need to
55:10
remove this and I think that's it but they have
55:16
it as mongodb URL U and we have it as just uai so we need to change here
55:24
and uh here in two places this is also typescript so let's remove this and I
55:31
think now it looks fine so now let's go here we have it here and now inside our
55:39
uh authentication options we put adapter to be DB adapter and we need to
55:46
also install this as you can see so let's do yarn add and let's add this
55:52
thing and uh now now let's put adapter mongodb adapter inside our app API of
56:00
next of Route so here inside of options we will put
56:06
adapter to be uh let's see mongodb
56:11
adapter let's do mongod DB adapter and it has been imported for me and here
56:18
inside we put this uh client uh promise and as you can see it's import from this
56:26
client inside lips that we created so that is nice and now I think we are
56:34
done here so let's see what happens if we try to log in I will hit the sign in
56:41
and nothing happens this is because we had this empty aror function so let's go
56:47
to let's see uh it's inside components
56:52
header no not inside header ins side buttons loging with Google here we have
56:57
this empty aror function let's add sign in imported from as you can see next off
57:05
react here we put just Google and that will be it I think so
57:12
let's uh save it now let's refresh here and let's try to log in and as you can
57:18
see we can log in with Google accounts now uh I am logged in now but I don't
57:24
see any information so here let's try to do um let's uh grab all of the
57:33
information from use session so we can see if we are logged in as the use
57:40
session uh and let's do a console log of this data
57:47
here and this didn't work because as you can see your session needs to be wrapped
57:55
inside session provider well I don't want to wrap it
58:00
here so I think uh maybe we can get rid of this use session from here and we can
58:08
go to our header and grab session here so let's see we can do either use
58:14
session or because this is server component we don't have any use effect on the top I can do get server session
58:24
and here we need to put off options and those are now imported let's
58:30
do const session equals and we need to add a weight here and because it's a
58:37
weight I need to add export a Sync here
58:42
no uh not here export default async here function right now let's see and we have
58:50
this session here let's see what will happen if we will add uh console log
58:56
here for the session we should probably say it here inside our terminal and yes
59:02
we do if I refresh you can see we have user and we are logged in so this works
59:09
uh our authentication works we can also uh let's go to database and let's
59:15
see browse Collections and we have our test database you can name it however
59:22
you want and inside we have free collection we have accounts sessions and
59:27
users uh we have accounts and users because in case you have many providers
59:33
like uh Lo Google Twitter GitHub and so on then you will have many accounts but
59:40
only one user or something like this all right but we have a session here so yeah
59:47
I'm logged in and it looks nice uh one thing that we may want to do is that if
59:54
you are loog in so if we have a session I don't want to show sign in and create
1:00:00
account instead uh I want to show a link uh to
1:00:06
uh to the username or account or something like this so we have a user here that we can use and then the name
1:00:13
all right let's hide this and let's don't conso loog this here we have this
1:00:20
second navigation to sign in and uh and create account but here inside I would
1:00:27
do something else I would do um if we have a session if we have
1:00:33
session or maybe let's do if we don't have session so let's do exclamation mark let's do end parenthesis and inside
1:00:40
let's put react fragment because we'll put those two links inside so those two
1:00:46
links will be visible only if we are not logged in so let's now do the opposite
1:00:53
let's do if we have session let's maybe change this to a Boolean because it's an
1:00:58
object so let's do Bank bank and then it's a true or false and now let's do end um
1:01:07
parenthesis uh we can put react fragment uh but we don't have to because we will
1:01:12
have only one element here and it will go to let's say slash
1:01:17
account and uh well here I will say account like this so we have account uh
1:01:26
or we can do something like this we can do hello hello call on and we can put
1:01:33
the username so let's do a session uh user uh name um you can do without
1:01:40
question marks and it work it will work as well as you can see here but uh I
1:01:46
will add question marks in case some of this is empty I guess that because this
1:01:53
is true and it will never be empty this part but you never know and I don't want to have
1:02:02
some weird warnings or errors so I prefer to suppress those warnings okay
1:02:08
but um we have this link and it goes to account uh it doesn't really work uh but
1:02:14
we'll fix it uh in in a second or in a minute uh before we will do this I want
1:02:21
to put actually another link to to log out uh so here we will actually need to
1:02:28
have react fragment so let's put this link here and I want to have a button
1:02:36
here that will um log out uh but because this button will be
1:02:44
will have an onclick it will be a client component so we can either do here use
1:02:51
client but then if we do this uh we cannot use get server session like
1:02:57
this because get server session is only for uh server components so we need to
1:03:03
put because this header is a server component we need to put logout Button
1:03:09
as a separate component let's go to buttons and let's do uh here let's
1:03:15
create a file let's call this one log out
1:03:20
button.js let's do export default function log out button with capital
1:03:27
B uh log out button and let's do return
1:03:32
and let's do a button here whoops not like this I want to have regular button
1:03:38
like this I will have on click and on click I'm going to do Arrow function
1:03:46
sign out let's see sign uh out like this yes and it will
1:03:55
say log out and we need to put on the top use client yes and now let's try to
1:04:03
use this button inside our header so let's put here log out button yeah and
1:04:11
uh we have our logout button here we need to style it a little bit so let's
1:04:17
go to log out button let's put this on click here here I'm going to put some class names let's put the Border to see
1:04:24
how it looks like well it looks like uh this and this doesn't look good so uh
1:04:32
first I'm going to go back to header and for this nav as you can see we have flex
1:04:38
but we don't have items Center so let's add it now it's centered now for the uh
1:04:46
logout uh let's uh remove the border and uh instead
1:04:54
I want to have an icon so this logo text I'm going to put inside this pan and
1:05:00
let's add an icon I think it was font awesome icon and for the icon we will
1:05:07
put uh let's search for log out uh no I cannot find it so let's go
1:05:14
to those icons here and let's search for
1:05:20
log out and we have this it's called r right from
1:05:26
bracket and let's go react individual import fa a right from bracket okay f a
1:05:36
right from bracket from this yes let's
1:05:43
import uh yeah we have log out uh we need to have some spacing so let's do
1:05:48
flex and gap of two yeah and let's add the items Center yeah and maybe we can
1:05:56
add a little bit of Border uh yeah this looks fine uh we
1:06:04
have border let's add a padding of two so we have a more spacing maybe pting on
1:06:12
the sides of uh let's do four and let's add some Shadow here for
1:06:20
this button yeah and I think it looks much nicer now this logo doesn't look good
1:06:27
let's go to our header and let's see here we have flex but we don't have item
1:06:33
Center let's see yeah now it's much better we have our logout and our uh
1:06:42
logo looks nice maybe we can add a icon here let's search for link and maybe we
1:06:49
can do something like this so here we have our logo let's put this here for
1:06:56
this text I'm going to put this text inside the span here I will add the font
1:07:01
awesome icon and the icon will be let's see it will be just fa link so let's
1:07:08
import fa link yes from here yes and now
1:07:15
for this link I'm going to add the class name of flex items Center gap of two and
1:07:22
now let's see how this will look like yeah so we have something like this uh I
1:07:28
want to add for this uh font awesome icon I will add the class name to be
1:07:34
background uh of blue uh 500 so it will
1:07:39
be the icon will be blue well it's not what I wanted let's see not background
1:07:46
but let's do text no uh let's try with Phil blue 500 let's see no let's try
1:07:55
with a text below 500 yeah now it works so we have something like this maybe the
1:08:03
logo the text could be also text belue
1:08:09
500 yeah or maybe it could be darker I don't know I think this uh looks fine
1:08:15
maybe we can add for this uh let's see let's change this 500 to 700 so it will
1:08:23
be a little darker yeah I think this looks fine you can change it to what you
1:08:30
think looks better uh doesn't matter and maybe I will also make it uh Bolder so
1:08:38
let's do span class name and let's do bold font bold yeah I think uh this
1:08:44
looks fine okay so now we can log in and let's see if I can log out yes I can log
1:08:49
out and I can log in back and uh this works fine and the next part will be uh
1:08:58
so we can fix this so we can grab a username and uh fixing an account so if
1:09:05
you have a username it will be uh shown there right so before we will go to this
Hero form registration
1:09:12
thing I noticed that my authentication stopped to work so I try to log in and
1:09:20
uh I don't see any uh log out button so or I don't see any logout button or I
1:09:26
don't see my name and I notice that uh we have some error here inside the
1:09:32
console and I think this is because we need to add a secret to our next elf so
1:09:40
inside app API Al next Al let's go here to route and inside our Al options Let's
1:09:48
uh put uh secret so um in here I guess we should have have our mongodb adapter
1:09:55
but I don't know why it disappeared let just add it back mongodb adapter with
1:10:00
client promise and uh I wanted to add a secret here and our secret will come
1:10:09
from uh our environment file so let's do
1:10:15
just secret without key just secret like this and now let's add a secret to our
1:10:21
to our EnV so here I'm going to add secret and our secret will be just some
1:10:29
random string doesn't really matter and now let's restart here our
1:10:35
environment and let's see if it helped so now I'm going to refresh here and the
1:10:42
page and let's see I will log in with Google let's log in and now I am logged
1:10:47
in I'm still on the login page but here on the header you can see that I am Lo
1:10:53
logged in so uh let's go to the homepage and uh well this seems to work
1:10:59
we have our logout button uh but now we need to fix this part right so uh let's
1:11:07
do this let's go to this part of the page so let's see inside our app let's
1:11:14
go to page and as you can see here inside page we have this form and uh we
1:11:23
have this form and here we have this input and the button so what I want to
1:11:29
do with it is very simple when you put something here like test one two three 4
1:11:37
and you click this join for free I want to save this uh to local
1:11:43
storage or URL and then I want to redirect to the login page to the Lo
1:11:48
Google uh login page and then when you come back you will have we will have this information about test 1 2 3 4 that
1:11:56
you chose this name right so um how can we do this um well first thing is uh as
1:12:05
you can see we are already logged in so uh maybe we shouldn't see this uh this
1:12:11
form I don't know uh let's uh first look out and uh yeah then we definitely
1:12:18
should should see this form Let's uh assume we are not logged in then and we
1:12:24
have this form and this is our first visit and we want to have a username of
1:12:30
I want to have a David with W here and when I click join for free it should uh
1:12:36
redirect me to the login page and it should remember this uh username so how
1:12:42
can we do this because we will have on click on this button on click we will need to have a client component and this
1:12:51
homepage as you can see is a server comp component because we don't have uh any
1:12:56
use client on the top so uh to fix it uh first I will remove this header import
1:13:02
that we don't use anymore and now uh let's maybe uh move this whole form
1:13:10
thing outside of this uh page component right so here we have this form and uh
1:13:17
let's cut it from here let's save it so now it's not here and let's put it as a
1:13:22
separate component so we have a components here and we have buttons
1:13:27
maybe let's create a new directory called the forms why not and inside
1:13:33
forms let's do new file and let's do hero form.
1:13:38
JS and here side let's do export default function and let's do hero form and
1:13:46
let's do return and inside return we just uh paste this and this uh now let's
1:13:52
use this this one on our page so here I'm going to do hero uh form and it automatically
1:14:01
imported this for me so this is nice now let's uh go back inside and the first
1:14:08
thing is that we want to make it a client component so I'm going to add
1:14:13
here use client and uh that looks fine yes and now uh I can add on click and so
1:14:24
on for uh for the buttons so this button is type uh submit so maybe I will not
1:14:32
add on click on this button and instead I'm going to add uh on submit on the
1:14:38
form so let on submit and um well um
1:14:43
maybe let's put this as a separate function here function handle submit yeah handle submit and it will be run
1:14:51
here handle submit and now uh first we want to grab the
1:14:57
event that is passed here and we want to prevent default um because we don't want
1:15:02
to send the uh form the default way instead what do we want to do uh we want
1:15:10
to grab the value of this input and uh there are many different ways of doing
1:15:18
this uh on other uh tutorials on other projects I'm always is doing a state for
1:15:24
this so we can do uh like usern name and set
1:15:30
username equals use State and from react default will be empty string and here we
1:15:37
could just do something like this um value equals
1:15:42
username and uh when we do on change on change we will grab event and we set
1:15:50
username to be event Target value and this way we can do do we can do console
1:15:55
log of username and uh if I do inspect here uh
1:16:00
so we can open console let's see if I put my name here join for free we have
1:16:06
username David so that is correct uh but there so this way we can grab username
1:16:13
from the input but there's also another way and let me remove this and let me show you uh I'm going to remove this
1:16:21
state and uh this username as you can see is uh empty now so we cannot use
1:16:26
this console log but as you can see we have this event Target event object so
1:16:32
we can do something like this event uh console log event and if I put uh
1:16:38
something here we get event and the thing is that we have Target which is
1:16:43
the form so we can do something like this const uh const form not from form equals
1:16:51
event Target and we can even grab the input equals uh uh form and we can find
1:16:59
it this way we can do query uh selector input and we can do input value like
1:17:06
this and now if I go to console let's clear everything let's put my name here
1:17:12
and as you can see we can get the name uh this way too so just input value um
1:17:19
there are many ways of doing this in react most of the times you will use uh
1:17:24
State um but well this time let's do this uh this way so we have input and
1:17:30
we'll grab the value from there so uh let's do const username equals input
1:17:38
value all right and uh now when we submit uh when we click here join for
1:17:44
free we want to uh redirect to the login page so let's do sign in and the
1:17:51
provider will be Google Google goal because this is the only provider we have for now and there are also some
1:17:58
options let me uh jump here inside and let's see what are um the options here
1:18:06
so here we have the options sign in options Let's see we have callback URL
1:18:11
and redirect let's try with the redirect so let's go back to our hero form and
1:18:19
let's pass here redirect and where uh where do we want
1:18:24
to redirect we want to redirect to something that will include this
1:18:30
username so let's do something like this it will redirect to a page called
1:18:37
account with a query string that will be username equals and then our username
1:18:44
and we probably need to add a weight here because it's an ASN function and we will need to add asnc here right so this
1:18:52
should work now and uh well let's do another thing that if the username is
1:18:58
empty we don't do anything so if username length is uh Z zero or we can
1:19:06
do bigger than zero then we will do this sign in so let's do bigger than zero
1:19:11
then let's put this sign in here inside so now if I click nothing happens uh but
1:19:18
if I put my name here join for free it redirects me to this login page and if I
1:19:25
login I am redirected to wall the the homepage so this didn't work uh like I
1:19:33
wanted let's try again log out let's put join for free let's log in no didn't
1:19:39
work so and because this solution with redir doesn't seem to work I'm going to
1:19:46
do this uh other way let's get rid of this redirect and uh well here we know we
1:19:54
have a username and we want to log in but before we log in we want to save it somewhere so for this I'm going to do
1:20:01
window um local storage and set item and
1:20:07
uh we are going to set item on local storage called well um we can call it
1:20:13
like username or wanted username wanted username or maybe desired username
1:20:21
something like this let's do this with uh like this and we will set it to
1:20:27
username and this looks fine so now let's save it and now let's see if I put
1:20:34
my name here join for free I will log in and as you can see I am logged in and
1:20:39
now let's go to our here to our application and to local storage and as
1:20:48
you can see here we have a a desired username and David so that's fine so um
1:20:56
if we see this form and or if we are on the
1:21:01
homepage we can do like this if we see this form and we have a resided username
1:21:08
and we are logged in then we should be redirected right right so um so let's do
1:21:14
this um I'm going to add and use effect hook here from react let's add Arrow
1:21:22
function uh nothing here no dependencies because this should run when uh our hero
1:21:29
form renders and uh here we want to check something like this if we have local
1:21:36
storage so let's see if we have local storage inside window then we want to
1:21:42
check if we have and we have a window local storage get item and we want to
1:21:49
get um desired username so we check if it's h if we have something inside maybe
1:21:56
we can put it uh like in several lines that would be easier to read something
1:22:02
like this okay and um so we have local storage and local storage get item this
1:22:09
is true so we have a string or something and then we will do const username
1:22:16
equals and let's just get it from the S username from the local storage it should be user
1:22:23
name and then what do we want to do with that username then we want to redirect so let's do
1:22:29
redirect let's import it from whoops let's see let's import it from yeah next
1:22:35
navigation and let's see if this will work so we want to redirect to slash account with a username being this
1:22:45
username and before we will do this redirect I also want to remove it from
1:22:51
the local storage so let's do window uh remove I think it was remove no window
1:22:57
first local storage and then um remove item desired desired username yeah so
1:23:05
now as you can see we got redirected to the account and then username equals uh
1:23:11
David so that is nice now uh if we go to the hom page it will not redirect us
1:23:18
again because it removed this uh desired username from the local storage but if I
1:23:25
let me log out if I try again David join for free it will log in me and set it
1:23:31
sets this local storage and then when I come back it renders this uh use effect
1:23:37
runs and as you can see we are grabbing the username from the local storage and
1:23:43
we are removing this and then we are redirecting to this username so account
1:23:48
question mark username equals David all right but we don't have any page for
1:23:53
this account so let's fix it um let's see let's put new uh directory inside
1:24:01
our app and let's put account and um inside let's put the new
1:24:08
file and let's call this one page not call it should be page so page JS and
1:24:14
let's do export default function and let's call this one account page and
1:24:21
let's do return uh div maybe here inside that should be good for now yeah so uh
1:24:28
this uh Works let's put maybe account here and well the first thing is that we
1:24:36
want to check if we have a Desir username of or even if we are maybe
1:24:45
logged in right so um this is Page and this is a server component uh uh for now
1:24:54
so um so there is several ways of doing this first maybe we won to have
1:25:01
information about the user because this is account page and we know if someone is logged in or not so first let's do
1:25:09
something like this const session equals wait and let's grab our uh server side
1:25:16
session get server get server session and here just off option
1:25:23
yes and we need to add the export default ass sync function yeah and uh
1:25:30
this uh should work now so we have account and we can maybe print our
1:25:38
account um usern name right because we are logged in so we have account and my
1:25:45
name here all right so uh what else do we want to have here well we need to
1:25:52
grab this uh desired username maybe we shouldn't call it desire just username
1:25:58
and instead we should call it the desired username so let's go back to here and let's change this username to
1:26:06
desired username and let's also put change it here so we don't need to log
1:26:11
in and log out and log in again all right so let's go back to our account page and well now we want to grab this
1:26:20
desired username so uh how can we do this well uh we can try to grab the URL
1:26:29
first so let's see if we have any type of request here so let's do console log
1:26:35
uh request request and uh let's see inside our console here we have as you
1:26:42
can see parms and search parms uh inside this request so we can grab search pars
1:26:50
and uh inside search par we have desired username so instead of just grabbing all
1:26:56
the request let's grab our search parms and uh let's do something this uh
1:27:03
our desired desired usern name equals
1:27:08
search pums and let's do um desired username yeah so now let's try to print
1:27:16
it I'm going to do break line here and let's do desired username equals uh
1:27:23
colon and let's print our desired username and let's see if this will work
1:27:30
as you can see it does so um we have session about the loged in user and we
1:27:35
have desired username from the uh URL here we can add a question mark in case
1:27:42
search bance is empty or something uh yeah but this uh should work now so we
1:27:49
know if someone is logged in or not and we know the desired URL there are some
1:27:55
edge cases like for example if we don't have any session so if we are not Lo in
1:28:00
and you go just to SL account page what should happen well I don't know let's see first so U as you can see now I'm
1:28:08
not logged in anymore and so the account is empty but the usern name is David so
1:28:13
I'm not logged in I think I shouldn't see this page at all so let's do
1:28:18
something like this uh here let's do if there's no session and then let's do
1:28:25
just redirect and redirect to the homepage and now let's see we have been
1:28:31
redirected to the homepage because we are not logged in so let's try again grab this uh desired username and let's
1:28:40
login and we are redirected the account with the desired username of David right
1:28:46
so um now this works we check for session first and uh this looks fine so
1:28:53
now for the most popular case that you want to register a new account we should
1:29:00
have uh some kind of form here with the uh username right and uh that should be
1:29:08
that should be it so uh let's create maybe a simple uh input for this um
1:29:15
instead of printing this uh account and desire username we want to print input
1:29:22
so you can pick your username right but uh then when we have a username we need
1:29:30
to store it some somewhere right so first let me open my database and uh for
1:29:37
now we have only users accounts and
1:29:43
sessions inside our um database and it all it all comes
1:29:49
from the uh next out so maybe it would be nice to have something like profiles
1:29:57
so uh so you can log in and you will have an account a user and a session but
1:30:05
for each grabbed username you will have a profile or maybe let's call it a page
1:30:11
yeah I think page will be um will uh work best so we want to have a page that
1:30:19
will have the username or um just url
1:30:24
url of Slash David right so uh I'm going to uh first Define an input that we can
1:30:33
put uh that it will be prefilled with this David here in the middle and with a
1:30:39
button here underneath and claim this username so let's this so let's do this
1:30:45
um well maybe here underneath I'm going to put a form and I'm going going to first I will
1:30:53
remove this action I'm going to put an input here with uh with uh let's say
1:30:59
placeholder let's add a placeholder it's always nice to have a placeholder a
1:31:05
username and a button here underneath and claim username yeah now let's see
1:31:12
how it looks like it looks really bad uh well first we want to uh put this
1:31:21
desired username into this form and we want to style it a little bit so first
1:31:29
let's style it and the and the first I'm
1:31:34
going actually to remove this account and desired username and so we have only this form and let's maybe add a H1 here
1:31:43
so we will have a page that looks like a login page so here let's add a title
1:31:50
that will say uh grab your username yeah so we have
1:31:56
something like this and we want this to be big let's see maybe our login uh page
1:32:03
and uh maybe I will just copy this and I will put this here and I will rename
1:32:10
this to grab your username uh so we have something like this and now uh let's see on the login
1:32:18
page we have only a button to log in with Google so and but we have also this
1:32:25
paragraph that we can maybe reuse here as well so let's add a little bit more
1:32:31
of text saying uh choose your
1:32:36
username uh and that will be it for now now we have an input and we have a
1:32:43
button so let's start with an input I'm going to add some class names here so
1:32:49
first the class name will be we want to display by block let's add a padding of
1:32:54
two padding on the padding will be two and uh what else let's see how it looks
1:33:02
like uh it looks like this well the first problem I have is that it's not
1:33:08
centered so let's add MX Auto so maybe it will be centered yes it is now um uh
1:33:17
let's see I want to do the styling similar to this uh input here or at
1:33:24
least I want to add a little bit of uh border and I think this time I will do a
1:33:30
border thing so just let's add border and yeah I think it looks fine now let's
1:33:37
do something with the button we want to make it more like uh let's do class name
1:33:45
and we also want to have type of uh submit and for the class names
1:33:52
well what do you want to have here for the class names I want the button to be
1:33:59
a blueish so let's do uh background uh let's see blue 500 uh text white we want
1:34:08
to have some padding so let's do padding on the top and the bottom will be two
1:34:13
and on the sides let's do at least four see yeah so we have something like this and let's do display of block and let's
1:34:22
do MX Auto so it will be centered so now we have something like this uh doesn't
1:34:28
look that good uh I want to have some spacing and the length of the button
1:34:33
should be the same like the length of the input so how can we do this first
1:34:39
let's add some spacing here maybe first we can add the div that will hold both
1:34:46
uh the input and the button so let's put input and the button into this div and
1:34:53
now we can do something like this we can do that the input will take the full width and we can do the same with the
1:35:02
with the button so now it takes well all the wave here and we can decrease it by
1:35:09
doing Max weave on this div or there's uh so we can do Max weave of Xs and now
1:35:17
it will be decreased and we can do MX Auto and now it's centered we can add
1:35:25
margin on the input so we can do like margin buttom of four or maybe something
1:35:32
small letters do only two and this works um and this works and I think it looks
1:35:41
uh it looks fine I'm going to unclaim your usern name yeah and uh maybe even
1:35:48
the text here should be centered so so on the input let's add text Center and I
1:35:56
think yeah it looks nicer so uh this works fine but what I
1:36:02
want to do is this desired username David should go inside into this input
1:36:08
so do we have something like default value yes we do uh we don't need for now
1:36:13
the value or state for this um for this input because then we will need to have
1:36:19
state and we would need to change the This Server component the client component and we don't want to do this
1:36:25
let's first do uh desired username and we have our uh David here so if I
1:36:32
refresh yeah we have David we have claim your username and this looks fine now uh
1:36:39
so now we have a working uh grabbing from the homepage username from the form
1:36:46
and we're directing after the log to this thing with the filling in input the
1:36:52
next thing will be actually uh so we uh fix so we can check if this username is
1:37:00
uh not taken by uh someone else and that when you click on this thing on this
1:37:07
button it will register a page for us and um Al what else we need to do is
1:37:14
that if we are logged in with a user we need to check if that user doesn't have
1:37:20
already a page with this uh username or with this URL maybe here would be nice
1:37:27
also to uh have an arrow to the right so
1:37:33
I'm going to add it from her icons let's search for right and well I don't know
1:37:41
which one will work better but I like this all right uh so I'm going to go
1:37:49
with this one looks fine too I'm going to take the one with the circle or maybe not without Circle without Circle and
1:37:57
let's go to components let's put uh directory uh icons and inside icons I'm
1:38:04
going to put a file called right um or maybe let's do icon no let's do right
1:38:11
icon. JS because with the homepage and so on so let's do write and then icon
1:38:17
let's do here uh export default function WR icon and here let's do return and
1:38:25
let's paste what we have copied I always grab this default class names and I
1:38:30
remove them and I put a class name as a constant with capital n and I put this
1:38:37
as a property that we can uh reuse so we can do something like this and the
1:38:43
defaults will be those uh and now let's go to the back to
1:38:48
the account page and on this button here uh let's cut this let's put this into
1:38:55
span and here next to this I'm going to put our right uh
1:39:01
icon and let's see yeah the thing is now that we can do something like this class
1:39:07
name and we can change the defaults to I don't know WID of 12 so it will be much
1:39:13
bigger if we want to but uh I think that uh the default is good yes but now we
1:39:20
want to put next to each other so let's do something like this uh I'm going to
1:39:25
add Flex here so now it's next to each other and uh let's see now I want to add
1:39:33
a little bit of cap of two let's say so we have some spacing from the text to
1:39:40
the between the text and the icon now let's also add items Center so it will
1:39:46
be uh centered vertically and now let's add that it should be in the middle so
1:39:52
justify Center yeah and now it looks better yeah
1:39:58
I think it uh looks fine yeah like I said the next part will be so we can
1:40:03
check if this username is already taken or not and here underneath we should uh
1:40:11
when you type like David or if you change to David to or something like this uh it should show here underneath
1:40:19
if it's taken or not a red box or something and with this button we should
1:40:24
register a new page let's say it will be a page collection here and we will have
1:40:31
a page with usernames and links and so on so this will be like the next part
1:40:37
all right before we will proceed I want to show you how our database will look like so let's go to diagram and entity
1:40:45
relationship let's remove everything and we start with a users collection because
1:40:52
this is what we get from next out and we get stuff like uh ID and we have name
1:40:59
that is a string is and we have an email and we have an image because we get it
1:41:07
from our Google authentication provider right uh so we have our users what else
1:41:14
we need to store we need to store information about our Pages pages is
1:41:20
let's say I'm a user I'm a logged in user with my Gmail and I want to create a page that
1:41:26
is SL David so for example when someone visits uh this page uh with URI SL David
1:41:35
they will see my page that I have created so um first thing pages will
1:41:41
have is U that will be a string so for example my page will be SL David and
1:41:48
then we also need to know who is there owner so let's say it will be a string and this will be an email of a user who
1:41:56
created this page what else we will have like links let's say it will be an array
1:42:03
we will have some kind of buttons it will also be array and maybe color or
1:42:09
theme let's do maybe theme it will be a string and uh that's basically it we can
1:42:17
have more uh properties later on if we need some more customization but this is how the
1:42:23
structure will look like so we have users and we have pages
1:42:29
and another important collection that we will need inside our database will be
1:42:34
events and what do we need events for uh we need events for analytics let's say
1:42:41
that someone visits my page and I want to know about this visit so when someone
1:42:47
visits a page I want an event to be created inside events
1:42:52
collection and same thing with for example when someone clicks a link
1:42:58
inside my page I want to know okay someone clicked uh on my page and I want
1:43:03
to know what link has been clicked and when and so on so uh for the events the
1:43:09
first and the most important part will be type of event so uh it will be a string but it will be either a click or
1:43:17
view so for example when someone just visits a page it will be type uh view
1:43:25
but if someone clicks a link the type will be click right then I need to know
1:43:32
what was the page was it my page that I created or was it someone else's page so
1:43:39
I need to pass here page it will be a string it will be the URI I will connect
1:43:46
it in a second and then in case this is a link that has been clicked so if type
1:43:52
is click on my page I want to know what is the URL of this uh of this link that
1:43:59
has been clicked all right so now let's connect those three collections together
1:44:05
so first we have users and the pages so
1:44:11
in theory one user can have many pages but to make our app a little simpler we
1:44:18
will do that one user will have only one page so let's do users and we are going
1:44:24
to connect it with email so the owner here will be the email address of a user
1:44:30
and we have one to one relationship here so let's do users email we'll have one
1:44:37
Pages uh owner so one user will have one
1:44:42
page so this owner property inside pages will be an email and if we go to the
1:44:49
emails to the users we can find our user with this email address right so now we
1:44:57
know how this will be connected we will have pages and in the owner property we
1:45:03
will have an email and using this email here we can find information about our
1:45:09
user so the name the image and so on now let's try to connect our pages with
1:45:15
events so let's see uh we created events to know what happened on a specific page
1:45:23
and the our connection here or our relationship will be H between this page
1:45:30
and this page U here so um one page can
1:45:36
have many events so let's do page URI and one page can have many events
1:45:44
and we will connect with page property here here should be pages right and now
1:45:50
we have our diagram and we can see that the primary key for our pages will be
1:45:58
the URI so for example this will be slash David or slash I don't know the
1:46:05
name of your page and this key will be a string and it will be the same thing
1:46:11
that we are going to use here so for every event that we create every click
1:46:17
every visit we will uh we will say information like let's say someone
1:46:23
visited a page so the type will be visit the page will be for example SL David
1:46:30
and the URL will be well the same SL David when someone clicks something on
1:46:35
my page let's say uh a link to my favorite library on yarn.com and the
1:46:44
type of event will be click because they someone clicked a link on my page the
1:46:49
page will be SL David and the URL will be yarn.com something something so this
1:46:56
is how uh our database will look like it's uh it's really simple but uh
1:47:02
there's a lot of functionality that we can build with this so now be because we
1:47:09
don't have any Pages yet uh collections with Pages we cannot check if this is
1:47:15
taken or not so let's now first focus on uh grabbing this username and creating a
1:47:21
page for us with this username so um in other TOS I'm doing like an API version
1:47:29
that we are sending this with axios or fetch but this time because it's nextjs
1:47:35
14 and uh and we should do more server components I'm going to uh put here a
1:47:42
server action so what it means is that we can do something like this for this
1:47:47
form we can add an action and but this action will be an assing function so I
1:47:56
can put a Define an assing function like this as sync function function and
1:48:03
handle uh handle form submit and here we
1:48:08
will have form data that we can console log uh form data we can maybe put those
1:48:17
in curly brackets here and here let's put our handle form submit like
1:48:24
this and uh now let's see functions cannot be passed directly to client
1:48:30
components unless you explicitly expose this by marking this with use server
1:48:35
right so this is a server component because we are using this good server session and so on and this is an aning
1:48:43
component as you can see but they are telling us we need to add here use
1:48:48
server anyway to mark it as server component now let's see if I refresh um
1:48:55
sorry it shouldn't be here maybe we can have it here but what they meant was that we need to put it inside the
1:49:03
function so now let's see if I refresh no still nothing handle form submit
1:49:08
maybe we need to put it outside so let try to put it here and here we have some
1:49:17
issues and let's try to refresh this now still the same error functions cannot be
1:49:24
passed directly to client components unless explicitly Expos it by marking it with use server this is not the client
1:49:32
component this is a server component and we marked this function with use server
1:49:38
but uh let's try it uh different way maybe the issue is that we shouldn't have it in the same file so to fix it
1:49:46
I'm going to do a new directory here inside source weave actions inside and
1:49:53
the actions as a new directory and let's call this file uh let's call this file
1:50:01
um let's call this action grab username JS and let's grab this and let's put
1:50:10
this here and uh we want to export it as a default and the function name doesn't
1:50:18
really matter here but let's put the same as on the file name so grab
1:50:24
username and now let's try to import it so here we don't have this uh anymore so
1:50:32
let's do grab username and like this and it's imported here as you can see now
1:50:38
let's see still nothing let's try to restart the environment see if it helps
1:50:45
right so the issue here is actually that uh for this uh server function let's go
1:50:54
to this grab username we need to put this use server here on the top of the
1:50:59
file and now as you can see it works so it should console log this form data
1:51:05
let's see if this will actually work if I do claim your username we have form
1:51:11
data and it's an object so uh let's try to grab something from it so let's do
1:51:19
conso log or maybe not console log um let's go first to our account page to
1:51:25
see the form to see the input as you can see on this input we don't have any name
1:51:31
on this input so I'm going to add it name username and now let's see if this
1:51:36
will change anything if I click here we have a well more information here so
1:51:43
let's go to grab username and let's maybe try to do form data and let's get
1:51:50
username and let's see if this will work if I do claim your username as you can
1:51:56
see we have this David here so that is uh nice and now we can just grab this
1:52:03
username uh like this const username equals uh this form data get username
1:52:11
and now we can save it to our database right so I was thinking maybe we can
1:52:17
call it just pages so um for this I'm going to add the
1:52:24
models so let's do models because we are going to use mongus models and let's do
1:52:31
a new file and let's do a page.js and let's do here first schema
1:52:39
const uh page schema equals new schema
1:52:44
uh schema we don't have it because we forgot to install mongus yarn add on
1:52:51
goose and now let's do new SCH schema let's import from mongus yes and
1:52:59
now for the schema we want to have also here um time stamps so the time stamps
1:53:06
to true I think it should be default by now but well maybe some people want to
1:53:12
save some bytes on the spacing on the databases but for our schema what do we
1:53:18
want here well uh we want to have a username and it will be uh let's define it it will be
1:53:26
type of string it will be required and uh we can add something
1:53:31
like this minimum I think it will be minimum of one and uh let's do also that
1:53:37
it will be unique so let's do unique to True right and that should be it now uh
1:53:44
what else for the page well uh for now um for now we don't need anything we
1:53:52
just need to have a page with a username uh or maybe we can call it just a name
1:53:58
we can call it a name or username doesn't really matter or maybe we can call it U maybe we can call it U and
1:54:05
will be more proper right so now let's create the model so let's do const and
1:54:10
let the uh page and the equals let's first check for models if we have here
1:54:19
um uh our page otherwise let's just do a new model model function with a name of
1:54:27
page and our page schema and we want to export it of course our page model so
1:54:33
let's go to grab username action and here let's do something like this we
1:54:39
want to grab this page and we want to create uh with this username but uh we
1:54:47
call it here inside page we call it URI so let's put username as URI let's add
1:54:55
weight here and the result of it uh let's call it maybe page document and uh
1:55:03
well here we can just do return page document or we could just do return here
1:55:09
instead of doing const page document we could just do return and uh this all
1:55:15
right so uh so now what uh now we are returning this let's see if we can well
1:55:23
use it this returned thing so uh let's go to
1:55:28
our um account page and here we are having this uh search pars and let's
1:55:36
also grab all of the rest in case we will do some we will have something
1:55:41
inside and uh let's see now we are running this okay let's go here I will
1:55:50
do for now I will open just console here console and let's refresh and um now
1:55:58
let's see here we should have a console log of the no pars here because we are
1:56:04
console loging this rest but let's see if something will happen if we'll do
1:56:10
something like this so I clicked the claim your your name and uh nothing
1:56:16
really happened and uh actually it did we got an error because uh we got an
1:56:25
error from our database because we were not connected so let's go back to our
1:56:31
grab username action and here before we will create a new page Let's do mongus
1:56:38
let's import mongus and let's do connect and we want to grab our connection URL
1:56:45
from EnV and it's called just URI so let's use use it here process and
1:56:52
let's do that EnV and that U and uh now it should work let's see I will
1:56:59
open console even here let's do like this maybe and let's claim your username
1:57:05
and let's see what will happen and as you can see we get some
1:57:12
warnings and uh let's see what those warnings are about only plain objects
1:57:18
can be passed two client components from server components so it looks like this
1:57:25
ACC page is still kind of client component so we don't need this and uh
1:57:32
because we are um using this server action and here we are returning this
1:57:40
document uh they say it's not the plain document plain object so to fix it I'm
1:57:46
going to do like this uh page document equals this and this page
1:57:52
document is not a plain object and that uh that's what it's complaining about so let's do return and let's do page uh
1:58:01
document let's see if we can do a function on it called Json right now
1:58:07
let's see if I can add a digit here and now let's see this function doesn't
1:58:14
exist so let's try to two Json think it was this way and and let's try again
1:58:20
claim username still we have the same error I think there's another uh
1:58:28
function and I think it was like something to plain object maybe um let's
1:58:34
see two I think it was to object and now let's try again I'm going to refresh
1:58:40
here and let's put some numbers claim username and uh we still got the same uh
1:58:49
problem problem there's also another function that we can try called the lean and it be it will be a lean object then
1:58:57
let's try with ASDF and some numbers claim and uh now it's better because we
1:59:04
get a different error uh but this doesn't work and well uh one thing that
1:59:11
always works is to just do Json stringify page document and before we
1:59:17
will do return it we will do Jon parts so let's uh try this way and this way
1:59:24
always works so what we do we first stringify and then we parse it back so
1:59:30
it will skip all the parts that are not plain objects is so let's do some
1:59:36
numbers here claim your username and uh let's see and no errors so far and I
1:59:42
think I clicked to claim the username let's try again if I add something here
1:59:48
yeah we have post and and it's 200 and uh well it looks fine we only get the
1:59:54
parms here from the let's see from the rest so nothing so we don't have any uh
2:00:02
response from the from the server function but that's not uh that's not the problem what we can do is uh let's
2:00:10
go here let's go to users let's refresh all of the collections because we get
2:00:17
the pages here as you can see I created several here so we can even here on this
2:00:23
page we can just use our page uh page model so we can uh grab it but we don't
2:00:31
want to grab the the latest one we want to have the value from uh from our uh
2:00:40
server action right there's a way of doing this and it's uh called the use
2:00:47
form state and uh to do this I will first put this
2:00:53
form as a separate component because if we want to use form state it needs to be
2:01:01
inside this uh component so first I'm going to grab this and I'm going to put
2:01:09
this as a separate component inside my components and forms and here I'm going
2:01:16
to do new file and uh username form. JS export default
2:01:23
function function username form and let's do return here and let's paste
2:01:31
this now uh we don't have this desired to use a name but that's not a problem
2:01:37
we can import it uh or we can pass it sorry so let's go back to the page here
2:01:43
and let's put here username form and let's pass this uh desire
2:01:49
desired usern name to be desired username and now we can grab it from the
2:01:56
props here desire username so that's a go cool grab username uh action has been
2:02:05
imported here so that's fine we don't need this right icon and we don't need
2:02:10
this grab username now let's see if inside our username form we can use uh
2:02:18
our form state so let's do const and let's do state here and uh form and uh
2:02:28
form form action or actually will not need the form action we can just paste
2:02:34
it uh we can just uh pass it for the State uh we are going to do use form uh
2:02:42
State and we want to import it from react so let's do import and and um to
2:02:50
use form state from and I think it's react D yeah use form State and let see
2:02:59
there is an error here cannot resolve it cannot find and this is because it's an
2:03:06
I think it's an experimental feature uh for now so I'm going to grab it uh with
2:03:14
uh the experimental experimental uh you use uh form State as
2:03:22
use form State okay and now as you can see uh this looks
2:03:27
fine and uh now let's see I'm going to do console log and state and now let's
2:03:35
see if we will see anything so let's go here and use form state is not a
2:03:41
function okay let's try with just um use form state will it work this way yeah it
2:03:49
kind of did so there's no need to do this with experimental something but
2:03:54
instead we get this error so you are importing a component that needs a use
2:04:00
form state so we are importing this it only works in a client component but
2:04:07
none of its part are Mark marked with use client uh so let's try by putting this
2:04:14
as use client and let's see if this will work so uh let's see I'm going to open
2:04:20
here inspect console and let's do some random string numbers claim username and
2:04:29
I think nothing happened let's try again claim username and we get a duplication
2:04:35
error and that's not a problem let's try again let's do something like this claim
2:04:41
username okay uh let's try again funny that I put the some the same numbers
2:04:48
let's let's clear here claim your username and it kind of work let's see
2:04:54
what we get here we get State undefined but uh it's undefined because
2:05:00
we don't put this uh server action here so let's put it here and let's clear
2:05:06
here let's open network clear let's try again here let's put some random numbers
2:05:12
and this works fine but we didn't get anything uh from the state let's try
2:05:19
this way think when you put it this way you need to have another thing um and
2:05:26
you need to distract this form action that you should use here instead so
2:05:31
let's put form action here and now let's see network let's clear everything let's
2:05:38
do like this some numbers claim and well it didn't work so let's
2:05:46
see what's the problem cannot read properties of undefined reading get okay
2:05:51
let's uh try again if I put just some random username clear everything it
2:05:59
looks like the form data we are sending is just uh empty but if we use here grab
2:06:06
username then uh then it's fine so let's uh try again let's refresh clear here
2:06:13
everything and then it works and it the console the state is is actually
2:06:20
undefined let's use another hook here const and let's put info equals use form
2:06:29
uh status status yes and that should be
2:06:34
it uh but the problem is that this and I think even this needs to be inside form
2:06:41
somewhere here so we cannot use it this way and uh we need to to have uh we need
2:06:50
to have it uh somewhere else so when we are grabbing a username uh if it works
2:06:58
then we want to maybe redirect to this account and then slash the page so uh
2:07:06
there are two scenarios here first is that username is taken maybe we can fix
2:07:11
this one first so um if it's taken let's say I'm going to put here test for now
2:07:19
it's not taken and this will work but if I refresh and I put test again then it's
2:07:26
uh throws an error right and uh to fix it we want to add a try catch on here
2:07:33
try try to create it and then return it but if it doesn't work let's catch an
2:07:39
error and let's just return nothing all right uh what what this will do is that
2:07:46
if I put um test here here and I click it sends but nothing happens so uh the
2:07:54
nothing happens because this one is already taken and it throws an error but it stops here we catch the error and
2:08:00
nothing happens so let's fix this issue first shall we let's go to username form
2:08:09
and what should happen if we have used a name username that is already taken we
2:08:16
should have an error some maybe here saying the username is taken or maybe
2:08:23
here between the button and the US and the input so uh we here we have the input here we have the button and here
2:08:31
in between I'll put a div with some class names like background uh red
2:08:38
border border red uh 500 or maybe 600 do
2:08:44
500 let's add some pading of two and takeing
2:08:49
username and now it shows all the time let's add some even margin bottom of
2:08:55
two and let's see here I will do just 100 or maybe 200 yeah um and uh I want
2:09:06
to put this in a separate component so I will put a new directory
2:09:14
here called uh maybe let's called form result s Form results or maybe form
2:09:20
components I don't know Form results form results and here inside I'm going
2:09:27
to do um username username form result. JS
2:09:35
and uh maybe we should have it with capital u yeah so let's do uh username
2:09:42
and here let's do export default function function username for form
2:09:48
result yeah return and here let's return just a div or maybe we can just paste
2:09:55
everything from here so let me grab this not here this thing this div and let's
2:10:03
use username form uh result and let's paste it here and uh
2:10:10
now it displays here let's also add the text Center it always displays but it
2:10:16
should display only if there was an error so here inside because it's uh
2:10:23
it's inside our form because here we have the form and this is inside the
2:10:28
form then here inside we can use uh our form state so const
2:10:35
State uh state from use form State and
2:10:42
let's import it manually here import use form State from uh from react I don't
2:10:51
know why it doesn't import this for me automatically but uh we use form State
2:10:58
and uh well uh let's see if this will show anything console log State and now
2:11:05
let's see username form result we are returning a div uh should be sorry not
2:11:13
react it should be react D and now let's go to console as you can see it's
2:11:18
undefined but if I do test claim username still undefined let's see still
2:11:25
undefined let's let's see maybe we need to put this uh we need to import this
2:11:31
function here so let's do grab username our function and now if I put test claim
2:11:39
username still nothing here right so it looks like we cannot actually get the uh
2:11:44
the result this way but there I think there's a work around for this so I'm
2:11:52
going to remove this use form State from here from the username form result let
2:11:59
me go back to the username and here we have our grab
2:12:04
username function and what we can do here is inside this grab username
2:12:10
function we can do something like this instead of returning anything here let's
2:12:17
do uh like this if we can create then let's do redirect redirect to slash
2:12:24
account and then the account name so let's say um this username plus username and
2:12:33
if we cannot do this let's do redirect redirect redirect to SL account account
2:12:41
and then we an extra flag um usern name
2:12:46
taken equals one and then now let's see now we don't need
2:12:51
this page document we just need to wait here uh but this is this should do the
2:12:57
trick and now let's see let's go to username form here we have this username
2:13:03
result actually we can just uh put this thing uh let's copy this and we can put
2:13:11
this back uh to here and um let's maybe
2:13:16
comment this for now now like this and now let's see if I put test here it
2:13:22
should be taken so let's see uh it redirected me to this username taken
2:13:27
equals one so that is nice and if I refresh and let's do test let's do claim
2:13:34
your username and it redirects me here if I do something like else let's do
2:13:40
test and some random numbers uh and I click claim your username let's see what happens uh let's
2:13:47
try try again claim your username well looks like it worked but I haven't been
2:13:54
redirected let's see grab username I should be redirected to the account with
2:13:59
the username let's do return here and return here just in case claim username
2:14:05
I haven't been redirected let's try again SL account and let's pick uh
2:14:10
username let's pick a username that is uh empty that is available claim your
2:14:16
username and I'm redirected to the username taken equals one so there's an
2:14:22
error when I try to create this page so let me just do console log here for this
2:14:29
error so we can see what's uh what's the issue so let's do let's some numbers
2:14:35
claim username and let's see what's the issue form data get is not the function right
2:14:43
let's go to username form grab username this uh looks fine for me grab username
2:14:51
function this should uh work let try again test here we get next redirect um
2:15:00
error next redirect so it looks like we cannot really redirect to a different
2:15:06
page let's see once again if I take a taken uh this one is already registered
2:15:13
somewhere here test uh because I tried it many times claim your username
2:15:18
it redirects us to the username taken right let's get rid of this and let's
2:15:24
try with something unique something like this and let's see this inside our grab
2:15:30
username so if we can create it then it should redirect us to the account slash
2:15:36
and then the username maybe let's put it like this create created equals this and
2:15:42
now let's try if I claim username taken one okay that's simp seems to be wrong
2:15:49
uh let's see looks like we still get an error let's see let's do something this
2:15:54
let's don't catch this error no try catch and let's get rid of this and
2:16:00
let's just try to create and redirect and let's see what will happen if I add some numbers here claim username and now
2:16:09
it worked as you can see all right so something is wrong here with the try catch so instead of doing this try catch
2:16:18
I will first try uh see if this URL is uh taken so to do this I will do uh
2:16:27
const existing page document equals a wait page find one I want to find one
2:16:35
when the URI is same as this username and if it exists an existing
2:16:42
page document if it exists I want to uh redirect uh like this this if it doesn't
2:16:49
exist uh else I want to create and then I want to read direct to the
2:16:56
created and now let's see how this will work so if I do something let's go to
2:17:02
Just account page and Let's do let's do just test it should go to username taken
2:17:09
okay now if I go here and I go to test and some really random numbers uh it
2:17:16
works it goes to created right let's try to put it like this so it will go to
2:17:23
account and then the username so if I add something here it redirects me here
2:17:30
so that is now correct right let's go back to our username form and as
2:17:36
remember we have this div that we should show only if it has this uh username
2:17:44
taken one so uh what we can do here is that we can do here and if and uh an
2:17:52
easy solution will be will be to do location C includes uh and if it
2:18:00
includes uh username taken and and space
2:18:05
parenthesis and let's put this thing inside but let's uncomment here
2:18:11
everything and uh so now it's say username taken but if I remove it so if
2:18:18
I do something like this and if I put test it says username taken uh let's see
2:18:25
user name taken well looks like this uh didn't work but um well let's see I'm
2:18:33
going to do console log and uh here I will do location C and now it work but
2:18:40
but it's refreshed let's see I'm going to remove this and let's do test claim
2:18:46
username well it redirected but this have not been refreshed so uh well we
2:18:53
can create uh we can create the new pages but this error thing doesn't seems
2:19:01
to work and uh the problem is that uh we
2:19:06
cannot rely on the location gra so uh this is the next thing that we need to
2:19:12
uh fix here uh because we have new pages here it works for creation but even if
2:19:20
we direct to account and uh account and
2:19:25
username taken or something like this um we cannot update the state just with
2:19:32
this uh error in the URL okay so there is actually a way to uh get the value
2:19:40
from the from the result of this but um we cannot do redirects then but that's
2:19:47
not the problem because uh we can do something like this if it's existing we
2:19:53
can do return false and if it's not existing we want to grab this document
2:19:58
document equals this and maybe let's rename it to or maybe let's just return it here we don't need to name it all
2:20:06
right so no uh redirects here and now let's go to our username form and in
2:20:14
here we are using this uh grab username uh reaction but uh to grab the return value
2:20:23
of this we need to do uh something else uh I'm going to define a function
2:20:30
heeld here H called the handle submit
2:20:36
and as you know with this action we are using maybe we uh I shouldn't name it
2:20:41
handle submit because it's not some or I don't know here we get form data form
2:20:48
data we don't get event object we get form data because it's action not on
2:20:54
submit uh so as do handle submit and uh well here inside I'm going to add a
2:21:02
weight and grab a username with this form data and here I can do something
2:21:09
like this I can do con result equals this and then let's do console log and
2:21:16
then result and I'm going to add us syn here and now
2:21:21
let's see if I put test it says false and if I put test and some really random
2:21:27
numbers it will return an object and uh that looks uh really nice so we have URI
2:21:35
and that's the whole uh page document is so that is nice and with this we can
2:21:44
because now we have here use client we can have a state so let's do const and
2:21:51
let's have a state called maybe created if it's created or maybe
2:21:59
taken if it's taken uh taken and set taken and now let's do you equals use
2:22:07
State and default will be false but here we can check if the result is false then
2:22:14
we know it wasn't created and it's taken so let's do set taken to true and now we
2:22:22
can do something like this here we have this location all thing here we can uh
2:22:27
instead of this doing um we can do if it's taken okay and now if I do just
2:22:34
this is from my some kind of extension if I do just test I take an username if
2:22:39
I do uh test and those numbers then it worked but I forgot to clear this as
2:22:46
said taken otherwise if it's not false let's just do set taken to uh to false yeah so if I
2:22:54
add some random numbers it will clear this because it's not taken uh we can uh
2:23:00
make it even simpler we can simplify this we can do set taken and taken
2:23:06
should be only true if the result is false okay so now we can do something
2:23:14
this if I add something more it's fine but if I change this to just test take
2:23:20
an username uh we can maybe change the text here to something like uh uh this usern
2:23:29
name is taken yeah um and now we can
2:23:36
what we can also do is that if the result is true then we can uh if result
2:23:42
is true we can do redirect to another page redirect to another page like slash
2:23:49
account slash and then uh the username so we can go to form data get and usern
2:23:59
name and we need to import this redirect yes now it's fine so if I want to create
2:24:06
the user with something unique test David like this this should work and as
2:24:12
you can see it uh it did it worked and it redirected me here so that is nice so
2:24:19
now we can uh see errors here if I put test it's already taken it should well
2:24:27
it should first log log me in okay and now I can do claim your username it says
2:24:34
it taken and uh well it uh works fine one uh small thing is that on the
2:24:41
homepage I would like to check if I'm already logged in I shouldn't be redirected to the login page
2:24:47
instead I should be redirected directly to the page where I can uh uh grab the
2:24:55
username so let's go to Hero form component and it's a client component so
2:25:02
in here we first need to know uh if we are logged in or not but because it's a
2:25:08
client we will need to use session use session and let's put here um not with
2:25:17
don't need to put anything let's just try to do console log and let's see if
2:25:22
we can grab a session this way uh no we cannot because we would need to first
2:25:29
put session provider so let's see where is hero form used it's used on our
2:25:37
homepage let's put a session uh provider here yeah why
2:25:43
not uh session provider here and and uh now it should work react content is
2:25:50
unavailable in server components um so this is uh server
2:25:56
component and we cannot use server session provider here so uh let's do
2:26:02
something like this we can grab user here with a server function const
2:26:08
session equals use server uh use not use get server session and here I'll uh
2:26:17
options we don't need this session provider we are going just to pass this
2:26:22
here uh with um user to be session user
2:26:28
okay and now inside here form we will know if we have a user or not and in here we have this handle
2:26:38
submit and here we do this sign in but we can do something like this if we have
2:26:43
a user then we don't need to do sign in if we have have a user we want to do
2:26:48
just redirect redirect let's see if it's imported correctly yes redirect and
2:26:54
let's redirect us to slash um account
2:27:00
and then desire theed oh I cannot spell it desired
2:27:06
username equals and then username okay and if you not logged in then we uh you
2:27:13
need to First log in with Google um another thing is that if you are logged
2:27:20
in we don't need to save it to local storage so let's save it only if we need to log in so now let's see I will
2:27:27
refresh and use session we don't need use session here let's remove it and
2:27:33
let's remove this use session from here I'm logged in and I want username let's
2:27:39
say uh David 2 join for free and I'm redirected to the login page I shouldn't
2:27:46
be let's go to the homepage again and let's see here I'm going to uh print the
2:27:53
user first let's see here console log and I want to print the user and let's
2:28:00
see here inspect console looks like our user is undefined that's not correct
2:28:07
let's go back to this page homepage and here yeah I forgot about a wait and
2:28:15
let's do here as sync function and now we have a user it's console loging here
2:28:22
the user so now let's see if I want to Let's refresh just in case if I want to
2:28:28
have a David fre as username join for free we get an error let's see why what
2:28:34
happened and the error is next redirect okay something wrong with this
2:28:40
redirect uh redirect to here desired username from next navig ation we cannot
2:28:47
redirect let's see so there is some exception from here and we cannot uh
2:28:54
redirect okay uh let's redirect some uh different way so what we can do well um
2:29:04
this should work I don't know why it doesn't work redirect from um navigation
2:29:12
I try with nav Navigate no but we can try with router instead weird that this
2:29:19
thing redirect works here account and this one doesn't I will first restart here and
2:29:27
let's see what is going on here so um let's clear everything if I do David
2:29:35
five join for free I cannot because this next redirect doesn't work let's see if
2:29:42
I add return here no still error okay if I cannot redirect from here then I'm
2:29:50
going to do a state for redirection or I can use maybe router so let's do router
2:29:57
Router equals use router from next next navigation and instead of this redirect
2:30:04
I'm going to do just router push and let's push this as a new route let's try
2:30:12
with David five join and now it works I don't know why it didn't work with
2:30:19
just redirect maybe it has to do something with that uh this is a separate function
2:30:26
that we run on submit of the form and this is uh a use effect I no maybe I'll
2:30:33
will check it later yeah but now uh this thing works so when we are logged in we
2:30:39
don't need to log in again with uh another uh another time all right so now
2:30:46
now we can uh create um our Pages here and we get it inside our database so if
2:30:54
I browse Collections and I will go to Pages there's a page here that has a URI
2:31:01
of test somewhere here we can uh search like this URI to be uh test and it
2:31:09
should be here yes we have it and uh now
2:31:14
we can create and we can check if it's taken uh but if we already have one like
2:31:21
for example I have already registered test it's mine it was registered with my
2:31:26
account well then I should uh I should be redirected to that page right to
2:31:33
account and then test because I already have a a page so um so what I want to do
2:31:41
is that when we load this page this page is called um account page I want to
2:31:47
check if I already have a page and then if I do I want to be redirected to uh
2:31:52
that page account and then slash and then the name of the page or maybe we
2:31:58
can even just show the page here so how can we do this well first we need to
2:32:05
know if we already have a page and I have created many of those as you can see in the database the problem is we
2:32:12
have only URI inside the inside the model so we store only URI and we don't
2:32:20
know who created the page and this is the problem I'm logged in uh as my with
2:32:25
my Gmail account but I'm not saving this information that for example this page has been created with my Gmail account
2:32:33
so this is something I need to add here so I will add an owner and owner will be
2:32:38
type string and it will be also required and uh well the thing here I
2:32:44
will restart my environment and the thing here is that when we create a page
2:32:51
I'm going to add owner here and the owner will be email so for example here
2:32:56
will be here I will store my email Gmail email so I'm going to uh Delete all of
2:33:03
the pages here because I want to create new pages with uh with owners and now
2:33:10
let's do something like this uh let's go uh to this uh account page and here we
2:33:18
have this let's see desired username username form here we have this grab
2:33:23
username and this is a server action so let's see here we are trying to create a
2:33:31
page you can see we only put URI here and the thing is I want to add owner and
2:33:38
here I want to put the email so how can I uh get the email here to get the email
2:33:45
I need to well first here we only check if uh if it exists so let's keep it this
2:33:51
way here we check only if it exists and we want to check only by U here where we create here we want to
2:33:59
add owner so let's add owner and here I need to have email so let's do const uh
2:34:05
email but before we get email let's get it let's get session so let's do a wait
2:34:12
and let's do get server session with our
2:34:17
options and um now um from the session we can get the email so let's do s like
2:34:25
session user email I forgot about the dot here and this looks fine I'm going
2:34:31
to put this into a separate line so it be easier to read yeah this looks fine
2:34:39
and now if I will uh register for example a username David claim your
2:34:45
username and I think it worked we don't get any feedback let's see it's pending
2:34:50
okay and it redirected me to this/ David so uh everything worked fine now let's
2:34:57
see if I refresh the database here let's go to pages and as you can see I have
2:35:02
the SRI David and owner is my email here so that is good another thing I would
2:35:09
like to fix is uh some kind of uh well some kind of um loading so let me remove
2:35:19
this I'm going to remove all of the pages and I will go back to just SL
2:35:25
account and well if I put this and I will click claim your username it takes
2:35:32
like a second to run the server server function and what I want to do here is
2:35:38
inside this username form uh we have this button here that says uh claim your
2:35:45
username and what I want to do here is to do some kind of that it's loading
2:35:52
state so uh in this button if it runs so for example this function runs handle
2:35:59
submit uh I want to have a state for this that it's loading so let's do
2:36:05
something this const uh is loading and set is loading equals use State and
2:36:14
theault will be false here and now here we have this handle submit on the beginning we will do set is loading to
2:36:21
true and after this is done and we will do uh set is loading to false and now
2:36:30
with this is loading we can go to here and here we have class names for
2:36:37
loading um so maybe we can do something like
2:36:42
this um we can do disable and we can do disabled only if it's
2:36:50
loading right now um we have those class
2:36:55
names but I would like to do something like this if it's disabled let's do um
2:37:03
well not here maybe here we have text white or maybe let's do even with the background if it's disabled so disabled
2:37:11
the colon let's do background uh blue and let's do maybe 200 or 300 then we
2:37:19
have text white let's do that if it's disabled let's do uh text uh gray um
2:37:27
text Gray maybe 200 or let's see text Gray 200 yeah why not and uh now let's
2:37:35
see what will happen if I will put my name here and claim your username well
2:37:40
not much uh looks like this is loading uh didn't work uh um let me add this is
2:37:48
loading here is loading and if it's loading it will say loading otherwise it
2:37:54
will say not loading okay so let me remove those pages uh again or maybe I
2:38:02
can just create another page I will go back here and not loading test and I
2:38:08
clicked and I didn't see this uh loading thing let's see why here we have a
2:38:15
loading set is loading it's false then we have handle submit with the form data
2:38:22
with the set is loading to true and then after it's this grab username is done we
2:38:29
set it back to false let's see if we remove it what will happen so I'm going
2:38:35
back here and let's do test one two three claim well it looks like um it
2:38:43
looks like because we are doing this uh form action and then
2:38:49
redirect then it doesn't work but uh let's see what will happen if I comment
2:38:54
out this redirect thing so I'm going to back to account and let's do test uh
2:39:00
some numbers and then I have loading so uh that looks good let's try again test
2:39:07
some numbers I'm going to clear everything here and then if I click it sends but after it sent and we get
2:39:14
response then it becomes disabled so if I click here I can do Thro link to slow
2:39:22
3G and then I click I don't see that it's loading so uh that's not really
2:39:28
that good of a experience here what I would prefer is uh
2:39:35
immediately when I click it will be loading and I think this can be fixed in
2:39:41
another way so um let me see here uh let
2:39:47
me remove this set is loading and even here set is loading uh we don't need
2:39:52
this uh loading State and now instead of having this button like this I'm going
2:39:59
to define a button component and I will call this
2:40:04
one uh submit button and I will just prepare um a generic submit button here
2:40:13
export default function submit button all right and now let's do here
2:40:20
return and let's grab all of this from here because here we have a nice looking
2:40:26
submit button I'm going to copy this let's put this here um we don't have
2:40:33
this if it's loading uh here we have uh claim your us name let's change this to children that
2:40:41
we'll get from here children and and uh here let's remove this unused import we
2:40:49
don't need this and um this is loading let's uh disable let's change it to
2:40:56
false for now it's not uh disabled and now let's try to use this submit button
2:41:03
so instead of doing this let's remove this is loading and here let's do submit
2:41:10
button yes and here inside we will put uh this claim your username and right
2:41:17
icon now we can remove the alt button and let's see if this will render for us
2:41:23
if I refresh no do we have an error uh no it looks fine yeah so uh now uh what
2:41:31
I want to do is inside this submit button let's use a hook called um I
2:41:39
think it was use form State let's do use form state State we need to import it so
2:41:47
let's do import use form uh State not status use form state from I think it's
2:41:55
react Dome and in here sorry it it's not
2:42:00
use form State it's used form status and here the same
2:42:05
status and while it will uh throw here uh it will return an object and from
2:42:12
this object we can grab a thing called all the pending and let's display it
2:42:19
here so um here we show children but let's also show if it's pending then it
2:42:26
will show P otherwise it will show no P so now let's see if I refresh it shows
2:42:35
here no p as you can see if I put test and some numbers and I click on this one
2:42:41
it still shows no P let's see why I will add number first click nothing happens
2:42:47
so uh let me see so now this button doesn't submit our uh our form but it is
2:42:56
inside form Let's see we have type submit uh okay maybe it's because we have this uh slow fre G let's do no
2:43:03
throttling and then I think it works now let's do refresh here it test some
2:43:09
random numbers and then if I click it's uh P I will add the FR Ling back let's
2:43:15
the fast 3G let's add some numbers if I click you can see that this will change
2:43:20
from no P to P yeah P so and it created this uh username page sorry so we can uh
2:43:28
rely on this pending flag here so let's use it here pending and uh now let's see now I will
2:43:37
refresh here and we have this fast 3G let's change this to no fro link let's
2:43:42
change it back to fast 3G and then if I want to register a page with I don't
2:43:48
know test and some letters and if I click here it will be disabled for um
2:43:54
few seconds as it is now uh so it uh it worked now let's put back this redirect
2:44:02
thing so let's see here we got this redirect let's put this back and uh
2:44:08
let's refresh now I want to register page with my name here David claim your
2:44:14
user name click username is taken um I'm going to clean the the database pages so
2:44:22
let's clear this let's remove all of the pages and I want to see again that I
2:44:28
want to create my page claim your usern name and it works it redirects me to
2:44:34
this David page and uh what do I want to do now well now I want to uh specify
2:44:43
this uh account page right so uh inside let's see I'm going to
2:44:48
close components I'm going going to open up we have account we have account page
2:44:56
but this is for just SL account now I want to have a page for SL account slash
2:45:01
and then my name but having like account slash and then a username isn't the most
2:45:10
popular way of doing this instead I would like to have just SL account link
2:45:16
and then I want to see this form only if I don't have an account if I have an
2:45:22
account for example now if I refresh my database here and I go to Pages you can see that I have my email has a page with
2:45:31
u uh David so I have an active account I don't I shouldn't see this right instead
2:45:38
on this account page I should see information about my account so let's go to account page and and here you can see
2:45:47
we are grabbing desired username if it exists if you are not logged in then it
2:45:52
redirects you to the homepage but uh what I would add what I would like to
2:45:59
add here is I want to check if this user has a page so if it has a a page with
2:46:07
the same email here so let's try to find it let's do con page equals and then
2:46:14
let's do a wait and let's grab page model let's try to find let's do find
2:46:23
find one and we want to find one where where our owner so owner is session uh
2:46:32
session user email right and let's put this under this if it's not a session
2:46:40
then let's do redirect let's put it here so first we are going to redirect direct
2:46:45
here to the homepage if we are not logged in but if we are and we have a user we are trying to find the page for
2:46:53
this user okay and here we have this return that shows dis place the user
2:46:59
form uh to create a page right um or to
2:47:05
create the account but here let's also add if we have a page let's just do
2:47:10
return saying something like this and your page p is and let's do slash and it
2:47:18
will be page. U and now let's see if I go to here it says your page is uh dbid
2:47:26
all right so we can uh do this without this redirection let's go to this uh
2:47:32
username form here we have this uh rir but we actually don't uh need this uh
2:47:40
maybe let's change it to a r direct to just uh Slash here slash account and
2:47:47
this should do the trick maybe we can add here and created equals and created
2:47:55
equals and then let's put the username here so let's do um let's see how it
2:48:00
looked like okay form data got username let's put like this account slash create
2:48:07
equals form data and get username all right so uh now uh let's see if it's
2:48:14
still works so I'm going to remove this uh my page here and now if I refresh uh
2:48:21
it shows the form let's put my name here claim your username and then it shows your page is slit okay so now uh it
2:48:30
works now uh let's see um on this account page if I have an account if I
2:48:38
have a page uh I want to see um like uh
2:48:43
navigation on the on the left side so I can uh see like um first I want to have
2:48:53
uh settings and I also want to have uh analytics something like this so um I
2:49:00
want to add uh like then uh on the left uh navigation bar and uh or maybe on the
2:49:08
top and uh and uh this is uh the next thing I'm going to do so I want to have
2:49:16
if I have a page I want to have settings here on the left maybe with my image and
2:49:22
then analytics I could put it here like settings analytics here uh for the
2:49:29
logged in user but uh well I think it would be too much so uh so now I'm going
2:49:35
to fix a navigation for the logged in user on the account page so to have a
User panel - sidebar
2:49:41
different layout uh because this is what we want to do for all of the pages we want to
2:49:48
have a layout like this that you have top navigation but for page SL account I
2:49:54
want to have a different layout and uh to do this we are going to use uh nextjs
2:50:01
1 feature called the uh route groups and
2:50:06
to do this I'm going to create a first group and I will put a new directory
2:50:12
inside my app with parenthesis in the name and the first will be called the
2:50:18
default default and it will be default group and I'm going to put uh the login
2:50:25
inside so let's uh put this inside and this layout and this homepage will be
2:50:32
also inside the default so let's put those inside and um and now let's see if
2:50:40
you can as you can see the account is not inside the default and it doesn't have this default layout that I put
2:50:47
inside this default uh catalog or uh
2:50:52
directory if I go to the homepage it should get this default layout let's see
2:50:59
no it did not because there are some import errors let's go to page and there
2:51:04
is something wrong with let's see layout yeah glob CSS needs to be imported from
2:51:11
the directory like this and now it works as you can see for the homepage the
2:51:18
homepage is this page inside the default group and uh same with the login it's
2:51:25
also inside the default so if I log out and then I sign in you can see that we
2:51:30
have this default layout uh but if I log in let me go to
2:51:36
my user log in with my Gmail and now I'm logged in but I'm still on the login
2:51:42
page but if I go to the SL account you can see that I don't have any layout
2:51:48
because uh account is here and we don't have any layout file here so I'm going
2:51:56
to create another group and this one will be called let's call this directory
2:52:02
account or maybe or maybe let's call it up and inside up I'm going to put this
2:52:10
account yeah let's put it there and um I'm going to put a default layout file
2:52:17
here layout. JS and uh let's put uh the same uh stuff
2:52:25
that we get inside default let's copy some parts from here and let's put it here so now we have uh now it looks
2:52:33
exact almost the same um we have header maybe let's let's
2:52:40
don't call it uh uh root layout let's call it up layout right and here we have header
2:52:48
children and so on and this shouldn't be here but let's see uh what is the
2:52:57
problem in a in a second we have up lout we have some metadata here we import
2:53:03
globals so that's fine let's close this default here we have up okay this looks
2:53:09
fine let's see inside ACC inside ACC we also have a layout and this is the
2:53:17
problem uh we don't want to have a layout here inside and I don't know why
2:53:23
why we got a lout file here but let's just remove it I'm going to remove it from here and now it looks fine um let's
2:53:32
change this layout for the app and here I'm going to remove the the header and
2:53:38
now let's see yeah and instead of this I'm going to put a aside a side and it's
2:53:46
just an HTML element and I'm going to do something like this on this main I'm
2:53:52
going to do um let's put flex and for the assign I'm going to put background
2:53:59
red 500 or maybe let's do just 100 Max with of uh medium and uh a side stuff
2:54:09
stuff here so now as you can see we have this aside stuff and and uh let's on
2:54:15
this Flex let's do uhave of full and I'll see does it go all the way no but
2:54:22
we can do have of um we can do mean have
2:54:29
of a screen so now it should go all the way yes that's good so um now let's also
2:54:36
add some padding of at least four for the assign stuff and let's change this
2:54:42
to maybe from red to blue yeah so as you can see now for this homepage and for
2:54:50
the login page so if I go to slash login we have layout of this header navigation
2:54:57
and let me show you how it works uh inside our directories we have two groups two groups full routes the first
2:55:05
is default and maybe I shouldn't call default I can call it uh somewhere else
2:55:10
I can call it uh maybe we can can call it um website we can call it website or
2:55:18
we can call it doesn't really matter and the website is that we get a header
2:55:23
inside our layout so if I open website group I you can see that index page so
2:55:30
the homepage is here and here we have our layout that is applied for both the
2:55:36
homepage and for the login because the login is also inside this website Group
2:55:42
H but inside up you can see that we have a page here inside account directory and
2:55:50
we have another Li out here that is for this app Group and because inside app we
2:55:56
have account then it's this layout will be applied to this account page that we have here so if I go to the uh account
2:56:05
you can see that uh because of the account uh lying inside the app it
2:56:11
doesn't uh use the layout that's ins inside the website uh but it's uses this layout
2:56:17
that is inside the app because our account page in is inside up I hope it
2:56:23
makes sense but now we can see we can have different layouts depending of uh
2:56:30
depending on the on the page so for the account I want to have a different type
2:56:37
of styling and different type of layout uh let me go to the layout so we can put
2:56:47
a uh nice looking links here so instead of the header I want to have some links
2:56:53
here so um let me do for example like this I want this to be larger so let's
2:56:59
do large and I want this to take as much space of as possible so let's do for now
2:57:06
grow so now it's super uh large let's change this to extra small so now it's
2:57:13
this big well I don't know if it should be this big let's change this to wave of
2:57:19
uh I don't know let's try 64 64 is too much let's do 24 let's try maybe 12 okay
2:57:28
I think it's because of this grow let's change it to 12 yeah so let's put back
2:57:33
64 yeah maybe like 48 yeah I think 48 looks nice and now uh we have aside
2:57:41
stuff here what I want to do here is to have an image and I want to have uh some
2:57:48
links here so um this is uh server component and we don't need this header
2:57:55
import uh but let's add use server I don't know if it makes any difference
2:58:01
but here uh I can change this to an as sync function and I can grab server
2:58:08
session here so let's do session equals and wait get server s session and let's
2:58:15
grab uh here let's put off options fine and now uh this is lay out for our
2:58:23
account and uh analytics and so on so let's do if you don't have a session
2:58:29
let's just redirect to uh homepage and I'm going to add a return here so no
2:58:37
session it will redirect you to the homepage and now what I want to do here
2:58:43
is uh um we have a session and I think inside session we can have an image so
2:58:51
let's do session console log and um well let's see F failed to compile use server
2:58:59
directive must be at the top of the file isn't it it is on the top of the file
2:59:05
your server there's no more lines here use server let's remove it for now uh I
2:59:12
guess it's not needed anyway because server components are default
2:59:18
components uh for nextjs 13 and for 13.4
2:59:23
I think upward right uh here we have a session and we do this console log so
2:59:30
here we should see the console LS not in the browser because this is server
2:59:35
component and you can see that inside session I have user then I have name email and image and I want to display
2:59:43
that image so uh here we have aside stuff let's display a div with an image
2:59:49
so let's do image I will use this um I will use this uh image component from
2:59:58
nextjs and um let's see if it's imported no it's not imported I don't know why
3:00:05
let's see let's search no how here is imported all right so let's do source
3:00:12
and for the source I'm going to the session user and I think it was image
3:00:18
let's see yes it was image uh text let's put Avatar alternative text and now if I
3:00:25
save I should get an error uh yes it's missing proper to Wi so let's add wi for
3:00:32
the wi I'm going to put uh let's do 64 and uh now have so let's add have it
3:00:41
will be the same 64 and now the error is um Source property for this Google user
3:00:49
context um this host name is not configured under uh your next uh JS
3:00:57
config uh under images so let's add this and this is just a security feature
3:01:03
let's go to next config and here uh we want to add the
3:01:11
images and I think here we put uh host
3:01:16
name or we just put let's see uh we can open this next
3:01:21
image and and it's remote patterns so let's do remote patterns and it's an
3:01:28
array and then we can just put host name let's put a first object that where the
3:01:34
host name will be our host name so let's grab this host name and I'm going to
3:01:41
replace the first part with with an asterisk here so any image from the
3:01:48
Google uh user content should work without any issues let me restart my
3:01:54
environment yarn Dev and now we get an error let's see why Pages find one timed
3:02:02
out after 10 seconds or so and I think it's inside this uh page account page
3:02:10
here and the problem is here because I forgot to fix a database connection so
3:02:16
let's do uh mongus connect and let's do process that environment. U Ur and
3:02:25
now this should be fixed so if I save it and refresh yeah it works now I have my
3:02:32
image here let's back to up layout and uh for this image I would like maybe for
3:02:39
this da I will add some class names well first maybe I will add I will make it
3:02:46
bigger so instead of 64 let's do 128 so now it's this big and well now
3:02:56
let's see now I want to for this div to be rounded so let's do rounded full and
3:03:03
overflow hidden so it will be rounded picture yeah kind of something like this
3:03:09
um let's see why it looks that weird so we have this image here and for this div
3:03:16
well this div should be more squarish so uh how can we fix it well we
3:03:23
can add wi of uh 64 and half of 64 on it
3:03:30
so now we have uh something like this I don't like this but uh let's see maybe
3:03:37
if I remove let's remove it back to to this and let's see how it looks like
3:03:42
well it's this it's much wider than it should be let's see if we have something
3:03:48
like aspect Square yeah and now it looks like this so now it's a square and the
3:03:56
problem is that it cuts out some parts of the image let's see why uh here we
3:04:03
have the image here we have the div here we have the image I'm think the problem is that we have this wave and hav that
3:04:10
is too small and uh let's see if we change this to like
3:04:16
256 if this will help and it did it does
3:04:21
so this helps a little bit now uh for this div I'm going to make it a little bit smaller like
3:04:28
64 maybe uh 24 and I will make it
3:04:33
centered so let's do MX Auto so it will be more centered yeah and I think now it
3:04:38
looks fine now uh here underneath I I would like to have a um page name or
3:04:47
something like this so we know we have an we have an active
3:04:53
page um or maybe we don't because this is uh this is a
3:04:59
layout so first let's remove this session and uh now let's see I will
3:05:05
remove also this aside stuff so we have only the image and uh maybe instead of
3:05:12
doing printing the page name I'm going to print links first so here we have the
3:05:18
image and now I will add a small like navigation with two links the first will
3:05:23
be to just account and here we will have settings and another link will be to
3:05:31
slash and analytics and it will say
3:05:38
analytics yeah and we have settings and analytics now I want to style them a little bit so let's add the class name
3:05:45
here and let's do something like this let's do flex and flex I think colume so
3:05:52
now those are under each other I want them to be centered so let's do justify
3:05:58
Center this didn't help let's see why we have navigation here and um let's maybe
3:06:05
add the text Center instead text Center yeah now it works let's add margin top
3:06:12
of I don't know four at least let's do more let's do 16 so we will have a lot
3:06:18
of spacing maybe 16 is too much let's do just I know eight okay and now we want
3:06:25
more spacing between the links so let's do let's add a gap here of four so we
3:06:32
will have some spacing now I want to have some uh um icons for those so uh
3:06:41
let's do something like this I'm going to put those labels into separate lines
3:06:47
and now let's see here I'm going to do something like this and I think that in
3:06:53
this project we have a font awesome if I remember correctly let's go to packet
3:06:59
Json yes we have font awesome we even have some icons from hero icons maybe
3:07:05
that was unnecessary but uh yeah we can use Font awesome here let's go to apply
3:07:12
out and and here for the first settings I'm going to cut this and I'm going to
3:07:17
put settings into a span nothing happens but here before I'm going to do font
3:07:23
awesome icon where the icon will be um I'm going to use an icon called uh
3:07:31
settings let's see uh do we have a settings no do we have a cog Cog and
3:07:39
cogs uh maybe not cogs uh for the setting for the page let's use uh I'm
3:07:45
going to search for those icons font awesome and let's open icons I want to
3:07:51
have some kind of page let's search for page and only three icons and uh pager
3:08:00
no I want to have something like a layout or so so uh let's see I like the
3:08:06
table colums uh but I would like to have uh have it uh different let's search for
3:08:14
table and uh let's see I think that we can go with file lines uh it's not
3:08:21
perfect but let's do this let's do fa file lines and yes let's import this one
3:08:30
instead of settings it will say my page and uh let's see how it looks like
3:08:38
well we get an error let's see why um something wrong here yeah I forgot to
3:08:44
close this thing and well we have a we have an icon so that is nice now for the
3:08:50
analytics let's do the same so let's search for uh something with analytics
3:08:57
analytics analytics uh we have a chart and we have chart line and maybe I will
3:09:04
use this chart simple I don't know if this is good enough good enough um let's
3:09:11
sech for the signal or maybe we can use this thing but I think chart will be uh
3:09:17
much better and I think I will use this one chart line because well you can see
3:09:23
that this is uh analytics then we have something else here no nothing that will
3:09:30
work better I think you can maybe use this ranking star or something like this doesn't really matter let's put I'm
3:09:36
going to use chart line so let do font awesome icon where the icon will be fa
3:09:42
chart uh line chart line yes let's import this one and now let's see how bad it looks
3:09:50
like well almost uh almost there so um
3:09:55
let's see here we have some icons uh well for those links we need to
3:10:01
add some class names let's try with this one first let's put the flex here and so
3:10:08
this is now next to each other and now for the icon I I'm going to add a class
3:10:14
name saying something like uh I'm going to put this icon thing here class name
3:10:21
Here and Now for those icon for this page I want this to be half of um uh
3:10:29
like uh I know let's try with six so now it's this small and I want to add a gap
3:10:36
so let's add a gap of two and yes that looks much nicer we have Flex here uh so
3:10:45
we need to add justify Center so it will be centered yeah and I think this looks
3:10:51
nice now uh for H this thing I want the icon to be in different color so I'm
3:10:58
going to put um let's put text and let's do gray 500 let's see if this will work
3:11:05
yes it does and I want this to be I think it looks fine let's do maybe maybe
3:11:12
instead of gray or let's do gray let's do gray 400 or 300 yeah maybe that's too
3:11:19
bright let's do 500 it was fine and the same color should be on the text so I'm
3:11:24
going to put it uh here or maybe I can grab it from here it will be for both of
3:11:29
the links so I'm going to put it here and yes I think this looks fine maybe
3:11:36
the text should be darker so actually here I can add text Gray like like 700
3:11:44
yeah I think this looks fine now let's do the same for the analytics and maybe we can increase the uh Gap here to like
3:11:51
four yeah and now let's do the same for analytics so let's see uh for the link
3:11:57
we will need to have uh those class names so let's put uh those here let's
3:12:03
see for the analytics Flex Gap four and uh this didn't do anything I think it's
3:12:10
because we need to put analytics inside it own span uh still nothing we have uh
3:12:16
sorry not last name class name and now it's better now let's um fix the icon so
3:12:23
for the icon we want to have this ha uh applied here so let's do have of six
3:12:30
yeah and now we also want to have a class name for the span to make it more
3:12:37
darker so yeah and now we have something like this uh another link maybe I would
3:12:44
like to add will be um a log out link so
3:12:49
we had this log out on the on the header but now we don't so I'm going to add a
3:12:55
button saying log out or maybe let's put this whoops let's put this in a span and
3:13:02
we are going to add an icon saying something like uh do we have fa log out
3:13:11
no we have fa door um let's let's go to header and let's see how uh we have this uh inside logo
3:13:18
button we have font awesome fa right from bracket so let's do the same inside
3:13:25
our um layout here fa uh right from
3:13:30
bracket yes and now let's see so we have uh something like this and let's see now
3:13:39
we want to have a similar styling that we have on the links uh so let's see uh for the link we want
3:13:46
to have this so let's put this on the button and now for the for the icon we
3:13:53
want to have uh this so let's put this class name here yeah and for the text we
3:14:01
want to have this so let's put this on the log out yeah and I think uh it looks
3:14:08
fine I don't like that those are not aligned so they should be aligned to the
3:14:14
middle I don't like this to be aligned to the middle I'm going to remove this justify
3:14:21
Center and well now it looks really bad uh let's remove this uh justify Center
3:14:29
from here and here and now let's see yeah I think this is a little better uh
3:14:36
but uh the icons don't have the fixed width and I think there is a property
3:14:42
for this so let me put just this here and let's start with the F first one and
3:14:49
yeah fixed wave to one so it will know that this is uh true or maybe we can
3:14:54
just do true and let's do the same for the second and the third icon so let's
3:15:00
put this here fix to wave and now let's see and it didn't help we have fixed
3:15:08
wave and as you can see those those are not with the fixed wave maybe because
3:15:15
something wrong with the spans no let's see I'm going to inspect here to see
3:15:21
what is wrong so okay so it looks like here we have a a link and we have some
3:15:28
spacing here we have some spacing and it's because icons have different widths
3:15:35
so uh let's see maybe I'm going to remove those class names from here and
3:15:41
uh from here as well and uh from here and we will do something else let's see
3:15:48
yeah now let's add a size and I think
3:15:53
here we can do just extra small and uh well this didn't work let's see font uh
3:16:00
awesome icons let's go to react and uh
3:16:06
let's see using icons with react and let's search for size and and let's
3:16:13
search for size here we have information about the size and U we have 2 Xs and so
3:16:20
on as class names let's do size fa2 Xs
3:16:26
and this didn't do anything let's see
3:16:31
try with small no nothing so I'm going to put back class name and the class
3:16:38
name I'm going uh to add wave of eight and let's see yeah I think now it's better let's also
3:16:45
add half of eight as well and yeah I think this looks almost fine let's see
3:16:54
yes 32 by 32 I want this to be smaller so I'm going to add the class names uh
3:17:01
saying uh like four by four and uh now it's too small so I'm going to change
3:17:08
back to six and here six and let's let's check if I add same classes for both the
3:17:16
wave and the hav if this will work and looks like it does but as you can see
3:17:21
now uh those texts are aligned so that is really
3:17:26
nice and um yeah now the whole thing I would like to Center the whole thing so
3:17:33
this uh navigation as you can see it's uh flex but I want this to be centered
3:17:41
so we have this huge navigation here I'm going to put this inside the div or
3:17:47
maybe I don't need to let's put flex change this to inline flex and uh let's
3:17:54
see yeah and now I want to center it let's try with MX Auto automatic uh
3:18:00
automatically assigned the uh margins on the left and on the right didn't help so
3:18:07
uh how can we fix it well we can put a div and with class name text Center and
3:18:15
we can just throw this navigation inside so let me grab this navigation cut let's
3:18:21
put it here inside this div and now it's more centered what I wanted so now it
3:18:27
looks much better maybe we can even increase the spacing between those let's
3:18:33
see let's go to navigation we have a gap of four let's do six so we have even
3:18:38
more spacing yeah I think this look nice and let's fix the logout button uh
3:18:46
so for this button we have some class names but uh what I want to do this will
3:18:52
be type uh of button and I want to add on click and on click will not work
3:19:00
because this is a server component and now yeah um but we have something called
3:19:07
logout button that we can reuse so let's do log let's do log out button let's
3:19:14
just use this one and let's remove this on click from this one and let's see how logout button will look like so we have
3:19:22
this kind of uh um log out that we can reuse uh let's
3:19:29
see do we have any properties no but we can define properties like class name
3:19:36
and uh we can do something like this that uh here I'm going to put class name so we have more space to right and the
3:19:43
defaults will be those so if you don't pass any class name those will be
3:19:50
default but if we go to here and uh if we add some class names like for example
3:19:58
those here well let's see we don't have any class names so I'm going to just put an empty string here um then those that
3:20:06
we had uh here as defaults will not be used but we will need some uh class
3:20:12
names we will need flex and gap of four so let's put them here and yes now they
3:20:19
look much better but uh we also need item Center so let's do item Center and
3:20:27
uh what else um items Center sorry and
3:20:33
now I want the icon to be on the left side and not on the right that we had it from um from the header so
3:20:42
uh let's see I'm going to add the property uh icon left that will be by
3:20:49
default false okay and here I'm going to add something like this if uh if icon
3:20:57
left is true then let's print this icon here and here let's do if not icon left
3:21:06
let's do end and Let's do let's print it here so now it's on the right side but
3:21:12
if we put here icon left to true then it's on the left side and the sizing of
3:21:19
the icon is a little bit off but we can fix it as well uh we can put something
3:21:28
called um icon classes to be empty string by default and we can add it uh
3:21:36
on both of those so we can do class name here and icon classes right and now we
3:21:43
can here where we use our logout button we can put something called icon classes
3:21:51
and we want to put wave of six and half of six and now let's see and now it
3:21:56
looks better uh now for the text it should be a little darker so for those
3:22:02
class name here let's do text Gray 700 and I think that we can do the 700 uh
3:22:09
even for the or I don't know let's for now delete the old button and yeah now
3:22:16
maybe let's fix this 700 even for the icon I think it looks really nice so with this uh text Gray 700 let's remove
3:22:24
it from here and other spans and let's put this directly here to our navigation
3:22:31
text Gray 700 yeah I think this looks nice let's increase the margin here so
3:22:36
margin top let's change it to 12 and now I think it looks fine but I
3:22:43
want to change the styling I don't want this to be blue uh so I'm going to do something like this um let's see here is
3:22:51
our layout up layout and for the for the body I want to add that we will have
3:22:58
background of uh same that we had for the other layout let's see up layout we
3:23:05
have this oops here we have up layout let's go to the different layout layout
3:23:12
inside our website so here we have uh well I think this grayish is added
3:23:19
inside globals yes background gray 100 so uh let's go back to up layout we
3:23:25
don't need to add anything here and only for this as side I'm going to change
3:23:30
this blue to just white so now we have something like this and uh I even for
3:23:37
the asite I'm going to add maybe a small border so let's do border right so we'll
3:23:44
have a small border here well maybe it's not needed let's try with a shadow
3:23:50
shadow and can we do Shadow right no let's just do Shadow and I think this
3:23:56
looks really nice instead of Border we can do Shadow all right so we have this
3:24:03
and this is our layout um now for the main page here I want this to be inside
3:24:11
a kind of block so here we have a div with children but instead of this I'm
3:24:17
going to I want to add something like um let's remove this Max wave of
3:24:23
4XL and the MX AO let's remove it as well and uh now let's see yeah and this
3:24:32
looks almost fine uh but I'm going to add a separate div with some class names
3:24:40
and I want this separate div to be a box with white uh background and I'm going
3:24:47
to put children here inside so as you can see now it's wide here and I'm going
3:24:53
to add margin of four and padding of four so we'll have some spacing yes and
3:24:59
I want to add a shadow shadow shadow uh yeah so it looks like this and
3:25:07
now I want this one to take as much as space as much as space as possible so
3:25:13
let's do full with with full um so this one needs to grow the parent needs to
3:25:20
take all the wi as well and this is better maybe we don't need this full
3:25:26
yeah and now this looks fine and um yeah this page thing looks nice uh I want to
3:25:34
increase the margins to be more gray thing around and the yeah I think this
3:25:43
looks fine and one more thing I would like to do is uh to have on the outside
3:25:50
a link back to uh back to website or back to homepage so uh here we have
3:25:56
navigation let's add a one more link to slash and it will say go to uh back to
3:26:06
website and this I'm going to cut and put into a span and because I want to
3:26:13
have an icon so let's do a font awesome icon and well for this let's me search
3:26:20
for an icon I'm going to search for left Arrow so uh let's maybe use Arrow left
3:26:28
so let's do f a arrow uh left let's see yes let's import this one let now see
3:26:35
how it looks like back to website yes it looks fine we will need to have uh those
3:26:41
uh class names flex and GAP four so let's add those flex and gap of four so
3:26:48
we need to have this yes and items center items uh Center Center so yes and
3:26:57
this is now centered and uh um now uh I want this to
3:27:04
be smaller so I'm going to do text SM and more grayish so I'm going to do text
3:27:12
Gray and instead of 700 I'm going to do 500 and I want to have a separation so I
3:27:19
will do border top uh a little bit of Border tub and uh some padding from the
3:27:27
top padding top of let's do four so we have some spacing yes and uh I think
3:27:35
this looks fine and maybe we can make it even smaller or I don't know and
3:27:41
brighter can try with text extra small yeah I think this uh this looks fine and
3:27:49
uh and if we click on it it will redirect us us here and if I go to my
3:27:55
account we have this I think uh it works fine so uh now let's see uh when I
3:28:03
refresh this arrow is really big on the beginning and this is because we will
3:28:08
need to add those uh classes here for the wave and hav so let's refresh and
3:28:15
now it's still this big on the beginning okay B because we had the icon classes
3:28:21
instead of class name now let's see if I refresh it's fine but it's too big so
3:28:26
I'm going to change it to wave and have of four and now it's uh better I'm going
3:28:34
also to decrease the Gap to just two and now I think it looks fine so uh um this
3:28:42
looks fine maybe we could make it even smaller so like uh fre and he of fre
3:28:50
yeah and this looks fine uh now this looks okay what I want to do is now to
3:28:58
fix the uh analytics page uh log out should just work so if I log out yeah it
3:29:04
works if I sign in sign with Google back to my page and I want to go to my
3:29:10
account and and this looks fine I want to fix the analytics page and if we are
3:29:16
on the SL account page uh it should be blue or something like this uh the color
3:29:22
should be and this and blue 500 so let's uh let's fix it and for the analytics if
3:29:29
we go to analytics we should have something similar uh let's first click uh fix the
3:29:35
analytics page and it will be inside our app Group because we want to have the
3:29:40
same same uh sidebar so let's do analytics and inside I'm going to just
3:29:48
create a page JS and let's do export default function page uh let's call it
3:29:55
not page but analytics page and here let's do just return ad
3:30:03
div saying analytics page here and now
3:30:08
we have analytics page here uh nice but let's go back to this layout and I want
3:30:16
now analytics to be to have some kind of uh you know blue color so I think we
3:30:23
have uh inside the uh layout we have children but we should have also other
3:30:29
info so let's see what's inside the rest rest of the parms and it will be here we
3:30:37
have PS and that's it then we have another stuff here can I do maybe
3:30:45
console log arguments let's see uh we have children we have only one param
3:30:50
inside arguments we have children and params and that's it we don't have any
3:30:58
information about the request but uh I'm going to check something else I think
3:31:03
there's a function called headers from next that we can run and let's see
3:31:09
headers from next headers and um let's see if I refresh yeah we
3:31:15
have headers list uh but uh let's see if we can do something with it let's do
3:31:23
headers equals header let's do headers list equals headers and now let's try to
3:31:29
get something from headers list let's see if we can get a host so if I refresh
3:31:36
it says locah host 3,000 yeah so it's something let's let's see if we have a
3:31:42
refer refer oops referer refer refer yes
3:31:48
if I refresh we have null on the analytics and on the my page it's also
3:31:54
null okay um can we just do no get and
3:31:59
see what will be inside well and it's a map object and uh well it's uh we don't
3:32:08
see what's inside let's see what will happen if I'm going to try to make it a
3:32:15
an array then we can see everything so we have refer I just misspelled this one
3:32:21
so uh let's see what else do we have here we have next URL that we can use so
3:32:27
that is nice maybe I'm going to use this one next URL um so let's use it um let's use
3:32:35
const URL equals uh headers list get next URL and now let's do a console log
3:32:44
URL and now let's see let's go here to the bottom I refresh we get null on the
3:32:50
page let's go analytics uh nothing page nothing so this this doesn't work that
3:32:59
it doesn't run the this console log when I change the page and this is because
3:33:05
when we create a layout it doesn't reender between the pages but when we
3:33:12
create templates it will reender so if we want to change something inside the
3:33:19
layout we should change this to be a template so let's rename it to
3:33:26
template and let's rename it uh here from apply out to app uh template app
3:33:33
template and now let's open here and let's refresh we have null if I go to my
3:33:39
page account analytics and looks like still nothing is changing and we don't
3:33:46
get any console logs here it's still no when I refresh and when I just click on
3:33:53
those links nothing will change so this didn't help well we can fix it but then
3:34:00
this will not be a server component and this will then require a Reload and it
3:34:06
will make the app a little slower so uh well I don't know it doesn't need to be
3:34:12
the whole L out so maybe we can try to just put let's put it back as a as a li
3:34:18
out lay out and um or maybe let's let's have it as a template and let's see now
3:34:25
uh for this navigation side navigation I'm going to grab it the whole this nav
3:34:31
element let's cut it from here and now I now it's removed but I'm going to add it
3:34:37
inside components and let's create a new directory inside components called
3:34:44
layout and here I will have layout stuff and here I will put uh aside or maybe
3:34:53
app aside AB Side Bar JS let's do export default
3:34:59
function and let's call this one up sidebar and let's do return and here
3:35:06
let's do navigation now let's go back to uh up template and let's see here I'm
3:35:12
going to use my um app sidebar so now
3:35:18
let's see yeah we have it and inside upside bar I'm going to add use client
3:35:25
and now let's see now if I use uh router for example const router equals use
3:35:32
router um let's see if I can do a console log router and let's see what
3:35:39
we'll have here inside the the console because now it's a client component so
3:35:44
we have an object um maybe we don't need a router we can just use a path name so use use
3:35:52
uh path name so uh let's see and uh it says account this is an error from one
3:36:00
of my extensions so that's not a problem we have an account let's rename it from router to path and let's
3:36:08
refresh and it says account so this looks really really nice SL account and
3:36:16
uh well what I want to add here let's see if this will work without use client
3:36:23
no it doesn't we need to have use client here for navigation uh but now let's see if this
3:36:29
will change if this will trigger render if we go to analytics yes it does so uh
3:36:35
we can use it now for this path um we have path and
3:36:41
we want to check if for example one of those links is active so if it's slash
3:36:47
account then this one should be active if slash analytics if the PA is slash
3:36:52
analytics then this should be active and we should um change the color of the um
3:37:00
of those uh spans here all right so let me see um here let's do something like
3:37:07
this uh we have class name here for the first link and it goes to SL account
3:37:13
let's change to something like this and we have text Gray here let's change
3:37:19
let's remove this text Gray and let's put this here and even for the second
3:37:24
link maybe we can put it even to the navigation as the default yeah let's put it to the navigation and let's remove
3:37:31
this from the uh from the links here we don't need this let's see if this looks
3:37:38
fine yeah it looks fine now for for this link I'm going to put it like this so we
3:37:43
will have a string and now I will do if the path is slash account then um let's
3:37:52
put this into separate line if the path is account let's put this and this here
3:37:58
if the path is a count or maybe let's remove it and I'm going to do something like this we have Flex Gap four and here
3:38:06
I'm going to add the parenthesis and here I'm going to check if the path is account then I'm going to add uh text
3:38:15
blue uh 500 otherwise cool on nothing okay so now it's blue as you can see and
3:38:23
yeah I think it looks nicer now instead of this text Gray 700 let's change this
3:38:28
to 500 so it's more grayish and let's do the same for the logout uh the log out
3:38:34
is separate thing here let's change this to 500 and yeah I think it looks fine
3:38:43
what I would like to do is add even here let's maybe put this here this here and
3:38:52
this here I would like to add font bold and let's see if this will change
3:38:58
anything yeah we have my page that is bold and now I want to do the same thing
3:39:05
for um analytics so here we have a cra for analytics here we have class names
3:39:12
for analytics I want to put this but I will change that if analytics is the
3:39:19
path that is active so now let me close this if I go to analytics yeah as you
3:39:26
can see um this uh toggles this uh it
3:39:31
toggles this uh color it changes the it changes the color and which one is bold
3:39:38
so yeah um this look looks fine maybe we can make it even more grayish let's see
3:39:44
can we do like 300 I think that's too bright uh it's barely visible so let's
3:39:50
put back 500 yeah maybe even for the page we could make a different icon to
3:39:57
be more like a structure and not like filled in color so let's search for page
3:40:04
and I will just do we have F lines and we have F lines here and uh let's do
3:40:12
file lines and I think we imported from wrong fa file lines free solid SVG icons
3:40:21
let's see let's remove this fa file lines and now let's try to import it
3:40:26
again fa file lines from we can import it only from one place solid SVG icons
3:40:34
uh but let's see no animation and here we have light regular solid I want to
3:40:40
have regular as well and not only solid I want to have uh I want to import it
3:40:47
from free regular SVG icons but this is not installed uh so let's install this
3:40:54
thing let's do here YN add and let's install those now let's see yes if I
3:41:01
refresh no nothing changed and let's see no no changes looks like something wrong
3:41:09
with with those Arrow left and chart line so let's import those again let's
3:41:16
see fa a chart line f a chart uh fa a chart with capital c chart line chart
3:41:25
line from solid yes and now let's see
3:41:30
Arrow left f a arrow left from solid so
3:41:36
uh those two are from solid and this one is from regular so we have different
3:41:42
stylings here as you can see uh all right but that's fine we have my page we
3:41:49
have analytics and uh yeah it looks fine we could try maybe with different phones
3:41:55
but then it will also change the phone for this thing uh we can try let's go to
3:42:02
we can have different phones uh yes for app sidebar um this is sidebar but we
3:42:08
have layout for app here and uh well
3:42:14
here we don't have any here we don't have any uh class names here let's go to
3:42:20
the uh layout that we have for website and here we have a font called inter so
3:42:29
let's maybe grab it as well and uh let's use it inside our app layout and um
3:42:37
let's see let's put this maybe here here we have metadata so we don't need to
3:42:42
have it again and now let's use this enter here inside our body class name
3:42:48
let's see if this will change anything so now the text looks like this and if we add
3:42:54
enter class name doesn't change anything no I don't think so and this is okay now
3:43:01
we have both template and layout that's not good let's go to our sidebar here I
3:43:07
want to inside up group I want to have only a template not a layout so uh let's
3:43:15
remove it let's remove it this one okay and we will have on the template and
3:43:21
here I would like to add this inter thing so let's paste this intering
3:43:27
without this metadata and I'm going to add this here
3:43:32
well it was already added no need okay I can remove some of the Imports uh those
3:43:39
are not needed here and because we moved it to the to the to the navigation uh
3:43:47
side navigation and now maybe we can try with different uh fonts I would like to
3:43:54
try with plateau and let's rename it to
3:43:59
lto and the missing weights uh so let's do here weights and let's add an array
3:44:08
of um 400 and 700 can we do now let's do
3:44:14
like this 700 so now it looks like this I think L looks much better than uh than
3:44:21
the default inter we had let's also try with Roboto so let's do Roboto yes and
3:44:30
let's see now I think L was better so let's remove this and I'm going with lto
3:44:39
and let's go to the to this page and let's try even there so let's go to
3:44:45
Website Layout and let's change this to lto yes let's import this and we need to
3:44:52
add weight so let's do weight and it will be an array 400 and I want to do
3:44:59
700 as well and I think this looks really nice and I think it looks much
3:45:05
nicer than this default inter so I'm going to remove the import of this one
3:45:11
and for this uh constant I will rename it to justl and uh I think this looks fine H
3:45:20
maybe we could make it even more baldish but uh that's not that important we can
3:45:25
fix later and uh well uh the rest looks fine
3:45:31
and we have now those uh colors here and uh maybe we don't need this bold thing
3:45:38
so let's go to template inside app and I'm going to remove this bold thingy I
3:45:43
think it's inside navigation up side bar and let's remove this uh font bold from
3:45:50
here and now let's see yeah we have app page my page and analytics and it looks
3:45:57
really nicely maybe we could add a padding so we can click more like here
3:46:03
for now I cannot click it uh will be much better to add here we have
3:46:10
flex and gap for those two links H but we don't have any padding and would be
3:46:16
nice to add a little bit of padding so we can click like here uh but now we
3:46:21
need to add the padding even for this uh log out button so let's see logout button let's add the class name of
3:46:28
padding to and now I want to decrease the Gap here so let's do here gap of
3:46:35
four should be enough uh I don't know if it's too much maybe let's do three yeah
3:46:41
I think this looks fine analytics my page maybe let's do just two two will be
3:46:48
enough and yeah so we can switch between those and now um we have our sidebar
3:46:54
ready if we go to this page we have a different layout and yeah this looks
3:47:01
fine what I would like to fix now is that uh we will have if you have an
3:47:08
account we'll have settings and here we will have analytics but we will start with settings of course so we can put
3:47:15
your display name and so on all right so the next part is uh this uh settings
User panel - basic profile info
3:47:23
page my page page so uh let's go to our
3:47:28
app and then inside app uh route group we have our account and we have page
3:47:35
here and here let's see here we have this username for form um and we have
3:47:43
here if we have a page we display this pay your page is and your
3:47:50
URL and now what I would like to have is um to display instead of this to display
3:47:59
uh I want to display settings so where first will be for
3:48:06
example background image and background color so let's do this and maybe we can
3:48:12
put this as a separate component so as you can see here we have this username form and maybe we can create also
3:48:19
another component in same forms so let's do this and how can we uh uh call it
3:48:26
this form that will have all the settings let's maybe call it the uh
3:48:32
settings um form or maybe something more specific let's do page set thingss form.
3:48:41
JS and let's do export default um and here page settings uh
3:48:50
form and let's do return parenthesis let's put a div here let's put test
3:48:56
settings for now and uh this should do I forgot to put a function here function
3:49:05
and uh now do we want to know some think uh from
3:49:11
properties uh let's see let's go back to account page and let's see if we have
3:49:17
page then we do this maybe we can pass along this uh page thing so uh so let's
3:49:23
do this instead of this div let's return here our um page form page settings form and
3:49:33
let's pass along this page information page all right uh now here inside
3:49:40
uh we can grab our page page page and let's see yes so we have this
3:49:47
settings looks cool now instead of this I'm going to put here let's do maybe a
3:49:55
form uh it will be a big form and now uh or maybe it will be a div but let's put
3:50:02
a form here inside form so um I will remove this action for now inside this
3:50:08
form form um first thing we want to have is uh well some kind of uh background
3:50:17
image or uh background color and then we will have Avatar so let's put the first
3:50:23
div it will be for background and the second div will be for Avatar so we have
3:50:29
something like this and now let's start with the background uh let's make it
3:50:35
gray by default so we can see how this will uh look like let's do gray and
3:50:42
let's do maybe 300 and I don't see anything because it's uh it's a small uh
3:50:48
div it doesn't have any hap so let's do HA of uh let's do half of I don't know
3:50:54
32 something like this yeah so we have uh this and um looks fine but maybe we
3:51:02
can get rid of this padding here so let's go back to account page and let's see where we have this padding think
3:51:09
this padding comes from the layout so
3:51:15
what we can do is we can do here negative margin let's try with negative
3:51:20
margin of four negative margin four yeah and as you can see now we don't have
3:51:27
this white body so here we have uh my my idea is that here we have a um like a
3:51:36
cover image or cover color that we we can uh change and then here we have uh
3:51:43
Avatar so let's focus first for this on this color so uh here inside I want to
3:51:51
have two kind of buttons or maybe togglers uh if you want to have a color
3:51:59
or if you want to have a and an image so
3:52:04
let's do maybe an input of type radio and another input type radio and the
3:52:13
first will have value of uh they need to have the same name so um uh it will be
3:52:21
background type something like this let's do maybe background type let's SP it like this so we can easier save it
3:52:28
into database background type here the value will be color or and here will the
3:52:35
value will be image so now let's see do we have the yes but we don't have any labels uh
3:52:43
that's fine we can do something like this label and let's just remove this
3:52:50
let's put the first uh here let's then add a span that will say color and then
3:52:56
let's do the second and let's put the second input here and span with image so
3:53:04
now let's see yes we have a color and image all right now um this uh looks
3:53:13
fine but uh I would like those to be uh
3:53:18
like buttons so we can toggle between those two and uh I think we can just
3:53:24
make it ourself we don't need to use uh uh third party lips for this it's kind
3:53:32
of kind of simple so maybe let's put it even inside forms like form and elements
3:53:39
here let's call it uh uh button or maybe not here here we
3:53:44
have buttons uh let's do here new file button group and uh yeah let's call it
3:53:52
button group or maybe we don't need to call it button group uh let's keep it
3:53:58
for now and uh maybe we can St uh style it uh just here in this file Let's uh
3:54:07
let's try so we have two labels with two inputs of type radio and what I want to
3:54:14
do is let's see what will happen if I add just class name button we don't have
3:54:20
this type of class but I can style this label like a button and
3:54:27
uh or maybe not this label but this span here but then uh it would need to be
3:54:35
inside the uh Global CSS so let's do div with class name let's say
3:54:42
radio um togglers yes and let's put those two labels inside and now let's go
3:54:50
to our Global CSS and let's start it here radio to glur and then we will do
3:54:59
something like this uh let me see we want uh to
3:55:05
style uh the span inside to be um let's see it's CSS so we can do like
3:55:13
this we need to put this span here and now let's do like this H we want this to
3:55:20
look like a button so uh let's do apply and what I want to do here is to
3:55:27
do background of let's go just to the uh button and let's see how it looks like
3:55:33
uh we have a logout button maybe we can copy some classes from here let's copy
3:55:40
those and let's put them to our globals and let's put them here this should be
3:55:46
flex and now let's see how this looks like yes so we have kind of like buttons
3:55:53
but let's style them better uh we don't need the flex and or Gap or border and
3:56:00
even Shadow I think maybe we can uh keep the padding and the shadow but here
3:56:06
let's do background of white so we have something like this that looks much better and now let's do also
3:56:14
that radio togglers input of type radio will be uh hidden so let's do
3:56:23
apply and here let's do hidden so now let's see now it kind of works but we
3:56:30
don't see which one is selected I think we can do now something like this let's copy this part and now let's do uh input
3:56:38
type radio checked and then the next span that is inside will have different
3:56:45
styling like background will be let's say red 400 and now we can do as you can
3:56:52
see something like this so um we need to have a little bit different styling I
3:56:58
don't want this to be red so let's maybe do that uh a default for span will be uh
3:57:07
that the text will be gray 700 and it will be almost white so let's
3:57:14
do background and let's do gray of uh let's
3:57:20
do maybe 200 let's see yeah and the active will be or maybe Let's do let's
3:57:26
do it uh White and the active will be blue white and the active here will be
3:57:34
blue I think we were doing 500 yeah let's do uh let's do white uh text so
3:57:43
let's do text white and that's better and now maybe let's add a border on both
3:57:51
of those so for the whole thing radio togglers let's do uh apply and let's do
3:57:58
padding of two and let's add some uh uh color so it's the background of uh White
3:58:06
and let's see how this will look like yeah let's change this to be uh inline Flex
3:58:12
inline Flex yes something like this and now maybe we will remove the shadow so
3:58:19
let's remove Shadow from the buttons so now we have something like this maybe let's do bigger uh padding like padding
3:58:26
four so now we have something like this and we can toggle between those two let's add a little um maybe instead of
3:58:35
this padding let's do a border so let's let's do uh border of
3:58:41
and border and border of blue 500 500
3:58:47
let's see it's not uh visible uh because I think we need to
3:58:53
change um some things here let's see why it's not visible I think it's
3:59:00
because uh I don't know why but these buttons are too big let's see why so
3:59:05
this div is this small and the label B are fine but the spans are too big so
3:59:12
there's something wrong with the spans maybe it's because we need to add block on the spans yeah now it's better so we
3:59:20
have uh this uh blue uh border here now
3:59:27
let's see this works we can toggle uh this for inactive let's make it more
3:59:34
grayish text so it's uh now something like this now let's add even some
3:59:40
padding like padding of one padding one let's see how this will look like yeah
3:59:46
so now we have something like this and uh and this looks
3:59:51
fine uh but I would like to change the colors a little bit so instead of white
3:59:57
background on this uh I want this to be more grayish so let's do gray and if
4:00:05
you're fine with those colors you can just skip them but I want to make them more grayish so
4:00:12
I will do that's too dark let's do maybe 200 yeah and uh now let's see now for
4:00:20
the inactive I will remove this background white so we have something like this and instead of doing this blue
4:00:28
I will do white so let's do white and the black text so let's do uh
4:00:37
text or maybe let's do text blue 500 text blue 600 yeah yeah I think this uh
4:00:44
this looks fine and now let's maybe try to uh get rid of this uh get rid of this
4:00:52
border we don't need this border blue yeah and yeah it looks kind of fine but
4:01:00
I want to add a shadow for the whole thing but I will add it like uh in
4:01:05
our uh on our page so let's go go to page settings form and here we have our
4:01:12
radio togglers should be singular L I don't know and uh here I will add the shadow
4:01:22
so we have a little bit of Shadow as you can see now and now I will also make it centered and I will make it centered
4:01:29
here uh on the page uh on those classes because I don't want all of the Tolar uh
4:01:35
in the future to be centered only this one in this example so let's see um here
4:01:42
we have this background gray for the whole um cover so now let's do this to
4:01:51
flex justify Center and items Center so now we have something like this now we
4:01:57
can toggle between those two that is really nice maybe it would be much nicer with some icons so uh let's go to Hero
4:02:06
icons and let let's search for uh color and uh yeah I think we can use this
4:02:14
plate so let's see here here I'm going to uh put an inside this we need to do
4:02:23
this inside the span so let's do H uh
4:02:28
let's do font awesome icon and let's do fa P
4:02:34
palette from this yes and let's also add
4:02:39
an icon here for the image and here I'm going to find
4:02:46
something that looks like an image so um yeah just image so let's do font awesome
4:02:55
icon and here let's do fa image and here we have a two to choose from we can do
4:03:03
either solid or or regular I will pick
4:03:08
solid or I don't know which which one I just took let's see I think this looks
4:03:14
weird uh pallet uh let's see why pallet okay it's the wrong icon let's
4:03:24
search uh pet uh f
4:03:31
a pet this one yeah this one uh yeah now
4:03:37
this look looks nice but I want to have some spacing here so uh I was thinking
4:03:42
that maybe we can uh remove change those uh spans to div like this and we can put
4:03:51
text uh inside spans so let's do like this color and here span image and now
4:03:59
let's go to our globals here we need to change to div here we need to change to
4:04:06
div and and uh for this div I'm going to add a flex and the items uh center items
4:04:17
Center Center and let's add a gap of at least one so now we have something like
4:04:23
this maybe bigger Gap let's do Gap two yeah and this looks much nicer so uh so
4:04:29
now uh let's go back to this uh page settings form and as you can see this
4:04:36
Toggler take makes a lot of uh code here so I was thinking maybe uh we can put it
4:04:44
somewhere else uh so we have buttons here we have forms uh maybe inside forms we can put
4:04:53
uh we can put it or maybe we can create a new directory called form items let's
4:05:00
do this form items and I'm going to cut it from here
4:05:06
and let's do select this let's cut it from here and inside form items let's do
4:05:11
new file and here let's call it maybe button
4:05:17
tolers or maybe radio to gl. JS and
4:05:23
let's do export default function radio
4:05:28
tolers and let's do return and let's paste this and now um here we have only
4:05:37
color and IM image but the thing is we want to take it as a a parm right as a
4:05:43
property here so let's call it maybe options and uh and then let's also do uh
4:05:53
selected or maybe value and uh or maybe let's call just selected which one will
4:06:00
be selected and now uh what else do we want to know here we have options
4:06:06
selected we need on change right and now let's try to use it
4:06:12
let's try to use it here let's do radio not here indentation here radio uh
4:06:21
togglers and we want to Define that selected will
4:06:26
be um color and we want to define the
4:06:33
options to be it will be an array we will fix fix it later we will also need
4:06:40
unchange now uh as we can see we have an error let's see why uh on change
4:06:47
something wrong here expression expected um let's see is it something
4:06:53
wrong in here no not here let's go back here this looks fine let's check what
4:07:00
happens if I remove just this still an error no this is fine and this is not
4:07:06
fine let's uh let's remove this onchange okay it it was onchange let's add
4:07:12
onchange but let's add an arrow function here and uh let's see yeah so now we
4:07:21
don't have any errors and now what do we want to do here uh for now select this
4:07:27
color but we need to have a state for this so let's do const here and let's do
4:07:33
H maybe let's don't put this as a state for now uh let's define first our options so we
4:07:40
can fix uh this radio togglers for now uh I'm going to put options here and it
4:07:47
will be an array or it can be also an object let's put an unchange here and
4:07:54
this closing here and now for the options we will need the free things the
4:08:00
value so for example color with lowercase C uh the label and the icon
4:08:08
so uh so uh let's do this I'm going to make it an
4:08:13
array and it will be two objects and each of the objects will
4:08:20
have name so the first will be color then we will have a icon and we will
4:08:26
have also a label label and the same will be for uh the second one and but
4:08:34
here instead of color we will have image and and instead of icon we will have
4:08:41
well for the icon first will be fa pet like this here for the icon it
4:08:49
will be fa image and here for the label it will be color with capital c here will be image
4:08:57
right now let's try to use those options inside this component so uh we can get
4:09:04
rid of one of those labels and now um let's do something this let's do
4:09:10
options let's do map and we want to map through that for each option we want to
4:09:15
do parenthesis and we want to put all of this and we want to uh change some stuff
4:09:23
here instead of this uh uh fa pette we want to do option. icon instead of this
4:09:32
uh color we want to do uh I think it was option. l label and now we have here
4:09:40
value so let's do um let's see how it was called I think it was called the
4:09:46
name all right so it's the name or maybe let's change it to Value I think it will be it will sound better so let's change
4:09:53
this to value and let's put this here option do
4:10:00
value and uh I think it looks fine and the only problem is that none of those
4:10:07
are selected uh we can fix it by doing something like this um we have a
4:10:15
selected here but it's not used as you can see so let's use it uh here I'm
4:10:21
going to add a checked and checked will be true only if the option value is the
4:10:27
same as selected so the option value is the same oops same as selected so now
4:10:34
let's see now as you can see color is selected so this is uh nice I cannot change it and uh this is because uh this
4:10:43
checked will never never change maybe let's remove this selected
4:10:49
and un Change uh so it will not be uh um
4:10:55
it will not be a controlled component it will not be a controlled
4:11:00
input so we can just toggle between those uh and let's remove uh this
4:11:06
selected color for now uh all right so we have this let's fix the form first so
4:11:12
we have some structure and then we will fix the state and so on now uh I want
4:11:18
this to be a little bigger maybe except uh ex uh instead of half I will add some
4:11:26
padding on the top and the bottom of at least eight maybe let's do 16 all right
4:11:34
and now now here I would like to have an an
4:11:39
avatar here we have the Avatar and what I want to have here is uh I want to have
4:11:46
an image of the user so let's put image and uh well how we can uh grab it how we
4:11:54
can grab user here we need to do something like this const session equals
4:12:01
and let's do await get server session
4:12:06
and let's grab a here of options of options and we need
4:12:11
to add a syn uh not here before function as sync
4:12:18
function and uh now let's see we have session so from the session we can do we
4:12:26
can print the image here so let's do session and we should actually use uh
4:12:34
image from the next so let's do this image from next image and for the source
4:12:40
let's put session user and I think it was image
4:12:45
like this and here I will just put a water just in case and now let's see now
4:12:52
I will need to pass here with with will be
4:12:59
128 same with he 128 let's me let me put this into
4:13:05
separate lines so we will see it better and now it looks fine I
4:13:12
think maybe we can make it I don't know smaller bigger or maybe it's fine uh I
4:13:17
want this to be uh rounded so let's add some class names I want to make it
4:13:25
rounded full so let's see yeah something like this and now I want it to be centered so
4:13:34
on the div above I'm going to do uh flex and uh justify
4:13:42
Center so now it's in the middle and now I'm going to pull it up a little bit so
4:13:48
here I'm going to add relative and minus top of uh two now let's do more like
4:13:57
eight so now it's pulled up a little bit that's fine uh I'm going also to add
4:14:03
some border let's do border and let's do maybe border border of white so that's
4:14:09
too small border let's do maybe border of uh four and uh yeah I think looks
4:14:18
fine let's add some Shadow and the shadow should be bigger do Shadow large
4:14:25
let's see yeah Shadow should be uh darker so let's do
4:14:30
Shadow and let's do black and that's better let's make it black 50%
4:14:38
yeah I think this uh this looks fine right so we have this we have aatar
4:14:44
let's continue to maybe first uh display everything uh that we should display
4:14:51
with this form so here under the Avatar I want to also display some inputs for
4:15:00
the name location and bio so let's see here and we have image let's put another
4:15:07
div for all of those inputs so first input will be for uh name let's call this uh display
4:15:17
name and um the next will be for um I think it will be let's do
4:15:26
location location and then the third will
4:15:32
be let's do bio but maybe for the bio let's do a text area instead text
4:15:40
area and uh let's see I'm going to remove those and here I will add the
4:15:48
placeholder the placeholder and I'm going to put this PL texture like this
4:15:53
the placeholder will say bio right so uh almost there uh I think I will add
4:16:01
default uh default styling inside our globals so let's go to globals and uh
4:16:08
let's see or maybe let's see we maybe have an input component that we can
4:16:15
reuse or maybe we don't we probably don't so let's go to globals and maybe somewhere here between
4:16:23
the body and radio togglers let's put input uh type uh text and the text area
4:16:32
and now we want to apply some uh classes here so uh I want to have a little bit
4:16:37
of border and I want those to be with of
4:16:42
full and this play of block and so we have something like this
4:16:50
and now let's see let's add some margin to the bottom let's add some padding of
4:16:56
two on the top and the bottom on the sides let's do four let's see and maybe that was too
4:17:04
much on the sides let's do all go to and yeah this looks better now let's
4:17:12
add some margin on the bottom from each other so we have something like this now
4:17:17
let's go back to our hero form and not hero form uh page settings form and on
4:17:26
this Dave I'm going to add some padding of four yeah so it looks like this now
4:17:32
and uh well this looks fine but maybe be instead of uh borders we will do grayish
4:17:43
color so let's go to globals and let's see we have this border let's change it
4:17:48
to background and gray 100 and let's see how this will look like yeah it looks uh
4:17:57
fine maybe we can make it a little bit darker to 100 yeah uh I think it looks
4:18:03
uh fine it looks a little bit like it's disable let's do 100 yeah uh I think
4:18:09
this will work fine now um I want to have some
4:18:15
labels um before so let's go to Hero not
4:18:20
hero form we go to page settings form and uh now uh in here we have those
4:18:28
inputs I'm going to add the uh labels here and um here let's maybe use this
4:18:36
HTML four so uh HTML 4 let's name it uh
4:18:41
name input name in and let's add this ID and name name in and now in this label
4:18:49
I'm going to add uh display name so we have same as
4:18:55
placeholder and now if I click on this one it will focus uh the input because
4:19:01
it's connected with this HTML 4 and ID now I want to have a labels
4:19:08
for um labels for other stuff as well so
4:19:13
here let's do a location input
4:19:18
location and let's add here ID location
4:19:24
input and here label and bio input
4:19:30
whoops bio input and here let's do bio and let's put ID here bio input yes
4:19:40
this should work and now we can maybe change some uh
4:19:46
placeholders uh let's put John do here and for the location let's put uh I'm
4:19:53
going to put stock on Sweden um or maybe I don't know
4:19:58
somewhere in the world doesn't matter and for the bio let's say your bio goes
4:20:07
here dot dott dot why not and it looks like this now let's Ty those labels a
4:20:14
little bit so uh for the labels I'm going to do something like
4:20:21
this um I'm going to do label uh label that have uh this HTML 4 and now let's
4:20:31
try to do apply and let's do border
4:20:37
border and let's do border red I just want to see if everything will will work
4:20:43
so uh no it doesn't work let's see uh
4:20:49
here HTML 4 um we need to add some class names
4:20:55
here I think or maybe let's try input that have a a that have a label rying
4:21:02
lying around yes so this works and this one do doesn't so maybe let's do just
4:21:09
just label but now even those have a uh
4:21:15
have those red borders and this is not what I want so uh we need to style it
4:21:23
differently we want to exclude those and we want to style only those so uh maybe
4:21:31
let's start by styling those and then we will see how we can fix them so uh let's
4:21:36
do that I want to do let's say I want to do uppercase upper
4:21:44
case and uh I want to do gray color so let's do text
4:21:50
Gray uh maybe 500 let's see yeah and I
4:21:56
want the text to be uh or the font to be semi bold so let's do semi bold and
4:22:04
smaller text SM so we have something like this let's make it even brighter
4:22:09
300 yeah that's too bright let's do 400 yeah and maybe we don't need this semi
4:22:16
bold let's remove it and let's see how this will look like yeah let's do maybe
4:22:21
a little darker and let's make it smaller let's do
4:22:27
XS yeah and uh I think it looks fine but I will add like margin bottom of two
4:22:35
yeah and uh I think this will look uh fine
4:22:41
now as you can see we have those are smaller and we need to distinguish
4:22:47
between those uh so how can we do this let's maybe try again with this if
4:22:55
we have HTML 4 and now let's
4:23:01
see now those are not styled and um let's see why I think it
4:23:10
should work yeah we have this HTML 4 let's put this here okay it doesn't
4:23:17
seem to work so I'm going to add the class name here and I'm going to call
4:23:24
those uh input or maybe input label so now uh let's add this uh class
4:23:32
name for all of those that have uh HTML 4 so all of those three let's add a
4:23:39
class name of uh input label so now
4:23:45
those should be styled and they are so that is much better
4:23:51
now and uh let's make them semi bold
4:23:56
once again to see semi semi semi bold
4:24:02
how this will look like maybe we can leave it like this let's try even a little bit lighter yeah I think we can
4:24:11
keep it uh like this uh now this looks fine we have our form maybe the spacing
4:24:18
here is too big because we pulled this image up and uh let's fix it let's go to
4:24:25
this uh page settings form and here well
4:24:31
um for this image div let's do minus margin button of uh eight and let's see
4:24:39
yeah it pulled up uh this form a little bit that is nice uh maybe we can do even
4:24:45
more like minus 12 let's see yeah I think that's that's better so uh now uh
4:24:54
here underneath we will also have uh more boxes for oh let's say uh buttons
4:25:03
and uh so on and uh but first let's make uh let's fix
4:25:10
that those things will be saved to our database right so we have display name
4:25:16
we have location and we have bio and then we have this color and image that
4:25:22
we also want to save so um maybe let's start with things that are the easiest
4:25:29
so uh display name and location and bio so uh we we are going
4:25:36
to put it inside our page let's see uh inside models we have page and let's add
4:25:43
those so we want to have display name and uh we will put that the default will
4:25:50
be empty string and what else do we want to know where location
4:25:56
location and the same thing here we will have default of empty string not
4:26:02
required and bio so let's do bio type and the type string and the default
4:26:10
will be empty string all right now let's restart here so it will have the all of
4:26:16
those changes let's see let's restart your Dev and uh now we want to edit
4:26:25
those and uh save them so uh let's do something like this let's go to page
4:26:30
settings form and let's see now here we have a input and labels and let's do something
4:26:39
like this for the first input we have ID let's add also a
4:26:46
name and uh those inputs will not be controlled so we will not use State here
4:26:52
and instead I'm going to put name of display name and here maybe I can add default
4:27:01
value yes and default value will come from our page as you can see that we have
4:27:06
here and I will do a page display name so now let's see I can still add it here
4:27:14
so that's fine and uh now let's see uh let's do the same thing
4:27:20
for uh this input that is for location so we need to put this into separate
4:27:28
line so it will be more readable and I'm going to add a name on
4:27:34
this one will be just uh location and uh then we want to have
4:27:42
default value will be page location now the text area so uh let's
4:27:50
put this here this here placeholder let's add we have name here so let's use
4:27:56
it the name here will be just bio and let's put default value will be page bio
4:28:03
right so um now let's make it uh so we can uh save it would be nice to have a
4:28:12
save button uh maybe down here so let's
4:28:17
uh add it so let's do button or we actually have submit button that we can
4:28:24
use uh let's call it just save but uh I'm going to put it inside the span and
4:28:32
I'm going to add the font awesome here let's add I on fa save if there is such
4:28:39
yes there is and let's use solid so let's see and I don't see this uh button
4:28:48
let's see it should be under this text area okay it's loading let's see something is wrong and this is wrong
4:28:57
because you're importing component that needs use uh form status it only works
4:29:04
with in a client comp component but none of its parents are marked with use
4:29:09
client so they so they are server components by default okay uh because we
4:29:16
have this submit button we need to make this one as
4:29:21
a as a client component but the problem here is that we are grabbing session
4:29:27
like this and uh if we want to make it client we cannot grab a session like
4:29:33
this so let's maybe grab user uh data from
4:29:38
here and let's remove this asnc and here we have our user so let's
4:29:44
remove this session and now we will need to pass the user from our page uh let's see from our
4:29:53
account page account page here we need to pass our user so let's pass user
4:29:59
equals session. user yes and now it's go
4:30:05
back here now let's make this one uh use client we don't need our options now
4:30:14
let's see we have used client here and it works well maybe it shouldn't be
4:30:20
maybe this button should be that big that big and let's make it smaller so
4:30:26
I'm going to put it inside a div and um let's add some class names
4:30:33
and I will do Max wave of medium and let's put this submit button
4:30:40
inside let's put this here and let's change it to XS yeah maybe we can add it
4:30:47
even here let's add class name and let's do Max with Xs and let's see doesn't
4:30:55
change anything no maybe we don't have class name here let's add class name and
4:31:01
let's add those class names here so let's put this as a
4:31:07
string and the default on the class name will be empty string but we will add it
4:31:13
here class name and now let's see here we have class name Max with
4:31:21
XS SM let's see doesn't change anything let's see here let's see back here maybe
4:31:28
we need to remove this to see the difference yeah I think uh I think it
4:31:33
worked let's change it XS yes uh still
4:31:39
super uh uh big uh let's do I think this
4:31:45
will look fine let's see why it's that big I think it's because we have this
4:31:52
wave of full but I'm not sure yeah it has this
4:31:57
wave of full that's why it takes all of the space so let's change this to or
4:32:03
actually we cannot style it here we need to use the div because we have W all
4:32:10
full so let's do Max with of um Xs and
4:32:15
let's see yeah and then let's do MX Auto so it will be
4:32:21
centered yes maybe let's change this ma with to something even
4:32:27
smaller uh to 100 pixels yeah so it's this small yeah I think this looks fine
4:32:35
maybe we can put it on the bottom uh right corner or something like this so
4:32:41
we can grab this deep and we can even go outside of this div let's see yeah and
4:32:48
we can put it to the right so we can do MX uh ml
4:32:55
Auto and we can have it on the right side I don't know if it's better if it's
4:33:00
worse um I think it's uh I think it looks I think it was better with in the
4:33:07
middle so I'm going to put it back here uh yeah it looks fine for me so uh
4:33:15
this looks fine now uh when we click this button let's see what happens when
4:33:20
we click it uh what it does uh it does nothing it just submits the form above it so uh uh
4:33:29
let's see on this form we need to have an action and we can do uh a function
4:33:37
here that will be our server function so
4:33:43
let's do a function let's call this function save let's call it base
4:33:49
settings base settings and let's do for now it will be
4:33:56
save base settings let's do save base settings like this and we'll have form
4:34:03
data here form data let's see the this form data I want to conso log it and
4:34:11
nothing more should be done we don't need this get server session we don't
4:34:17
need this icon and now let's see inspect and let's do console let's make it
4:34:23
bigger let's see what happens if I would just put test here we have form data
4:34:29
okay let's see if I can grab display name from the form data if I put test
4:34:36
here save we get test so this is nice so now let's uh try to save it with a
4:34:42
server function so um inside our app or maybe not inside app inside actions we
4:34:49
have grab username uh and here we have a function a server function to register a
4:34:57
username let's maybe create a new file for those uh settings for those actions
4:35:03
on those page settings let's call it maybe page actions page
4:35:10
actions. JS and here let's do export let's call it function let's do it will
4:35:17
be an assing function and uh it will be named let's
4:35:23
say save page settings settings right
4:35:29
and in here we want to First connect to our database so let's do among good
4:35:36
mongus uh let's see let's import it mongus connect and process. environment.
4:35:44
U and now let's first grab our session so let's do session equals await
4:35:51
get server session with of options and then let's do that we want
4:35:59
to grab the page right so we want to do cons page equals and let's the wait
4:36:06
page and uh find one where owner is the
4:36:12
email from the session so the session user email all right here maybe first we
4:36:19
can check if we have a session then we will do all of this and we will grab the
4:36:24
page uh and then let's do if we have page then what do we want to do with the
4:36:30
page well we want to we want to update it um maybe we don't even need to check
4:36:36
if we have a page we just want to update a page so let's the page update one and
4:36:43
we can do like this the first parm is an object of let's see filter so how we can
4:36:49
find the page that we want to update inside our database we can find it with the owner is
4:36:55
session uh user email and then the next uh object I
4:37:02
think is let's see what we want to update so what we want to update will be
4:37:09
like uh display name and so on but this display name is undefined for now we
4:37:15
don't have it anywhere so let's let's def Define it here display name will
4:37:22
come from um form data that we'll get here form data let's do form data get display
4:37:33
name and I think the same thing will be uh for everything else so let's do also
4:37:41
location form data get location and let's do bio equals form data get bio
4:37:49
and now let's just put all of those three here location and bio oops comma bio right
4:37:57
and maybe we can put it into separate line so it will be easier to
4:38:02
read yeah and we need to add a weight here and now it's fine we can return
4:38:10
something here if we want maybe we can do return return true and if we don't have
4:38:17
a session so if we go here it will do return false all right and now I guess
4:38:24
we can use this function so let's go back to our pay settings form and here
4:38:29
we are doing displaying the name let's change this one to a sync function
4:38:35
because we are going towait and we will try to save uh page settings from page actions
4:38:44
and here we will just pass our form data so now let's see what uh will
4:38:50
happen well uh something is wrong here module not form can't resolve child
4:38:56
child process that is weird let's see if I can just restart my
4:39:02
environment and if this will save uh everything here let's refresh and it's
4:39:12
compiling and uh still we have an error let's see child process child process
4:39:19
module not found let's see uh is it because of the let's try to save page
4:39:28
settings from page actions inside actions let's see save page settings
4:39:36
let's try to remove it and let's see if this will help no it doesn't so let's see if I remove this
4:39:45
and now we still have a problem so no now we don't so if I put back this then
4:39:53
we'll have a problem so something here inside is wrong we are connecting to a
4:40:00
database and then we are grabbing a session and the they easier the easiest
4:40:05
way to just find what's wrong is just to remove everything and see if it will
4:40:11
work then but uh looks like it still doesn't work so uh let's see I'm going
4:40:19
to remove or I'm going to comment out uh everything from here and oops and from here uh we'll see
4:40:29
if we step still have an error no we don't I think that the error can be that
4:40:35
we need to have use server here as we had inside here grab username this
4:40:42
should help let's go back here let's uncomment everything this and now let's also uncomment all of
4:40:50
this so yeah now it works because we have used server and uh now let's see now this
4:40:58
seems to work and let's go to back to our uh page settings form and let's use
4:41:06
this uh function save page settings with our form data and let's grab the result
4:41:14
equals this uh we need to add a weight and let's do a console log on the result
4:41:25
just to see what will happen if I go to console let's clear everything let's put test here let's save and result true
4:41:35
so this worked but it would be nice to have some kind of popup or something and for this I really like this react hot
4:41:43
toast that I'm going to use so uh let me just uh yarn out of
4:41:50
this and let's go here yarn add and let's uh use it so to use it we need to
4:41:58
first put it to um let's go to documentation first we
4:42:04
need to put it like this toaster inside our app so let's put it
4:42:10
inside our layout let's see up and let's put it here inside up and we have now we
4:42:19
have both uh here inside the template let's put it maybe here inside the body
4:42:26
toaster we need to imported so let's import toaster let's see if it's imported
4:42:34
correctly yes it is now uh we can use uh
4:42:40
those toast functions so uh let's go to paid settings
4:42:45
form and we can do something like this if result is true so let's if result
4:42:52
then we can do toast uh from react to toast success and it will say saved now let's
4:43:01
see if we go here and hit save it says save uh what we can uh something more
4:43:09
interesting that we can do we can let's remove this and now we are just saving
4:43:15
and we have this result um and this is kind of like a promise or
4:43:23
we can make it to a promise so um if we do something like
4:43:28
this const promise equals new promise resolve reject and so on and we are
4:43:37
going to put this inside and we'll do if a result is true then we will resolve
4:43:45
resolve this uh promise uh otherwise we will reject the promise reject reject
4:43:53
let's put else into new line and uh we need to add a Sync here because we have
4:44:00
a weight and now we can do something like this because we have this inside
4:44:05
promise this our save page settings we can do toast and we can do uh promise
4:44:12
first is our promise that is just called promise and here we can put
4:44:17
success um like saved and for loading we can do uh let's
4:44:24
just say uh saving dot dot dot and nothing for error let's say it will
4:44:32
never fail but you can also add add error if you want and saving
4:44:38
failed and now if I click save it will first well we cannot see this because
4:44:44
it's too fast but if I make it slow fre G and then I hit save and then it it's
4:44:51
immediately saved so uh this is not correct let's see why we have a promise
4:44:58
here uh and and this is a syn let's see
4:45:04
once again save no this will actually not work with uh server
4:45:11
actions but what is really implemented and works is that this button is grayish
4:45:17
so this is nice let's put this back to what it was so let's just put this to
4:45:25
here let's get rid of this promise and toast promise to just simply if result
4:45:33
is okay then we will just do toast uh toast success with uh
4:45:41
saved and we don't need this console log and now let's see it's gray and then it
4:45:49
will say saved so this is nice and maybe instead of being just gray we can change
4:45:55
it to saving and free dots so let's go to this submit
4:46:00
button here we have children and the is
4:46:06
basically uh this font awesome and the font awesome icon to save and span maybe
4:46:14
we can do here that if it's pending so if
4:46:19
pending then let's do parenthesis and I'm going to put span
4:46:24
with saving dot dot dot uh otherwise so let's do if not saving uh saving sorry
4:46:33
not saving pending let's do end parenthesis and uh or we can just do
4:46:40
children so I can let's remove this and I can put children here and this will
4:46:47
work so now if I click it's still it's still and grayish oh now it says saving
4:46:54
dot dot dot as you can see so that is nice maybe we can make it less grayish
4:47:01
or and the text uh we can make the text a little bit more uh visible so let's do
4:47:08
maybe 300 here and I don't know let's do maybe 400 so it will be more visible
4:47:16
yeah I think it's fine um let's see saving yeah I think
4:47:22
that was too dark let's do 200 as it was and let's see disabled is blue 300 let's
4:47:30
see 400 yeah I think this this will be fine
4:47:35
let's refresh and uh if I save oops it's
4:47:40
still loading okay it's still loading because I have this uh slow fre G let's do no throttling let's back to slow 3G
4:47:49
if I click saving yeah I think this looks fine let's put no throttling back
4:47:55
and I think it's fine so we have here here and here and um and we have this
4:48:04
saved which is nice so we know it's saved now let's fix
4:48:09
that location will be sent as well or maybe it's already being sent so let's
4:48:17
do let's try it let's put David here location Stockholm
4:48:23
Sweden uh Sweden and here for the bio I would just say my bio dot do Dot and
4:48:31
let's hit save and let's see if I refresh refesh uh if I refresh it's just
4:48:37
saved so everything seems to work and that is uh nice so maybe instead of my
4:48:44
bio I can put uh I don't know my bio uh
4:48:50
goes here okay and uh that's fine let's see if I go to analytics back here yeah
4:48:58
my bio goes here it seems to it seems to work right so uh this works fine and we
4:49:07
can now save uh the information here uh from here the next thing will be
4:49:15
to make this to work so we can choose color or image and if it's color it will have it
4:49:23
will be an input for color and if it's an image we want to upload an image and
4:49:31
we want to save it as a background here instead of this gray background so this
4:49:36
will be the next part all right so first let's do that uh which whichever which
4:49:44
one is saved let's save it into database whichever which one of those is selected
4:49:50
sorry so uh if I refresh none of those is selected and uh let's uh fix it so we
4:49:58
have it as a component here with only options and uh we don't need this on
4:50:04
change I think so now I'm going to first add a default the uh fault value as we
4:50:15
have with the inputs as we have here for example and the default value will
4:50:21
be um let's say it will be color all
4:50:26
right and um now let's put let's go in
4:50:32
here and let's grab our default value and now uh here I'm going to add uh well
4:50:41
default value and default value will be true if it's uh the same as option value
4:50:49
so if default value is the same as option value so uh let's
4:50:57
see maybe it's not uh we cannot use default
4:51:02
value uh and in here we should be do like default check default checked
4:51:09
instead because it's a radio button so it's uh let's see default value option
4:51:15
value yeah and now let's see what's uh default value here color so now if I
4:51:21
refresh this one is selected uh before nothing was selected and now uh the
4:51:27
color is selected as default so now it works uh now we also want to save it so
4:51:34
as you can see we have inputs uh for every option we have input of type radio
4:51:41
with the name background type so we should be able to go to our server
4:51:47
function page actions and we should be able to grab it here so let's do const
4:51:53
background type equals form data get background type and let's add it here to
4:52:00
our update background type we also needed to put this to our page so let's
4:52:07
do background type and it will be type of string with default of color the
4:52:16
color will be default all right so now let me uh restart my
4:52:22
environment and let's see if this will work so I'm going to refresh here let's
4:52:29
see do we have any errors no errors so far yeah now we have some errors or maybe warnings let's see what happened
4:52:36
display name location um objects with Json methods
4:52:41
are not supported this is warning okay let's skip this warning for now and let's see
4:52:49
I'm going to change it to an image and I'm going to save it now it's saved let's see what happens if I refresh it's
4:52:57
an image and not a it's a color and not an image so let's see why let's go to
4:53:02
pay settings for and okay it's because it's always the
4:53:08
color is always the default value instead here I should take page and
4:53:13
background type and now let's see if I refresh now the image is selected let's
4:53:20
try to go change it to color and let's save it and now the color is selected
4:53:27
right so this is good now under this Toler I want to do something like this
4:53:33
here underneath I'm going to add uh an input for a color so let's do
4:53:42
something input type I think there's input type color let's see yes there is
4:53:47
so uh let's put those two things into into a div so uh uh so this is here
4:53:59
and let's put uh this input type color into its own div so it will be in inside
4:54:06
next line uh or next row uh now here we
4:54:11
can change it uh this should be visible only if it's uh the type is uh color so
4:54:20
let's do something like this um if page uh background type is
4:54:29
color and parenthesis and let's put this there with input type color here inside
4:54:37
and now I want to add some class names of course like margin top of two so we have some spacing and let's put maybe
4:54:45
flex and justify Center so it will be centered let's add a span so we have
4:54:53
some label um pick color of your or maybe
4:54:59
just uh color for bar ground maybe just background color background color let's
4:55:08
see yeah maybe we can put it here on the beginning so it will be background color
4:55:14
colon uh let's add the gap of two yeah so we have some
4:55:20
spacing and I think this will looks nice
4:55:25
and maybe we can also put this into this grayish uh box so let's do here
4:55:34
something like this uh here above I'm going to put the div with background of gray I don't know 200 and let's try to
4:55:42
put this thing inside so we have something like this now I'm going to add
4:55:49
a shadow shadow let's see yeah Shadow is here now
4:55:55
uh the the text should be uh more grayish so let's do text Gray 700
4:56:04
yeah and let's add some padding all right that's good but now this margin
4:56:10
top should be moved to this thing so let's do like this and I think this
4:56:18
looks fine um but now we have this input type
4:56:23
color we need to add name here so it will be background color let's say so we
4:56:32
can save it to our database so um it will be named background color let's add
4:56:39
it to our page model let's do background color background color type
4:56:46
string and default will be let's say uh black let's do black and let's see how
4:56:54
this will work and here let's do default value will be page background color so
4:57:01
let's see yes and now let's use this color here so
4:57:06
instead of this background gray 300 I'm going to put class names here and here
4:57:13
I'm going to put style and let's do object background uh background color
4:57:21
and here I'm going to put page background color like this so now it's
4:57:28
white let's see if we can no this will not change like this this but let's see
4:57:34
what happens if I save it so uh let's see where we are at so we have input of
4:57:41
type color with background color name let's see if this will be saved inside
4:57:47
page actions no not yet but we can grab it let's do const background color uh
4:57:54
color with one L form data get background color let's put the background color here and we need to
4:58:02
restart our environment so let's do this and uh let's see if I hit save
4:58:10
let's see if this brown will be saved to our database saving still saving and
4:58:17
saved if I refresh well it's uh saved so
4:58:22
let's change it to color I don't see the I don't see the the Picker but that's
4:58:28
fine let's go back to page settings form and let's see what's wrong
4:58:34
so um this doesn't change doesn't show uh the Color Picker because we always
4:58:42
check for the uh what's inside the page object and not what is actually selected
4:58:49
so how we can change this well we can change this by doing State we will need
4:58:59
state for those so let's do this uh um let's do
4:59:05
State uh here uh and the state will be called
4:59:10
background type set background type equals use State and default will be
4:59:19
page background type right and now we will do something like this um here we
4:59:26
have default value and I think that's fine we can just we will just need to
4:59:31
change this and that the color pick will be visible if background type will be
4:59:39
color and on those we will need to have actually on change on change and we want
4:59:46
to grab the new value and we want to grab this put this new value to
4:59:52
our uh background type value right and we need to implement this on change so
4:59:59
let's go here let's put on uh on change
5:00:05
and let's put it here as on click maybe and on click we want to grab event and
5:00:13
we want to run our own change with event uh Target value right let's see if this
5:00:22
will work so if I change yes it works so I can change this and I will make it um
5:00:31
green so let's hit save save saved and let's see yes it's saved if I change it
5:00:37
to image let's hit save it's saved and it's fine now let's change it to color
5:00:44
and let's put the color to be redish let's save it refresh it's red so this
5:00:52
is fine and now what I want to do is that I can mess here mess here around
5:00:59
and I want the the background to be Chang as well so I need to have state
5:01:05
for this let's go to page settings form and now let's put settings uh state for
5:01:11
our color color set color use State default will page background color maybe
5:01:18
let's rename it to background color set background uh color and now uh let's see
5:01:26
here we have input of type color and we have default value here we
5:01:34
can just add on change with the event we will want to do set background color to
5:01:41
event uh Target value right so now let's see if I change something here nothing
5:01:49
happens because here we use a background color to be from the page and we want to
5:01:55
use our state so is do background color and now let's see this is really this is
5:02:03
really cool so let's see if I save refresh yeah so now we have a a nicely
5:02:12
working um we can change color of the background looks really works really
5:02:18
nice and we can save it and uh yeah it works uh really nicely
5:02:24
uh now the next uh will be um uh the image so let's go to uh let's see here
5:02:33
we have background type color let's change let's do background type if it's
5:02:41
uh image let's do end parenthesis let's put a div and let's put uh button uh button
5:02:51
regular button button type uh of button
5:02:56
and let's put maybe just test here yeah let's change this test to change
5:03:03
image yeah and uh now uh
5:03:09
maybe uh maybe for the image we don't want to have this gray box and we will have only a button a white button so
5:03:18
this gray box is this div that is above uh this iFish so let's put this gray
5:03:26
thing only for the uh only for this uh
5:03:32
color thing only if it's a color so now we have changed image button only if
5:03:40
it's not the color that is selected yeah now if we have image uh we have
5:03:47
this button let's add some class names here so let's do class name and I want
5:03:53
to do background white some Shadow some uh padding on the sides of four on the
5:04:00
top and the bottom of two some margin top of two and I want this to be
5:04:05
centered so let's do H let's see I'm going to do MX Auto and the inline block
5:04:15
let's see no this didn't help so let's remove this and let's do something like
5:04:21
this here class name flex and justify Center and now it's uh in the in the
5:04:28
middle so this is nice so uh this uh should
5:04:35
work uh maybe instead of having this as
5:04:41
white button we will make it uh blue so it will stand out more or maybe it can
5:04:47
be white I don't know um think it looks uh fine even as white depending of
5:04:54
depending on the color for the background you have and maybe let's skip it with white so uh White is fine let's
5:05:03
put the label here and the closing will go here so uh when we click this button
5:05:10
we want to uh show the um file picker right right so for
5:05:19
this I'm going to put an input type file here and let's see so we have this no
5:05:26
file chosen choose file and then if I click it I have a file picker so I can
5:05:31
pick an image or another file now file uploads can be hard to understand in
5:05:38
fullstack apps so I decided to create a short diagram for this uh a sequence so
5:05:45
I can show you guys how it will work let's put a sequence here let's remove
5:05:51
everything well first we have our uh client uh site of our app so let's put
5:05:58
clients with the icon of uh let's say monitor
5:06:03
Monitor and um the first thing that happens is we are uploading a file from
5:06:10
our client and we upload we choose a file we pick a file on our client
5:06:16
application react application and first what happens is we are sending this file
5:06:22
to our backend and backend is our next JS API let's put back in here with an
5:06:31
icon of let's let's say server all right and what we are doing here is we are
5:06:37
uploading uh a file all right so first thing is we are uploading a file to our
5:06:43
backend and now the thing is we are not saving this file to our back end we are
5:06:50
not saving uh this file that we are uploading um in any directory that is
5:06:56
inside our project and instead we want to save it inside let's say S3 backet or
5:07:03
Google cloud or somewhere else but in this app we are going to use S fre
5:07:09
backet so the next part we uh we are going to grab this file from the back
5:07:15
end and we are going to send it to our S3 backet so from back end we are
5:07:23
sending a file to uh to our S3 bucket
5:07:28
let's put here icon S3 and what we are doing here is uh
5:07:34
sending let's say saving uh saving the file all right so we pick a file on our
5:07:42
client app on inside of react which we choose a file and then we save this we
5:07:48
send this to our backend API inside our next application but we are not saving
5:07:55
this inside our backend files inside our project instead using our backend we are
5:08:01
sending this to S3 backet on AWS because
5:08:07
we want to save it uh there and not next to our project files right uh what
5:08:14
happens after uh when it's saved on S3 uh S3 informs us informs our back end so
5:08:24
let's do back end and and it informs us about the URL uh it says that okay okay
5:08:32
everything is fine and it's completed we have the file it's saved and uh then we
5:08:39
can get the URL of the file so uh we get the URL inside our backend and then we
5:08:45
can just take this back take this URL and we can send this back to the
5:08:50
client so we can do just back end to client and showing the uploading
5:08:58
uploaded file so once again first on our client we are picking a file to upload
5:09:07
then when we pick a file we are sending information about this file to our back
5:09:12
end and then when we have this information on our back end uh it's an
5:09:18
xjs API we are not saving this inside our project directory instead we are uh
5:09:24
sending this to S3 bucket uh as you can see and then we are saving this in
5:09:32
inside S3 backet on AWS then when it's saved we can get the URL back to our
5:09:39
backend so inside back end API we know what is the URL of this file and so we
5:09:45
can save the URL in the database if you want and the the most important part is
5:09:51
that we when we have this URL we can send it back to the client and we can
5:09:56
say okay the file that you picked to upload is uploaded through our back end
5:10:03
uh and inside an uh uh S3 backet and here is the URL of the uploaded file so
5:10:09
inside our client we can let's say for example if it's an image we can display
5:10:14
the image using the URL that we get from S3 so this is how upload Works um in
5:10:23
full stack apps with backend API and S3 buckets uh what I will do now is uh as
5:10:32
you can see we have this file picker it looks bad and I want this this one to
5:10:38
pick to open the this thing to open file files Chooser in the browser so uh to do
5:10:46
this I'm going to change this button to a label
5:10:52
label and and I'm going to remove this type button and I can do something like
5:10:59
this I can put this input in inside this label so now we have something like this
5:11:05
and if I click here uh I have a file picker and what I will do is uh on this
5:11:12
input type file I'm going to make it um hidden and so it's uh now it's like this
5:11:20
and if I click it opens all of the uh this file picker thingy on the browser
5:11:26
so now it works fine and we just need to put some uh with we have type file we
5:11:33
can we will need to put type uh sorry name on this input as well uh image
5:11:41
let's call it image so it will be sent with our uh with our form data and now
5:11:48
let's try to upload this to uh to S3 or somewhere else so uh
5:11:56
let's see this should work and um but
5:12:02
maybe uh we should because I can pick an image I can for example pick this
5:12:10
image and I click open and nothing happens and we can do that when I save
5:12:16
it will upload and it will be shown here instead of this color or I can do that
5:12:23
when I pick an image it will then upload and it will be then shown here on this
5:12:30
uh background here here uh but it will not be saved as my background until I
5:12:36
click this button if I would refresh it would put back this color so uh let's do
5:12:43
this way so we can see the preview of the image and it will be my it will be much nicer so uh we have here background
5:12:51
color here we have change image button and we have our
5:12:56
hidden uh hidden whoops hidden input of type file
5:13:02
and um we have name for this and so on I'm going to re re remove this name we
5:13:10
don't want this instead I'm going to add something like this I'm going to add on
5:13:17
change and on change I will run maybe uh
5:13:23
another function so on change I want to do uh handle upload or maybe be handle
5:13:33
file let's do file change all right and now let's fix this function somewhere
5:13:39
here so let's do uh function handle file
5:13:45
change all right and now uh what do we want to do we will get an event
5:13:52
here and inside we can check if we have files so let do const event Target um
5:14:00
Target files and uh let's see something is
5:14:06
wrong here yeah I forgot about the name files equals this and or maybe let's just grab one
5:14:13
file because it will only be one file always all right uh now if we have a
5:14:19
file we want to upload that file so how we can do this well uh I think that for
5:14:26
this I'm going to use uh API uh so I'm not going to to use server
5:14:34
functions um because maybe it would be nice to actually show some preload popup
5:14:40
or something so no server functions I'm going to use API for this let's see uh
5:14:46
I'm going to use close this up and inside API uh oops not nothing here inside API
5:14:53
I'm going to create a new directory upload and inside I'm going to put a
5:14:59
file called uh called route. JS right and inside here it will be
5:15:09
export function post okay and we will have a request
5:15:16
here right and uh now let's do something like this that inside this uh page settings
5:15:24
form if we have a file we want to run fetch to/ API SL
5:15:32
upload and let's add some stuff here so here we want to do that the method will
5:15:39
be post and we want to send some headers I
5:15:45
guess headers and here I'm going to put
5:15:50
content uh type and the content type will
5:15:55
be uh here we can do like that we are sending a form for content type but
5:16:02
let's try without headers and let's see if this will work so um uh what else do
5:16:08
we need we need to send the file and to send it we need to put it as body so
5:16:14
let's do body and well to send this file as body we need to First prepare our uh
5:16:23
data here and our data will be form data let's do con data equals a new form data
5:16:31
and uh let's just do that data set image
5:16:37
uh or maybe let's call it file where when we upload stuff the file will be
5:16:42
just our file and body will be our data and uh that's it now we can add then on
5:16:49
this Fetch and then let's say we'll have a response and with this response we will
5:16:57
first do to Json and then uh if we have
5:17:03
a um response converted to Json we will
5:17:08
have let's say link here inside all right and with this link let's say that
5:17:14
we will do just console log this link and that's it for now uh now we want to
5:17:22
fix the uh route for uploading stuff and to do this I will need
5:17:29
to um log into my uh AWS console so
5:17:34
let's go to console AWS and I'm going to log into my uh to my console here so we need to
5:17:43
just log into yours all right so now I'm logged in let's go to S3 and we want to
5:17:50
have a new buet so let's do create backet and here let's call it maybe uh
5:17:57
as we have with the project link list link uh link
5:18:03
list and uh let's see uh let's do acl's
5:18:09
enabled object writer and let's don't uh block uh we
5:18:16
don't need to block Public Access yes I understand no text no
5:18:23
encryption and I think that will be it let's do create backet and uh we need to
5:18:31
change the name let's do link list files let's see create bracket and
5:18:39
uh yeah and this worked now we need to create the user for this so let's go to
5:18:44
here and let's do um security credentials and let's create let's go to
5:18:51
users create user and now let's do something like this link list let's call
5:18:59
user like this and let's do next and now uh permissions attach policies I'm going
5:19:07
to attach policies manually and I'm going to create a policy so as you can see in the new tab we have this specify
5:19:15
permission so we can create a policy uh specify uh permissions select the
5:19:21
service let's see attach policies directly and I clicked on this create
5:19:27
policy so let's do um service S3 let's
5:19:33
select this one and now let's see uh let's do all S3
5:19:40
actions and now let's select here specific and for now I'm going to just
5:19:47
select all of those check boxes but in a second we will uncheck one of those here
5:19:53
where we have backet we want to uh uncheck this one we don't want to specify all of the we want we don't want
5:20:01
this user to access all of the packets we want to uh this user to access only
5:20:08
link list files all right and maybe we can save it as the name of our packet
5:20:15
let's go to EnV and let's put here backet name equals and let's put link
5:20:24
list files right and back at name link list files add this looks fine fine
5:20:31
let's go next policy name link list files policy doesn't really matter here
5:20:40
and this looks fine let's create this policy the policy is created we can close this tab and back to the user
5:20:47
let's refresh the list of the policies let's search for link list policy let's
5:20:55
select our new policy let's do next and let's create a user and now we have our user let's find
5:21:02
it link list let's open this user and let's go to security
5:21:08
credentials and here we have uh let's see uh access key create access key and
5:21:16
here we will do application running outside of AWS let's do next let's do
5:21:22
create access key and now we have access key here uh sorry here and here we have
5:21:29
secret access key so uh let's do S3 uh let's save it as S3 access
5:21:38
key and we will also need the S3 secret access key okay and so let's copy this
5:21:45
one and let's put it here and let's copy this one and let's put it here I'm going
5:21:52
to change them later and I will probably even remove the user so you guys cannot
5:21:58
use it but you should just go and create this yourself uh now uh we want to upload
5:22:07
here uh I think this is our uh API upload route yes it is so now we want to
5:22:14
use this user we want to use this newly created backet and from the request H we
5:22:20
get information about the file and we just want to upload our file right so
5:22:28
how can we do this well we have our our route and the first thing is that we
5:22:35
want to grab the a form data so let's do const data equals and let's do await
5:22:44
request and here form data as a function and as you can see we need to add async
5:22:50
here yeah and now we have form data because we were sending form data as you
5:22:56
can see here uh we are preparing new form data and we uh are adding file and
5:23:04
this is object of the file right now uh we have form data maybe we can just call
5:23:10
it form data so it will be more precise now let's do if form
5:23:17
data uh has has uh if form data has file
5:23:23
then we want to update this file so let's do const file equals uh form form
5:23:29
data get file okay so we get the file this is our file we want to upload this to S3 to do
5:23:37
this we will need to install some stuff with your own ad and we want to add AWS
5:23:44
SDK slash a client S3 yeah let's do this so this is
5:23:51
installing now we can probably uh use it so let's first uh to upload something we
5:23:58
need to define or specify first create an instance we need to create an
5:24:04
instance of S3 client so it's the con S3 client equals new s um S free client so
5:24:15
let's import this one from this yes and now here first we will need to put
5:24:23
region uh what is the region of this client and uh I don't know if we stopped
5:24:30
there but when you create a backed on AWS it asks you uh on what region you
5:24:37
want to put it I picked the default so it's Us East one right now we need to
5:24:43
put the credentials credentials sorry credentials and
5:24:49
credentials is an object where we have access access key
5:24:55
ID and and we have also secret access key and secret access key all right and
5:25:04
now for the access key it's inside process environment and S3 access key
5:25:11
and now for the secret access key we need to do process environment S3 secret
5:25:18
access key all right so we have our S3 client now we want to upload the file
5:25:27
using this s fre client but but before we will do this we have our
5:25:33
file uh before we will do this I want to uh change uh what name we will use to
5:25:40
store this file on our uh S3 bucket because I don't want to use the name
5:25:47
that the user is using because let's say we are uploading an image that's named
5:25:54
test. jpeg well to avoid Collision that two people uploads uh upload uh files with
5:26:03
the same file names we cannot allow it so to avoid this those collisions we
5:26:08
need to rename our files and um to do this I think I'm
5:26:13
going to use a cool Li called unique ID so let's do yarn add unique ID it just
5:26:23
it's just a function that generates a random ID so let's unique ID now I need
5:26:30
to import it manually so let's do import unique ID from unique ID yes and now
5:26:40
const random ID equals unique uh ID run
5:26:46
it as a function and now I'm going to use this random ID to add to my new file
5:26:51
name const new uh file name let's do new
5:26:57
file name like this and it will be this random ID and I need to add an extension so it can
5:27:04
be like one to three uh and so on on and many numbers and letters and then I need
5:27:11
to add that and jpeg or or or whatever is sent with this upload and to grab
5:27:18
this extension as the extension equals I need to go to file then the name and
5:27:27
then I want this I want to split the name so if it's if the name is like test
5:27:33
jpeg I want to split it with uh by the dot here so do split and now I want to
5:27:42
grab the last part so uh to do this I think I can do just pop and it will pop
5:27:50
with the with just uh jpeg so now let's see uh
5:27:55
random uh ID let's add the dot and then let's add extension on the end to our
5:28:01
new file name all right so we have S3 client we have a new file name let's
5:28:07
maybe see if this will work so let's do console log new file name and uh here on the end let's just
5:28:16
do uh return response Json true and
5:28:21
that's it so we can see if the upload works so let's open here Network let's
5:28:27
pick an image and for the image let's maybe take this thing open and nothing
5:28:36
happened when I choose the file so let's see let's go back to page settings
5:28:42
form and let's see event Target files maybe the file is empty let's do console
5:28:49
log of the file to see if uh something will happen here let's do a console here
5:28:56
let's clear this image change image and let's pick this one we have a file and
5:29:03
we got it true let's see and we get an upload so now it worked the preview said
5:29:10
true let's see the console here uh we get this random find name that looks
5:29:16
like this now so everything seems to work let's go back here and now we have
5:29:22
random find name now we want to upload this file using our client so to do this
5:29:29
um first uh let's do something like this
5:29:35
uh we want to do s3e client and we want to upload to upload we are sending
5:29:41
commands with our SV clients so let's do send we want to send a command and the
5:29:47
command is uh put object so let's do new put
5:29:52
object command and this is a class that we are importing as well and here we
5:29:59
just put just uh an object of uh well all of the configuration uh where we want to put it
5:30:07
uh upload how we want to upload and so on so first the backet so the place the
5:30:13
backet is inside our environment variables so let's do backet name I
5:30:18
think it's backet name let's see yes it is backet name so backet this and
5:30:25
don't forget that it's capital B then let's do key and and the key is the file
5:30:31
name so let's put new file name and what else we want we want to set ACLS so we
5:30:39
want this to be public read so it will be uh if we access the link we can just
5:30:46
see the image all right so uh that's this uh what else we need we need body
5:30:53
of our file and uh to grab the body it's a
5:30:59
little bit comp complicated but not super complicated we need to prepare this body and to prepare this body we need to
5:31:07
first uh specify chunks and chunks would be just chunks of body and then we will
5:31:13
do something like this for await and we will do for each
5:31:20
chunk of file stream stream uh like this H we will add chunk
5:31:28
two chunks so let's do chunks and let's do push our
5:31:34
chunk yes and uh that's it we have
5:31:40
changed yeah so the thing is we are using file stream to stream chunks of
5:31:47
file and then we just collect this to our chunks array and now for the body we
5:31:55
just put uh all of the chunks here uh joined to uh to together so to join them
5:32:02
together we are going to use buffer and then um we will do concat so to concat
5:32:10
concatenate this or to join this together concat and just our chunks of
5:32:19
uh of the file right and then this will work this will upload but there's
5:32:25
something uh more that I want to add content type and this is is uh they want
5:32:31
S3 wants to know what type of file this is so this is uh image most likely and
5:32:38
we don't know if it's jpeg or GI or what H but this is inside file type so we can
5:32:44
just do file. type and the information is there inside so it's like uh image
5:32:51
teg or something like this all right so uh this will work we
5:32:57
just need to add weight here and this that should be it so now we wanted to
5:33:05
return a link right so let's do const link and let's define it here so the
5:33:12
link uh always goes like this htps SL slash first the bucket name and for our
5:33:20
bucket name it's here maybe we can put this as a as a constant here const
5:33:26
backet name equals and let's put uh uh this let's put this here and let's use
5:33:34
backet name here and let's use backend name here so let's use backet name uh so
5:33:44
htps then we have backet name do S3
5:33:49
s3. Amazon aws.com
5:33:55
slash and then our file name so just uh we can do like this new file name and
5:34:02
that's it we have our link that we can send with Json and this should work so let's try
5:34:10
it so U let's see I will refresh here just to be save let's change it to image
5:34:16
change image and let's do that I'm going to pick for example this image open it's
5:34:23
uploading pending let's see if this will work yes and as you can see we have our
5:34:29
link link here let's see what happens if I try to open it as you can see it's
5:34:35
uploaded so everything worked so now we need to go back to page settings
5:34:42
form and let's fix this so we get a link
5:34:47
and we want to put this back this we want to put this link here to the background right so let's do this uh
5:34:55
let's prepare state for this uh it will be Bugg ground image and set background
5:35:02
image and the default will be background image let's see if it's uh inside page
5:35:09
model just to be sure no it's not let's add it page uh background image type
5:35:16
string default will be empty string now let's go back here and we have
5:35:21
background image that's fine now let's scroll to this thing uh this gray color
5:35:29
or cover thing here it is so we have the style thing and we are sending uh we are
5:35:36
setting background color but instead of doing like this uh let's do something
5:35:43
else uh I'm going to cut it from uh from here and let's do something like this if
5:35:50
we have if the background type if the background type state is
5:35:58
color then let's do this let's return this object um otherwise so let's do colon
5:36:07
and let's maybe put it like this otherwise colon the style will be a
5:36:13
different object and the object here will be actually uh background image and
5:36:21
the background image will go like this uh let's put URL parenthesis and here
5:36:29
inside we want to put our link so let's do a background image because this one
5:36:37
has the link and uh now let's see if this will work so if I pick image change
5:36:44
image and let's pick uh this one open and it's uploading let's see if this
5:36:52
will work and I think it worked but nothing happened this is because we just
5:36:57
do console log and we don't set it to background image we don't set
5:37:03
this link to background image so let's try again I'm going to refresh just to be sure let's go to image change image
5:37:11
let's upload this one open and it's uploading and it worked uh we need to
5:37:18
fix aspect ratio and so on uh but uh other than that it looks uh
5:37:26
fine so we just need to make it more like like it's uh uh it's a cover of
5:37:33
this uh of this uh uh of this div so
5:37:40
let's go to class names let's search for a background cover so now as you can see
5:37:47
it's more like a cover but it's not centered it's from the top so let's see
5:37:53
uh let's do background uh Center yes and now it's centered so now
5:38:00
let's try with different image let's see this one MacBook let's open now it's
5:38:06
uploading and behind the scenes and now it's uploaded and as you can see it's nicely centered so now if I just refresh
5:38:15
it will not be saved but if I change image and I pick this one and I click
5:38:22
save it will still not be uh it will not be saved because we we don't have any
5:38:31
input uh with the background image so uh
5:38:36
let's see um and we are sending only inputs
5:38:41
right so for example here we have input with color and it has name so we are sending this with form data but uh here
5:38:50
if it's image let's then add that we will have also image here
5:38:57
input I'm going to add an input that will have uh the value of the of this
5:39:05
link so let's do background image and as you remember this background image is
5:39:11
let's see background image yes and I'm going to add the name the name will be
5:39:19
well background image as a string and uh yeah now as you can see
5:39:25
it's here but I will make it hi hidden sorry type hidden so now it's not
5:39:32
visible and now uh let's handle this in our um server action so let's go to page
5:39:40
actions let's grab it cons background image equals form data uh grab get
5:39:48
background image and let's try to put it here background image all right uh let's
5:39:55
go back and this hidden input is on rendered if background type is image
5:40:03
which is fine but maybe it would be better to put it uh here that it doesn't
5:40:10
matter uh if it's uh uh what is selected if it's uh uh color or if it's uh image
5:40:21
it will still be sent to the database so uh let me also grab this one uh or maybe
5:40:28
I cannot put H grab this one um let's just make this let's just
5:40:35
put this one back I'm going to put this one back here where it was and here inside page actions I need
5:40:43
to check if we have background image or color because if we don't I don't want
5:40:49
to update those so to do this I'm going to do something this const data data to
5:40:56
update maybe let's call it data to update and I'm going to put all of this
5:41:05
here uh as an object but accept uh those
5:41:11
two so I'm going to cut those two color and the image and here I'm going to put
5:41:18
data to update data to update and now uh before I will send this data to update
5:41:25
I'm going to check uh if we have background color and background image so
5:41:31
uh only if we have background color then I'm going to add it
5:41:36
to um data to data to update so let's do data to
5:41:42
update um. uh do background color equals
5:41:47
background color let's do the same with background image if we have background
5:41:52
image then we are adding this to the data data to update and back
5:41:59
image image to be background image like this so why am I doing this because if
5:42:08
I'm change from color to image and I upload an image and I save
5:42:14
it then okay I'm going to update this with this data to update and so on but
5:42:21
uh if I would not have this uh uh background color sent with the form data
5:42:28
and I would still try to grab it from the form data it will be undefined so
5:42:33
the color that I had previously would be uh uh removed from the database or it
5:42:40
will be null so that's why I'm first checking if we have something there I
5:42:46
could actually do uh this thing with all of those things and maybe it will be
5:42:53
better way of doing this um and it will be less copy paste so let's maybe try to
5:42:59
do this so we are going to update only the data that we get from the uh form
5:43:06
data so let's first Define all of the data keys and here we will have display
5:43:15
name we'll have uh we will have location we will have bio we will have background
5:43:23
type we will have background uh color color and we will have background image
5:43:32
like this let's put this into sever lines so it will be easier to read and
5:43:37
now we don't need nothing of this or maybe let's keep it for now but now we can do something like this for each
5:43:45
const key of data keys so for each uh
5:43:51
key let's see con key of data Keys sorry not if for for each key in data Keys uh
5:44:01
I want to first check if it exists so if form data has uh this key I want to do
5:44:10
if uh if this uh exists in form data then I want to add it to our data to
5:44:19
update equals empty object for now let's remove it from here and let's add it
5:44:27
here uh data to up update we want to AB add that the key inside data to update
5:44:34
will be uh form data and get key right
5:44:41
now we don't need this or this and and we just have this so for each all of
5:44:48
this all of those keys we check if uh if a key is inside form data if it is we
5:44:55
are adding this to this object data to update and then we just uh update page
5:45:02
where the owner is our logged in user with all of this data that we collected
5:45:07
from the form data that we uh from all of those keys that we found uh we just
5:45:13
uh update everything we got right I hope it makes sense so now let's see if this
5:45:18
will work um let's refresh let's do diid 2 Stockholm Stockholm 2 uh here to let's
5:45:29
pick an image so let's do maybe this one
5:45:34
let's open now it's uploading let's wait let's wait until it's uploaded let's now
5:45:41
hit save it's saved Let's uh refresh and it didn't work uh let's see
5:45:49
why let's see uh well it worked uh as you can see we have two here two here
5:45:55
and two here and the image is selected but the background image is not shown let's see
5:46:01
why here we have this uh but the here we have undefined so let's see why um first
5:46:10
let's see on the on here do we have everything yes we do maybe I forgot to
5:46:16
restart my environment so let's try again um I'm going to re refresh here my
5:46:23
page and let's see let's change image
5:46:28
Let's uh pick this Forest thing upload now it's uploading behind the scenes
5:46:34
later I'm going to add a preloader here so we'll see the progress now let's do
5:46:40
save saving it's saved let's do refresh here and now as you can see everything
5:46:45
works I just needed to restart my environment right uh so if I refresh
5:46:52
everything is on place and I can change to color if I want but I don't want to have a color I want to have an image
5:46:59
instead uh right this works and uh and now let's see uh this looks fine this
5:47:07
looks fine everything is saved uh let's say let's see if this will work if I'm going to change to a
5:47:15
color let's pick a dark grayish or blue refresh and we have a color let's pick
5:47:22
an image let's save the existing image and let's see if we will have it yes it
5:47:28
uh looks fine let's change this one to this MacBook H but before we will do
5:47:34
this I want this preload thing so let's go to page settings
5:47:39
form and inside this handle setting handle file change we have our upload
5:47:47
functionality and I want to have something like uh please way it's
5:47:53
uploading to do this uh I'm going to do something like this let let's remove
5:47:59
this console log we don't need this uh here inside our if we have a file then
5:48:05
we want to upload it right here is all of our code to upload the file and set
5:48:12
it to our state set the link to the state uh what I'm going to do is I'm
5:48:19
going to put this as a promise and I'm going to use this uh uh react hot toast
5:48:27
so let's do new promise with resolve and reject let's put all of this inside our
5:48:35
promise and we will do something like this here we set uh background image to
5:48:43
be this link and when it's done I'm going to do uh resolve run this resolve
5:48:50
on the promise uh here we have this do then maybe we can do I will not I will
5:48:57
not handle rejection maybe I should so let's do something like this if response is
5:49:05
okay then I will do all of this otherwise so else I'm going to do reject
5:49:13
uh sorry not like this reject on this promise right so we have our super long
5:49:19
promise here now let's do uh react hot toast so let's do toast
5:49:25
promise and let's maybe rename this promise to uh upload promise so we will have a
5:49:32
unique name upload promise and here I want to add loading State loading text
5:49:40
to be uploading dot dot dot and uh then
5:49:45
let's do success to be uh uploaded and exclamation mark and the
5:49:52
error it will say um upload error error like this we
5:50:00
let's fix the text upload error yeah and
5:50:05
let's add a weight here and let's add async here um I added a weight because
5:50:13
this is an as syn function and yeah so now let's see if I will refresh first
5:50:20
and then let's hit change image and or maybe before I would do
5:50:26
this let's add an icon here so we have this change image
5:50:31
here and I want to put this to a span
5:50:37
and I want to add an upload icon so let's do a font awesome icon let's do fa
5:50:44
upload fa upload yes and on this label
5:50:49
we will need to add flex and gap of two so now we have we should have an let's
5:50:56
see um an icon let's see if I refresh no we don't I don't see this icon here okay
5:51:05
it's because um or actually it should be visible let's see what's is wrong here
5:51:12
change image so we have this label here we have input I don't see the font awesome icon
5:51:21
let's see uh maybe it's because this upload icon doesn't exist or something
5:51:27
let's try try to find it so let's search for upload yeah and there is an
5:51:34
upload um but let's use this one instead Cloud Arrow up and let's see if this one
5:51:41
will work so let's go to here and let's do Cloud
5:51:48
Arrow H okay that's why no I don't know why fa
5:51:53
cloud cloud uh Arrow up let's import from solid icons now let's see if we
5:52:00
have it no we don't let's refresh let's see change image change image so let's
5:52:06
see what is wrong here so we have a label yes and inside the label we should
5:52:13
have the icon so let's see what do we have here we have two inputs that's fine
5:52:19
and we should have an icon font aome icon uh but it doesn't work let's try to
5:52:25
put it those two things inside a a div and now let's see if I refresh
5:52:32
let's see here uh we have a label but we don't have any div let's see why change
5:52:40
image it should contain a div but it only has this label I saved
5:52:47
everything and here we have some warnings but uh let me just restart just
5:52:54
to be on the save side and let's refresh the page and we have some error here
5:53:01
let's see what happened unexpected end of Json input so something is wrong
5:53:09
here and let's scroll up to see where it started unexpected end of Json input
5:53:18
everything is rendered but we get this weird error let's try to restart once again yeah
5:53:26
that's weird uh let's try to remove this uh
5:53:32
icon for now so um if I restart the environment once again we still get the
5:53:40
error it still says unexpected and of Json
5:53:47
input does it say where it is uh
5:53:52
execution Json pors um no it does
5:53:59
let's see maybe something wrong with the okay now I see I accidentally imported
5:54:04
this thing weird uh now it should work with the the
5:54:10
icon so we have this uh let's see change image change image here let's put uh my
5:54:20
font awesome icon the icon will be fa um Cloud Arrow up now it should work
5:54:29
let's uh restart the environment and now everything should work and uh let's see
5:54:36
if the icon will be visible so yes it is H but we want to make it uh preter so
5:54:43
for this div let's do flex and gap of two and uh let's add items
5:54:52
Center and um I think it looks fine but
5:54:58
uh I want the icon to be more grayish so let's do class name and I want to do
5:55:05
background of uh or sorry maybe it should be text Gray 500 yes it worked
5:55:11
let's make it a little darker so let's put this here this here and now let's do
5:55:17
maybe 700 yeah I think this will work so we have change image and I also want to
5:55:24
add a cursor of type type pointer so was the pointer cursor pointer yeah and same
5:55:33
on those uh so now I have pointer but let's do the same on those togglers here
5:55:39
so uh let's see I'm going to go to globos because here we have some basic
5:55:46
styling for those uh radio togglers so let's add the cursor pointer here and
5:55:53
now let's see uh it is almost f fine
5:55:58
except that uh on those divs we probably need to have pointers as well cursor
5:56:05
pointer now let's see if I refresh uh no
5:56:11
it's only un selected okay and that's not what I wanted I wanted on all of
5:56:17
those so let's do do it here so let's do refresh yeah and now it works so now it
5:56:23
looks fine um now it looks fine it moves a
5:56:29
little bit on the hav when I toggle between those and I think we can fix it by setting minimum hav so let's go to uh
5:56:38
page settings form and here we have this uh cover thing no not here uh or
5:56:45
actually no not here here we have radio togglers here we have our uh class names
5:56:51
for the cover thing so we have a color or image I want to add maybe here uh
5:56:58
minimum hav off and I'm going to add like 600 pixels so now it's super big
5:57:06
let's make it smaller 400 pixels and let's decrease the padding on the top
5:57:11
and the bottom to just four four should be enough uh let's change this one to
5:57:17
200 yeah I think it's fine maybe let's do 300 yeah I think 300 looks nice so
5:57:25
now it doesn't change theave of this thing so it's so it's much
5:57:32
nicer uh yeah so we have now um upload
5:57:37
for the image we can change the color and this saves and this saves as well so
5:57:46
this works the next thing will be uh fix that we can change our Avatar right so
5:57:55
um we will need to have some kind of buttons here maybe underneath uh change Avatar or something
5:58:03
like this or maybe a button here on the on the corner and then when this will be
5:58:09
done they upload on this thing then we can hear underneath add something
5:58:15
like um that you can put uh uh links and buttons and contact
5:58:23
information and so on so we'll have more like white boxes but first we will need
5:58:28
to fix this uh upload for the Avatar all right so now let's fix that we can
5:58:36
change our Avatar so first here on this page page settings form let's see where
5:58:43
we have our Avatar uh looks like it's here so we have an image and it's inside
5:58:50
a div that we are pulling up as you can see with this uh margin bottom minus
5:58:58
uh 12 uh no this is not pulling up this is um decreasing the margin from the
5:59:04
bottom so the form that is underneath can be pulled up but uh with this minus
5:59:09
toop eight we are pulling the Avatar up so it's uh on partially on this image uh
5:59:16
all right but now we want to add um we want to add like a button here on the
5:59:22
corner so we can have like an upload icon and then when you click you can
5:59:29
change Avatar so um let's see I think that maybe we can try to uh first put
5:59:37
another div because if I put something here let's see test uh well then it's
5:59:44
here because we have this Flex thing um let's see what happens if I change this
5:59:50
to flex row okay then it's uh like this I don't want this to be like this so I'm
5:59:55
going to put another da and I'm going to put those two inside so
6:00:03
now as you can see this test is below the image but there's a lot of Gap here
6:00:09
and this Gap is be because we have this uh top minus8 relative so this image is
6:00:16
pulled up uh by eight so um to fix it
6:00:21
I'm going to grab those two and I'm going to put on the diva above that that
6:00:27
we just created so let's do this and now as you can see test is now much
6:00:34
closer uh but I want to style this test thing so I'm going to add here class
6:00:41
name and maybe I'm going to also change this to a button and let's style it like
6:00:47
this let's uh do that uh the position will be absolute and let's put the
6:00:55
bottom uh M bottom zero and right zero
6:01:01
so now as you can see it's on the uh bottom right corner that is nice now
6:01:07
would be nice to have uh to make it like white and with some padding and icon
6:01:14
first I want to have an icon here so I'm going to do font awesome icon and I
6:01:21
think we had this fa Cloud Arrow up icon that we can use so it will be the same
6:01:27
as this one yes and now I want to add like a background so let's the background white so we'll have a a
6:01:35
background for this and let's add padding of at least two and let's make
6:01:41
it round Dead full and let's add Shadow so it will be more visible yeah that is
6:01:47
good but maybe too much padding so let's change this to padding one yeah so we have some this let's make this Shadow uh
6:01:56
darker so let's do the same that's uh what we have here for the image let's do
6:02:01
the same for this button Shadow black yeah uh maybe we can add a text here
6:02:08
like uh change and uh yeah I think that looks nice uh but we can make it smaller
6:02:17
and we need to have some spacing here so on the Buton let's add flex and gap of
6:02:23
one so we have some spacing and now let's make it um um more to the middle
6:02:29
so let's do items Center so now the icon is more centered I don't know if we
6:02:36
actually need this uh change text um let's see first without the text uh so
6:02:43
let's put it like this let's make the icon bigger so let's put size of uh I
6:02:50
don't know is it like XL that we can put here yes that's better and now for the
6:02:56
Bon I can move this flex and GAP nice and Center because we don't have any text and I want to put here ratio or I
6:03:06
want to make it Square aspect Square yes so now it's more s
6:03:11
square-ish uh but now to make it uh in the middle I'm going to do flex and
6:03:18
items Center so now it will move up a little bit yeah that is nice and uh yeah
6:03:26
I think we can just stay with this let's check with padding of two yes that uh looks nicer I think
6:03:36
but it would be nicer to pull it down and more to the right a little bit so
6:03:41
let's do minus bottom of one and let's see oops I think that's too much minus
6:03:48
bottom or maybe it's not let's see uh minus bottom one if I save it's like
6:03:54
this if I do minus two it's here here think it's fine let's do minus right off
6:04:00
two and let's see if I save it's here let's see if I do four let's do I know
6:04:07
eight okay it's changing so it's changing by just a little bit so let's
6:04:12
do maybe four here and let's do four here okay and that's too much let's do
6:04:19
just two and two here right so uh yeah now I can click on this one and uh well
6:04:27
it it just uh uh saves the form and because I forgot to do this type button
6:04:33
here but uh this will not be a button because I want this to be a file Pier so
6:04:41
to do this I going to do the same thing that we did with um uh the upload for
6:04:47
theover image so I'm going to change this to a label and now I'm going to put an input of type file here and now um
6:04:56
for this input type file I'm going to put an ID here uh Avatar input and here
6:05:04
for this label I'm going to add uh four uh sorry HTML 4 and here Avatar input
6:05:13
and what it does is that when I click on this one now it will open a file picker
6:05:19
it will click on this input so it will open a file picker so as you can see if
6:05:25
I click it opens file picker I can pick an image so clicking this label it
6:05:31
basically clicks this uh input here so now I want to hide it so uh let's do
6:05:37
class we don't need to see this one so let's do class name hidden and uh now
6:05:43
it's better so uh I'm going also to add a cursor of pointer cursor pointer now
6:05:51
let's see yes everything works now what I want to do is uh well uh I can change
6:05:59
it and it will work uh but now we need to also have upload functionality for
6:06:06
this so um let's see how it works for the um here we have handle file change
6:06:14
and this is the function that is used uh let's see let's me let me find it's use
6:06:21
for this uh for this thing for change image here here we have handle file
6:06:28
change and uh the problem is that this handle file change is for this uh
6:06:35
background image and let's see what happens inside so uh it checks if we have file and if we do then it uploads
6:06:44
and then it sets as a background image it gets the link and sets this link as
6:06:50
background image and I don't like this because um this should be more more
6:06:57
generic so if I create uh another function I don't want to copy paste all of this upload
6:07:03
functionality so how can we fix it first let's rename this function to um let's
6:07:11
rename it to handle um handle cover
6:07:16
cover whoops cover image change okay and I'm going to put this even here so so
6:07:25
the name will be correct all right now um let's remove some generic parts from
6:07:32
here to uh to a separate function so I'm going to create an ass sync function
6:07:40
called let's say uh upload yeah just upload and this upload will take an
6:07:47
event and uh that's it so um I'm going to let's just put all of this inside
6:07:55
this uh upload code and we are going to remove uh anything that is uh anything
6:08:04
that is um that is specific just to discover and the only thing that is
6:08:09
specific to discover is this set background image so let's remove it and
6:08:15
here as you can see we are creating promise but we are not uh sending Bank
6:08:21
uh sending back this link uh to our uh promise uh we resolve function so let's
6:08:28
add it here and now let's see here we have this uh toast promise and this is
6:08:34
this popup that shows uh uh uploaded or uploading error or just uploading dot
6:08:40
dot dot I think that's fine uh but I'm going to remove this wait I don't want
6:08:45
to wait for this and instead well maybe let's keep it for now what I want to do
6:08:52
is to have an extra function maybe here as a param and it will be just a call back um so
6:09:02
let's use it a call back function like this and let's put it here call back
6:09:08
function and let's pass the link all right and now uh let's scroll here to
6:09:14
handle cover image change let's remove all of this all right so now we can use
6:09:20
this function H called upload so let's do await upload and we need to pass it
6:09:26
event and then we have this callback function here that we can just uh Define
6:09:32
so um I will Define it as an aror function so we get a link and then we
6:09:38
can do stuff with it and the only thing that we need to do with uh this uh
6:09:43
example here for the cover image we need to put this link to our state here for
6:09:48
background image so let's do just set uh background image and let's put this link
6:09:54
here now we can create a similar function for our Avatar so let's do
6:09:59
async function and handle Avatar Avatar uh
6:10:06
image change all right and let's put an event here and we are going to do a wait
6:10:14
upload and with the link well what do we want to do with the link we want to set it to estate somewhere so we need to
6:10:22
change the source of this image to estate let's see if it's a state so
6:10:28
let's see where is our Avatar uh here is our Avatar but as you can see it's not
6:10:33
from the state it's from the user so we want to change it to state so let's prepare state for this so here Let's do
6:10:41
const let's do Avatar Avatar and set Avatar use State and default will be
6:10:49
user image all right and now let's use Avatar instead of user image here down
6:10:56
here here let's see uh radio togglers here we have some here we have image
6:11:02
here we have our Avatar so let's use just Avatar right and let's see if it
6:11:08
works it still works fine now let's see now um we can use set Avatar to our
6:11:16
handle Avatar image change so I'm going to put set Avatar here and let's put
6:11:22
link when the upload is complete all right so this should do the trick and uh
6:11:31
let's see if I'm going to change an image and let's say I'm going to pick
6:11:36
this one let's click open and nothing happens why because this function is not
6:11:43
used anywhere so let's scroll to our Avatar and this empty uh invisible sorry
6:11:51
um input of type file and let's add here on change and handle Avatar image change
6:12:00
right now let's see I'm going to refresh let's see if I change and maybe pick
6:12:05
this image uploading so this looks fine and now I get an error because host name
6:12:14
this and this is not configured under images in my next config all right let's
6:12:19
see next config and we have we don't have anything for the uh um for the uh
6:12:28
those link list files on S3 so let's add this uh to our config so let's copy this
6:12:36
host name and let's add another object here where the host name will be this
6:12:44
and uh that's it so now if I refresh let's see let's go back here to page
6:12:50
settings form and now let's try to change the image to this one yes and
6:12:56
it's uploading and it's uploaded and as you can see it has changed the only
6:13:02
problem is that it's not square but uh we can fix it let's add here aspect
6:13:09
square and let's see what will happen well I don't like it because now I'm uh
6:13:14
much wider so U let's remove this aspect square and uh instead uh there is a
6:13:25
property that I can use and I think it's this layout and um and the layout here
6:13:34
maybe not the layout but um I think there's something like f so let's do F
6:13:40
to one uh image blah blah blah has both with and fill properties only one should
6:13:46
be used all right so we need to remove with and he and let's see and it
6:13:53
disappeared I guess this is because we need to put this uh fill information to
6:13:59
uh the div here that is above so let's try to do wave of 100 uh wave of 128
6:14:08
pixels and wave of 128 uh pixels as well so let's put this
6:14:14
like this because it's custom value and now it kind of work let's see if it does
6:14:21
when I change uh an image so now it's uploading and it's uploaded
6:14:27
and it's still stretched so this is not what I wanted uh let's try with um
6:14:35
object fit to cover let's see and then it says we need to have wi so let's put
6:14:42
back uh let's remove withi and half from here so I'm going to do contrl Z let's
6:14:48
put it here and instead of this let's the object fit to cover and now let's
6:14:55
see this looks fine and what if I upload this uh uh image that is more like that
6:15:02
is not a square image and well then it's uh not not uh correct but uh let's see
6:15:10
let's see what will happen if I put a wave of 128 uh8 pixels here so let's do this as
6:15:19
we head it and same with uh H so let's do h of
6:15:24
128 pixels yeah and uh this didn't work as I wanted because now I'm uh really
6:15:32
wide but uh let's try to um add some things let's see why it's this wide so
6:15:40
we have an image here but you can see it shouldn't be this wide and uh I think
6:15:46
that we can fix it by removing whff and hav from here and putting this into this
6:15:53
div no it didn't work let's see uh it's still a square well it should be a
6:15:59
square but it's not a square it's um it's more like vertical let's try to
6:16:05
let's try to fix it so um to fix it we can do something like this here is the
6:16:10
div as you can see it's smaller than the image so uh to fix it we can do
6:16:17
something like this we can grab the Border this white border is around the
6:16:22
image and put it on this div so let's see uh uh here we have on this image we
6:16:28
have this border for a border white and Shadow let's uh grab it from here and
6:16:35
maybe even this surrounded full so let's do let's grab it here and let's put this
6:16:41
on this div so now we have something like this and as you can see behind we have our s Circle div and U now let's
6:16:52
put here inside another div and uh um yeah and let's put this image uh inside
6:17:00
this div and the only function for this div will be overflow hidden so uh now
6:17:07
let's see we have overflow hidden we have image inside but it doesn't seem to work let's see why overflow hidden here
6:17:16
we have the image and uh let's see let's try to remove this object fit let's see
6:17:21
no changes okay it's because overflow hidden is also a big div as you can see
6:17:30
and uh well to fix it we can do something like this we can make this one
6:17:36
the parent relative and on this one we can also make it relative and just add
6:17:42
inser zero so now let's see now it's still uh this big let's see if we can
6:17:49
fix it by doing Max half of uh well let's see or maybe just have of full
6:17:57
then it's this big okay that's better now um the image is not
6:18:04
centered and uh and that is not good but uh we can fix it by adding classes here
6:18:13
so let's put with of full have of full and object uh cover and now let see now
6:18:21
it's centered so as you can see uh on the center of this image uh is my nose
6:18:28
and same here so that is good now uh let's see uh we have this div and uh and
6:18:36
um but the border is on the div here above so uh we should probably move the
6:18:42
border from here to this div and let's see let's grab this uh round the the
6:18:49
full and Shadow we probably don't need this relative let's see no we don't so
6:18:54
let's do round that board border and Border Shadow let's cut from here and let's put this here yeah that is much
6:19:02
better now maybe we can pull this icon up a little bit so let's do minus bottom
6:19:07
off uh not here or it's actually here yeah so now we have it here yeah and I
6:19:14
think now it looks uh fine maybe we can pull it up a little bit so let's do just
6:19:21
bottom zero and I think it looks fine like this so I'm going to change this once again
6:19:29
to maybe just this random MacBook yeah and it works so now I'm going to change
6:19:36
it back to let's change it to this and let's see if this will work yes it does
6:19:42
and I'm going to change it to this and it worked so uh now we just need to make
6:19:49
sure that it will be saved and to save it I'm going to put just an empty um or
6:19:56
invisible sorry uh input and the same way we did with um cover image just so
6:20:03
we will have the link somewhere and it will be sent with the form so uh here we
6:20:08
have this input for the file for the Avatar here I'm going to put hidden
6:20:15
input for uh Avatar value so let's put
6:20:20
Avatar and the value will be Avatar all right and yeah so now let's see if I
6:20:28
save then it this should be sent but the problem here is that inside this
6:20:34
function let's see where it is save page settings uh we don't grab Avatar so
6:20:41
let's grab it AA whoops Avatar and and I think that's it we have a key here that
6:20:47
we are looking for let's see inside page do we have this thing Avatar here no we
6:20:54
don't and the thing is we don't want to save it inside page instead I'm going to
6:20:59
remove it from here and instead I'm going to check if we have a avatar send
6:21:06
and if we do I'm going to send it on the user object not not on the page so um
6:21:13
here um here I'm going to add also if form data has Avatar Avatar then I'm
6:21:22
going to do something like this and then I'm I want to update a user so first I'm
6:21:28
going to grab the link um Avatar link equals and let's do form data get Avatar
6:21:38
and now I want to update the user so uh user model so let's do await user um I
6:21:46
don't think I have a user object user model here so I need to I need to add it
6:21:51
let's do user.js and let's go to here to
6:21:57
our database database browse Collections and let's see how this looks like so
6:22:04
let's go to users and I want to know what properties we have so let's do cons
6:22:10
user schema equals new schema new schema yeah from amongus and now I want to add
6:22:19
all of those so let's put name is a string and then we have email email that
6:22:26
is also a string we have image that is a string as well and we have email
6:22:33
verified and I think it's a date so I'm going to put email very uh verified it's
6:22:41
a date and that's it now let's try to do export const user equals let's first try
6:22:50
to find it inside models if models has user then we are going to ort it otherwise we want to do
6:22:58
new model with name user and user schema
6:23:05
all right now let's use our user inside page actions we have this user and let's
6:23:10
import user model let's see if it's imported yes that's correct and now
6:23:17
let's do uh update one same we we did with the page and now uh first problemm
6:23:23
is how we can find find this user to update and we will update this using
6:23:31
email so let's do email we want to find a user where email comes from the
6:23:36
session that we have here so let's do just uh session user email and now what
6:23:43
we want object of what we want to update as the second par we want to update uh
6:23:50
image so only image and we want to put the link and it's inside a water link
6:23:57
and that's it so uh yeah and now let's see if this will work if I save uh this
6:24:06
it says it's saved if I refresh let's see if it's still the same image yes it
6:24:11
is and even here we have it changed maybe I want to would be nicer to pull
6:24:17
this one down a little bit so it will be on the same level as this let's see um I
6:24:24
think it this is like an app template yes so it's inside the source app and
6:24:30
then app uh uh with parentheses because this is a uh route group and then we
6:24:37
have this template now let's see here here I want to uh see we have this
6:24:44
aside and we have some padding and uh we have padding of four on all sides let's
6:24:51
add that padding on the top will be eight so now it's uh well I think it's
6:24:57
on the same level but let's just be sure yes it is so that is nicer maybe we can
6:25:03
decrease the spacing here we have this uh upside bar um let's see what is
6:25:12
inside we have links here we have margin top of 12 let's change it to maybe just
6:25:18
eight yeah so now it's uh and this is closer to the Avatar so that is nice uh
6:25:25
so now we can change avatars and uh we can save them and this should also work
6:25:31
so let me try to remove those two saving saved yeah let's refresh to see yeah uh
6:25:39
everything is saved and uh looks like it works so now the next part is we want to
6:25:46
have links and buttons for our page so first will be buttons like uh email me
6:25:54
button or for a phone number button and social profiles and so on and then
6:26:01
custom links but we will first uh we'll first go with buttons all right so the
6:26:06
next section I want to put here like the next box will be buttons uh So like um
6:26:14
button for uh under the profile image button for email Buton for phone number
6:26:21
uh Social Media stuff and so on so uh as you can see we have here one box and
6:26:28
this one box comes from our template here let me see uh here we have this uh
6:26:36
as you can see here we have up sidebar here we have a div with background white
6:26:44
and now if I go to analytics I also have this uh white background uh box here I
6:26:51
think would be much nicer to put this as a separate uh uh separate
6:26:58
component and uh and I want to get rid of it from the template because uh for
6:27:06
example on this page I want to have several of those boxes and not uh and
6:27:12
not to put all of the content into one box so uh to do this um first let's open
6:27:19
here sidebar and let's see we have components and uh here here we have
6:27:25
layout maybe I will put it here so I'm going to copy uh let's just copy this
6:27:32
part and inside layout let's do new file and let's do and let's call this one um
6:27:41
I'm going to call it section box. JS and let's do export default function section
6:27:49
uh section box and I'm going to grab children from
6:27:55
here and here let's do return parenthesis and inside let's put this uh
6:28:01
let's close this th and inside we are going to just renter the children now
6:28:07
let's go back to the template and let's get rid of this white box here so uh now
6:28:13
it's uh like this and analytics looks like this all right so let's fix this
6:28:18
page first so let's go back to our uh page uh page set things form and let's
6:28:26
see I want to uh see here our render as you can see we have big div
6:28:34
with this negative margin and I think I'm going to just uh
6:28:41
remove it so let's just remove those classes so now we don't have any negative margin but uh it takes all of
6:28:49
the all of the width maybe it looks nice um maybe you want to keep it this way
6:28:56
but I I really prefer those white boxes so I'm going to to use it so um here
6:29:04
let's do section uh section box this will be the first and I'm going to put
6:29:11
all of this form stuff inside so I'm going to cut this and I'm going to put
6:29:18
all this here inside so now we have a one section uh box and I can put another
6:29:24
one for uh the buttons now let's see how this uh structure looks like because the
6:29:32
page is actually here and this is our account page and as you can see we are
6:29:38
rendering page settings form and um well uh because we need
6:29:45
several boxes we can either create a separate components here or we can add
6:29:51
more stuff here inside but I think it would be easier to if we just put uh
6:29:57
more components here to render so we have page settings box and then let's
6:30:03
say we will have um I'm going to put here test for now so let's see if this
6:30:10
will render yes it renders here underneath so that's cool uh what I want
6:30:15
to do is I will create a separate component here for also a form and then
6:30:22
and I will call it the buttons form or something like this so uh or maybe page
6:30:29
buttons form so uh let me see uh here we have forms let's also add it here inside
6:30:36
forms so let's do page buttons form. JS
6:30:42
and let's do export default function and Page B buttons form and let's do return
6:30:50
and I want to First have this section box and and let's put the buttons here
6:30:58
and now let's use it use this component so let's go back to account page and
6:31:03
let's put it here so let's put here um page um buttons form yeah like this
6:31:11
let's also put all of the stuff to page user session user so we have everything
6:31:18
right now uh we have this extra spacing here that I don't need inside page
6:31:24
settings form so let's go here and let me see here we have a div here we have a
6:31:30
form with some padding from the top and the bottom and now let's see this is
6:31:38
fine for the section box let's see where this padding comes if uh comes from so
6:31:45
here it is background white okay so on this thing on the first part I want to
6:31:54
remove the podding let's see how the podding looks here do we have two pings
6:31:59
or only one let's see we have two pings so we have padding on this and on the
6:32:05
parent the parent is here now no the parent is here all right so here I want to remove this padding of four and this
6:32:11
is on this uh White uh section box maybe I will keep it and I will instead remove
6:32:19
the padding that is on the form so let me scroll here and here we have padding
6:32:26
of uh let's see where I can find this uh padding that is here and let me see here
6:32:34
we have padding of four let's maybe change it to just zero yeah and this padding decreased and now I want to
6:32:41
remove the padding from here on this hero section so let me see here we have
6:32:47
a div let's try to remove this so uh I'm going to add negative margin uh so let's
6:32:54
do minus margin of four and now it that's much better so now let's see uh
6:33:00
this looks fine to me so now let's go to uh buttons here page buttons form so
6:33:07
here what I want to do is uh have a form that you can add uh buttons like contact
6:33:15
uh email phone uh Discord tagram and so on so uh first maybe I will show all of
6:33:25
the buttons that can be added so on the top or maybe on the bottom I will have
6:33:30
all of the buttons so let me put a div with uh here we will have all of the
6:33:36
buttons that you can add so um first maybe we need to put a a first button so
6:33:44
let's do button and here for each button I will have a label like for example uh
6:33:51
email so let's do email and I want to have have also a font awesome icon so
6:33:58
the icon and let's do F A let's search for email icon no I cannot find uh let's
6:34:05
search for envelope envelope yes and let's import this one yeah why not and
6:34:11
now let's try how this will look like let's add the flex and gap of one some
6:34:17
small padding of uh one and now let's see so we have email here and and this
6:34:25
bton doesn't have any background color so let's try to add it let's do
6:34:30
background gray of uh let's see 300 yeah so now we have something and let's try
6:34:37
with 200 yeah and now I want to also add
6:34:42
items Center so it will be centered maybe h a bigger Gap so let's do gap of
6:34:50
two and bigger padding so we have something like this now and I also want
6:34:57
to have a plus icon so here I will add another icon not aome icon and let's
6:35:03
search for f A+ plus uh plus yes and let's see how
6:35:10
this will look like yeah I think it looks fine so uh now I want uh to have
6:35:18
buttons um for each uh for each possible
6:35:24
well social media and so on that you can uh think of or I would just provide few
6:35:29
examples and you want you can add more if you want and um all right so I'm
6:35:36
going to Define them uh here so the const and let's call them buttons equals
6:35:44
and now it's an array and we will have oops not this we for each button we need
6:35:52
to have a label so for example email we will need to have an icon and we will
6:35:59
need to have a key so this will be an object because we will need several stuff here so uh first the key so the
User panel - buttons
6:36:08
key will be email and now label will be email but uh with Dash and with yeah
6:36:16
just email like this and the icon will be um fa envelope all right now I'm
6:36:24
going to put um for example phone phone and here let's do mobile so let's do
6:36:32
mobile let's maybe put mobile as a key as well mobile and label mobile and icon
6:36:39
will be let's try fa mobile yeah let's do this and what else now maybe let's
6:36:47
try to add some social media so let's start with Instagram f a now here just
6:36:56
Instagram and the icon will be fa Instagram yes yes import this one now
6:37:03
let's add some more and I don't know how many um you can add more if you want I'm
6:37:11
going also to add uh Facebook so let's do Facebook I'm going to add those that
6:37:17
are uh more uh more most popular so let's see uh I need to import the icon
6:37:24
so let's do fa Facebook yes and now we
6:37:29
will need a Discord this Discord and let's do Discord here and icon fa
6:37:38
Discord yeah and uh what else you can add the Tik Tok if you want why not oops
6:37:46
not here uh here so here Tick Tock and let's do fa a tick tock and
6:37:54
let's maybe add the YouTube why not YouTube and here the icon will be fa
6:38:01
YouTube maybe some more about uh contact information so we have a
6:38:08
Discord uh maybe you can maybe you want to have a WhatsApp so let's add WhatsApp
6:38:14
it's like this I guess f a WhatsApp yes and we do a lot of programming so let's
6:38:21
add the GitHub GitHub and here for the icon fa git G GitHub yes well else um
6:38:32
you can add anything you want actually here but for me it will be enough with
6:38:37
those all right and now we have a list here and now let's try to uh list them
6:38:43
so here let's do uh buttons buttons map and for each button I will mark it as B
6:38:51
parenthesis and let's put this one inside here and we are going to change
6:38:57
image to be uh label and here we are going to put icon so let's put B icon
6:39:05
and I think that's it so let's save and let's see so now we have something like this and I want to make the first letter
6:39:14
uppercase so let's do class name and let's do upper case here for the classes
6:39:19
not like this um C case do we have case let's see uh normal case uh upper case
6:39:27
lower case I only want to make the first a letter big so how can I do this and
6:39:35
not with CSS I need to do something like this um I'm going to put this here this
6:39:42
here and I'm going to do something like this I'm going to grab the first letter so let's do slice and first letter and
6:39:50
let's do uh two uppercase and then I'm going to add the rest of it so let's do
6:39:56
slice H with uh minus one so it should start with minus one so now oops minus
6:40:03
one and the rest so uh we have first uh letter let's see no it shouldn't be like
6:40:10
this it should start with one so like this yeah that's correct and this looks
6:40:17
fine now on the parent of all of the buttons let's do class name let's put flex and let's add the wrap so a flex
6:40:26
wrap and let's add some Gap so let's do gap of two so we will have some spacing
6:40:32
is that's nice and um maybe we can make them a little bit smaller so uh let's
6:40:40
see uh for the buttons let's change the Gap to one yeah so we have something like this maybe we can add one more so
6:40:47
we'll have like two full lines so uh we have a lot of those um
6:40:54
one more I want to add let's add telegram why not so telegram here
6:40:59
Telegram and the icon will be f a tegram
6:41:05
yes all right now let's see yeah so uh yeah now we have uh some buttons here
6:41:12
and we don't have any that should happen when we click on those and nothing happens uh but I'm going to fix it um in
6:41:21
a moment so first here above I want to have a header that will say buttons so
6:41:27
let's do H2 it will say buttons and I will have some class names here to make
6:41:32
it bigger so let's do text Xcel maybe even bigger let's do four Xcel yeah I
6:41:39
think that looks nice and now let's see maybe that's too big let's do two XEL
6:41:46
and let's make it bold so let's do bold and let's see how this will look like yeah I think it looks nice so um let's
6:41:54
add some margin to the bottom of at least four and now when you click on one
6:42:00
of those buttons it will uh open it will show a row here between the header and
6:42:07
the buttons and uh it will um well it will
6:42:14
allow you to add a link right to or phone number or something like this so
6:42:20
um so we need to add on click on the uh on the button so let's do on click and
6:42:27
let's say the function will be handle button click yeah something like this
6:42:33
maybe this is bad uh let's do add button add button to profile to profile or
6:42:41
maybe add I don't know add button to profile sounds good now uh let's define
6:42:47
this function here before the return function add a button to profile and
6:42:53
what it should do uh it should tell us what the information about the button so
6:42:59
for example uh key label and well we just
6:43:06
need the key actually uh because we can find the rest uh but will be easier to
6:43:12
just get everything so first I'm going to put an arrow function here this doesn't change anything and here I'm
6:43:19
going to pass the B so the button object so here here we can grab the button in
6:43:26
for like this or I can just distract this with just key and the key is
6:43:32
actually all I need maybe even I will need label as well I don't know no let's
6:43:38
just skip uh keep the key and now if I have a key I need to have a state that
6:43:46
will say which of the buttons are active and we should show the inputs for so
6:43:53
let's do something this const active buttons active buttons and set active
6:44:00
buttons equals use State and default for now will be empty array and now um when
6:44:09
we have when we click on a button we want to add it to active buttons so
6:44:14
maybe let's just grab everything about the uh button and let's just add it to
6:44:21
active buttons so let's do some like this set active buttons and with previous buttons I want to do um just
6:44:31
return all of the previous buttons with my additional button here so uh this
6:44:39
should work now uh now here in between let's try to list them for each active
6:44:46
button let's do map and for each uh button just to be again let's do a div
6:44:53
uh and let's say inside we will just do label so let's see if this will work no
6:44:59
this will not work because we need to make this component a a client component
6:45:05
so let's remove this this is not used and let's put client use client on the top now let's see and now it should work
6:45:13
let's add email and we have email here mobile Instagram and so on now if you
6:45:19
click on one of those I want them also to disappear from this list so how can
6:45:25
we do this first I'm going to H cut them from here I'm going to put them here and
6:45:31
I'm going to rename it to all uh buttons all buttons and now let's see uh here we
6:45:38
have buttons just buttons this I'm going to rename to a avable buttons AV label
6:45:45
buttons buttons and this is not defined I'm going to Define it here before return const available buttons and from
6:45:54
all of the buttons so let's do all buttons and I want to filter I want to filter out the buttons
6:46:02
that are active so to do this I'm going to do something like this uh for all of
6:46:08
for each button that is inside all buttons I want to check that this button
6:46:15
key is not inside active buttons all right how can we do this uh we can grab
6:46:22
a button key like like this and we can see if it's inside active buttons so uh
6:46:31
how can we do this uh let's do something like this active buttons If it
6:46:37
includes um well here we have search element let's try instead of includes
6:46:42
let's do find and we want to find uh when let's called this one button one
6:46:49
where uh button two and let's do something like this patteron one key is
6:46:55
the same as Buton two and key all right and now let's see so now we have the
6:47:01
opposite we see only the buttons that are active so here we need to uh recheck
6:47:08
this so available buttons are all of the buttons that we filter so only the
6:47:15
buttons that exist inside active buttons this should be the opposite so it
6:47:21
doesn't exist and now let's see now we have all of still all of the buttons and
6:47:27
this should be actually true here and we should just do opposite here and now we
6:47:33
have uh what we wanted so we want to check that inside all of the buttons we
6:47:39
want to filter out that this button doesn't exist that's why we have
6:47:44
exclamation mark inside active buttons so um we can add Facebook and it will
6:47:50
disappear Discord and we can add all of those uh buttons if we want to now if I
6:47:58
refresh it will go back but uh you get the idea so let's say I'm going to add
6:48:04
an email and uh then uh it's listed just as label here but we are going to fix it
6:48:12
so here we have this label uh but what I want to do here is to actually add some
6:48:19
class names and I want to show the uh icon as well and let's do this so let's
6:48:26
add margin bottom of four so we have some spacing I want to do flex and GAP
6:48:33
two because I'm going to put an icon here as well so let's put the button
6:48:40
icon here H yes and let's make this uh items Center let's add some background
6:48:48
off or maybe not background or I don't know no uh let's add background off
6:48:53
gray and 300 let's see yeah now uh let's
6:48:59
do some uh maybe not padding let's do here or I will not do any background for
6:49:06
now instead I will do border so let's see border and that's the border to so
6:49:12
it will be uh like this yes or maybe we don't even need the Border I'm going to
6:49:17
put it only inside the input here is going to be the input and uh yeah it
6:49:23
will be input of type text so now we have an input here but as you can see
6:49:28
this email and the icon doesn't have enough space so uh I'm going to do something like this I want the label to
6:49:35
take more space same with the icon so I'm going to put an additional div here
6:49:41
and those two things I'm going to put here inside for the label I'm going to put it into a span and now I'm going to
6:49:49
do something like this for the da I will assign a wave of let's say 12 and let's
6:49:55
see how this will look like more let's do 24 oops 24 so we have this match
6:50:01
let's do 36 so we have this match yeah and now I'm going to add flex and GAP to
6:50:08
here as well and same with items Center so we have something like this and I
6:50:14
don't know if this is centered let's see how this looks like if I do inspect and
6:50:21
let's see here we have input yeah here we have the div and it looks like it's centered the only problem is that this
6:50:28
input has this margin bottom so I'm going to remove it on this input margin
6:50:34
bottom zero and now let's see did it help and no it still has this margin
6:50:41
bottom so it's problematic to remove it but we can do just style and let's do
6:50:47
margin bottom margin bottom of zero and now it should work not button
6:50:55
botton bottom yeah now it's removed as you can see here so now everything is
6:51:00
line uh but I want to also add some and
6:51:06
maybe I'm going to do same as we have here above or maybe I can put it on the
6:51:12
left as I started maybe putting this on the left so we can save some space we
6:51:18
don't need to have it uh the input all the way so that's my maybe put this div
6:51:24
into a darker color so let's see here we have this div let's do background gray
6:51:30
of 300 yes almost let's see um let's
6:51:35
make it bigger and let's remove the Gap from here remove Gap and now let's see
6:51:43
now I want this uh to this div to stretch and maybe add a different color
6:51:50
so let me see let's add on this D have of four didn't help let's add grow
6:51:57
didn't help let's add the padding of two yes that's much better and now uh we
6:52:03
have label here but even with those those labels I want the first letter to
6:52:09
be uppercase and the same thing we did here I think it would be much easier to put a
6:52:15
function maybe even outside of this component like uh upper first and it
6:52:22
will take a string and it will just do uh same thing that we did here so uh I'm
6:52:29
going to just return something like this return and this except uh of B we will
6:52:37
have a string and string here so now we can use this function upper first here
6:52:44
on the B label sorry here we need to remove this label because we are upper
6:52:50
casing whoops only the string so nothing here and let's see here instead of B
6:52:57
label slice and so on let's do upper first B label and same thing here upper
6:53:04
first and B label B label yes and this
6:53:10
looks nice let's try what happens if we remove this gray background and we just
6:53:17
make it I or transparent so and here if
6:53:22
I I remove some of about this color and I think it looks fine so maybe let's
6:53:27
remove just the color from this labels and I'm going to make uh those
6:53:33
more grayish so let's do text Gray 700 so we have some like this and I'm going
6:53:41
to add a colon here as well and yeah and I think this looks fine now I'm going to
6:53:48
add for the butons I'm going to add margin top four or maybe eight so we
6:53:53
have more spacing here and uh let's add a more uh border to the top so we have
6:54:01
some separation and it's add padding top of four h yeah so we have something like
6:54:07
this so from here we can add more buttons if we want and I can decrease
6:54:14
this margin let's see uh margin top eight let's do four yeah and uh now it
6:54:22
will be be nice to have placeholders for all of those inputs but those will be
6:54:28
different depending on the buttons so for example on the email let's do placeholder of test example.com for the
6:54:38
uh placeholder for the mobile will be Let's uh do something like this uh one
6:54:44
two 3 one two 3 one two three and let's say that for Instagram the placeholder
6:54:51
will be uh let's say htps and
6:54:57
facebook.com/ facebook.com/ profile SL do do Dot and
6:55:03
now let's try to print those placeholders inside our inputs here so
6:55:08
I'm going to put a placeholder here button uh placeholder let's see uh didn't work for
6:55:17
the for the email let's see button placeholder for the email do we have any
6:55:23
placeholder yes we do let me try to refresh add email yes now we have a
6:55:30
placeholder and I think this looks fine we can add mobile and yeah it seems to
6:55:37
work so uh now what we want to do is uh well maybe I will fix this Instagram and
6:55:44
WhatsApp to make the icons more like those let's see on the
6:55:49
Instagram uh as you can see in Instagram is from this place from free Brands SVG
6:55:57
icons maybe let's keep it uh let's see uh other Instagram icons can we have
6:56:03
other icon here fa a Instagram Instagram Square uh let's try this one all right
6:56:10
so now I don't like it because now it's Square so let do fa Instagram
6:56:17
Instagram and I'm going to import the default one all right and uh this will
6:56:23
work now um I want to have this kind of save button under all of the buttons so
6:56:32
uh let me add a submit button and this button those buttons for social media
6:56:37
and so on should be type of uh button and somewhere here I'm going to add
6:56:44
another div just for this one button and it will be a submit button and it will
6:56:51
say save and it will be inside span so let's do save and I'm going to add the font
6:56:58
awesome icon and let's do FAA save is there a search icon yes there is so
6:57:04
let's see okay it's really big so let's make it smaller on this div that is
6:57:10
above here so let's do Max with of uh Xs and MX AO to make it centered as the
6:57:18
margin top of four yes this looks fine maybe more margin top let's do eight now
6:57:25
let's see yeah I think it looks fine maybe we can do even one more line here
6:57:31
so let's see let's do border top and the bottom will be bottom border y uh same
6:57:37
with this pading let's do top and the bottom yeah and now we have two lines here so that is that looks nice right so
6:57:45
now we can put stuff here uh let's see those inputs here we have those inputs
6:57:51
let's add the name and the name will be always button key so uh those keys and
6:57:57
now what I want to have is uh I want to
6:58:03
have a server action so I can save it to a page model so let's open models page
6:58:13
yes here and let's see let's say that here we will have buttons and it will be
6:58:21
type of uh um object as the object and the default will be an empty object like
6:58:28
this all right and this should work now let's try to H go to up or maybe not to
6:58:36
up to actions we have page actions and in here we have uh save page
6:58:43
settings Let's uh create another a function called um save let's do
6:58:50
function save buttons let's do save page buttons and let's see how it looks like
6:58:58
here it needs to be exported and async so let's do export and async yes first
6:59:06
we need to connect to the database let's do connect and process uh environment and
6:59:13
U URI and then um we want to grab
6:59:19
the session right so I'm going to just to copy paste this because we want to uh
6:59:25
save only if we are logged in if you are not logged in we will just return false
6:59:31
if we have a session well we want to find your page or maybe we don't need to
6:59:36
find the page we want to only update the page so uh it will be similar to this
6:59:43
update so we just need to check the owner let's copy this I'm going to put it here H we don't have data to update
6:59:50
yet but let's find it here const data to update and data to update we want to
6:59:57
only update buttons and buttons for now let's put empty object as uh default but
7:00:04
now we want to uh Define all of the buttons so um how we can Define them we
7:00:11
need to have a key and then the value so uh let's do something like this I'm
7:00:18
going to put those uh information about all of the buttons somewhere else or
7:00:24
maybe no I don't need to uh I need to go to form data and I just want to grab
7:00:31
everything from there so uh let's see we have form data that comes from the parm
7:00:38
here so let's grab it and now I want to just grab all of it so let's do
7:00:44
something like this form data and I can do for example for
7:00:50
each and for each item uh we will have a key and the value
7:00:57
right and for each of those I want to save it to a separate to a separate uh
7:01:05
let's say object so I do const buttons info or maybe buttons values equals
7:01:13
empty object and now let's put buttons values
7:01:19
of this key from the data equal equal this value and now for the buttons here
7:01:24
let's put buttons values right or maybe we could rename it to just buttons well
7:01:31
doesn't really matter now we have this save page buttons here maybe we can do
7:01:37
return sure and now let's try to use this save page buttons function so let's go to our
7:01:46
page buttons form we don't have any form here yet but we are going to add it so
7:01:53
inside this section box let's do a form and let's do the closing tag before
7:02:00
closing of section box now we want to add a little bit of indentation here all
7:02:06
right and now uh I think it was form action here but I want to check on page
7:02:13
uh not here page settings form uh yes it's action and then a function we want
7:02:18
to run so let's go back to page here let's do action and let's define a
7:02:24
function that will be called handle form uh submit hand handle form submit or
7:02:31
maybe save buttons doesn't really matter so let's put this function here function
7:02:38
save buttons and we will have a form data here and um I want to do something
7:02:46
like this I want to do it will be a sync function I will wait for our our save
7:02:53
page buttons from page actions this one let's import it and let's put our form
7:02:59
data here so uh this is a function inside our client component that we have
7:03:05
here and this is an imported function from our server
7:03:10
functions and here I'm just want to add this toast success so the toast import
7:03:17
success uh saying settings saved yes and
7:03:23
now let's see if this will work so I'm going to put here and my email and that
7:03:29
will be it let's hit save settings saved now I'm going to check inside the database if it's saved so let's do
7:03:36
database let's see pages and let's see uh it's not saved I
7:03:43
probably forgot to restart my environment so let's see so let's try to
7:03:48
save it again save saving yeah settings saved now let's see here let's refresh
7:03:56
and we have buttons object here we have something like this and this is another
7:04:03
way around so it should go different way it should be email as a key and then my
7:04:09
email on the on the right so let me go to the page actions and let's see here I
7:04:17
think it's another way around first we have value and here we have key right uh
7:04:22
let's try again let's hit uh save here saved and now let's see here I'm going
7:04:28
to hit refresh and now let's see we have buttons and inside we have email my
7:04:35
email mobile is empty okay so now it's okay uh now it's correct so uh what else
7:04:43
I can add a Facebook link if I want to htps
7:04:49
facebook.com sl12 34 let's say save and
7:04:54
it saved into database uh I can just refresh to be sure let's do refresh
7:05:00
pages and buttons yeah it's saved uh the problem is here that when I refresh it's
7:05:08
uh it disappeared um and this is because we need to go to our page button form and
7:05:16
you probably remember we are passing some data here as properties we have for
7:05:23
example user and we have something more let's see here uh we are passing user
7:05:29
and Page information so let's use it let's grab page here and now uh when
7:05:37
this component renders uh we have Page information and
7:05:43
we don't want the active buttons to be empty array we want to use our page to
7:05:50
go to the buttons and to use them here so uh to grab it I'm going to first do
7:05:57
something like this cons uh active uh or maybe let's call it from the page so
7:06:03
page um page saved button keys so we are going to get only the keys page that's
7:06:11
buttons and then for each so I'm going to map it for each button I want to have
7:06:17
only the key so I'm going here is the value here is the index x uh or the key
7:06:23
and I want to only get the key and an easier way of doing this will be
7:06:29
probably to just the object keys and as the page uh buttons all right let's save
7:06:36
this thing and uh let's see let's see what's inside page saved buttons page
7:06:43
saved button Keys let's try to print it here Json stringify page save button
7:06:50
Keys yes so we have EMA mobile and Facebook now we want to put those into
7:06:57
the default of our state here um let's see how this looks inside
7:07:04
uh as you can see inside we have full information about the button so we have all of this key and we know only the key
7:07:13
and we want to have the rest from all of the buttons so um let's add another
7:07:18
constant here page saved buttons uh let's name those buttons here
7:07:25
as well buttons info so all of the information about each active button
7:07:30
that is saved inside our page and we can grab it by doing something like this and
7:07:36
the keys we want to grab the keys and for each so I'm going to map and I want
7:07:42
to for each key I want to return I want to find the whole information about the
7:07:48
button inside all buttons so uh I'm going to do something like this uh all
7:07:54
buttons find where button and button key is the same as our Cas so our key right
7:08:02
now um we have our page save buttons info let's try to put them here page
7:08:09
saved buttons info so now we have this okay that's good but we don't see the
7:08:17
values right so let's add our default values for for our inputs here we have
7:08:22
it and let's do default value and default value I want to fetch from the
7:08:30
page uh page buttons so from the database let's do page uh whoops page uh
7:08:38
buttons and let's uh grab by the key using button key so now we have all this
7:08:46
let's also save a phone number 3 2 1 1 2 3 1 2 3 why not just to save something
7:08:53
let's hit save and let's see if I uh refresh do I have all of the information
7:08:59
yes I do so uh this works now I can save this and I can also save this part if I
7:09:07
want let's do refresh yeah we have three dots and let's maybe remove four from
7:09:13
here let's hit save it's saved if I refresh it's still saved so that is
7:09:19
really nice that everything is saved and it works so we have buttons we
7:09:26
have basic information and the last part will be I
7:09:31
think uh another section where we can add custom links so for example uh link
7:09:39
to your portfolio or any random link that you want to add from the internet
7:09:45
so any link that is not uh one of those you can add in the last section and uh
7:09:52
and it will be a just a link underneath all right there's one small thing I forgot with the buttons before we will
7:09:58
continue to links and this is when I add for example Tik Tok and I want to get
7:10:04
rid of this there's no remove button uh somewhere like to the right or something
7:10:09
like this so um I need to add like a button to the right to remove active uh
7:10:17
buttons or added buttons so let me scroll to somewhere here we have an
7:10:23
input and I also want to add a button of
7:10:28
Type U button and it will have this font
7:10:34
awesome icon of fa trash let's search for trash yes and now let's see so we
7:10:41
have trash uh um icons here trash buttons now for those buttons let's add
7:10:47
some class names like um well I want to add some padding so let's do maybe
7:10:54
padding of two and let's do background of let's do red 500 yeah now I want to
7:11:02
have some spacing uh here or maybe we can do just a border so um let's do
7:11:10
maybe just a border I'm going to remove this background and let's do border
7:11:15
let's BBE let's maybe do first the background that will be the same as the button or
7:11:21
as the input or similar gray 300 yes this looks nice uh more padding on the
7:11:29
sides so padding top and the bottom will be two and on the sides let's do four so
7:11:34
now we have something like this and now I also want to do uh just in case a
7:11:42
cursor pointer and now let's see and now I want
7:11:47
to do the text to be red let's do 600 yes maybe that's too dark let's do 500
7:11:55
yeah I think this will work or maybe let's put it back to black color all
7:12:00
right so this uh should work for the styling now uh if I want to remove it we
7:12:08
need to add on click action so let me add it here um I'm going to put type
7:12:15
here class names here and here I'm going to have onclick onclick we will have
7:12:20
remove uh button remove button and let's put this as an arrow function and I'm
7:12:28
going to pass here all of the information about the button now let's define this function somewhere here so
7:12:35
let's do function uh remove button here we have information about the button so key and
7:12:42
everything and I think we just needed the key so let's just grab the key only
7:12:48
and now we want to remove using this key uh stuff from our state and it's here so
7:12:57
um here we have US state and then we have uh page save buttons and it's an
7:13:03
array of objects so um let's do something like this let's do set active
7:13:10
buttons let's do previously uh previous buttons and now we want to do something
7:13:16
this we want to return previous buttons but we want to filter
7:13:21
to know that the that the button in button key is not the same as the key
7:13:29
that we have here so let's do just we can do either compare it just to key or
7:13:35
maybe we can rename it to Key to remove yeah key to remove let's put this into
7:13:42
separate lines so it will be easier to follow and now let's see if it works if I click here yes it's removed so now if
7:13:50
I let's add the Tik Tok and save let's refresh it's
7:13:56
saved and now if I click here to remove it and refresh it so it should be still
7:14:03
here yes but if I remove it and I save it it's removed right so uh now it works
7:14:10
if I refresh it's removed so that is nice uh another maybe a cool another
7:14:17
cool thing that we can maybe add would be to uh have sorting functionality for
7:14:25
those buttons so we will have a handle that we can drag and drop those uh if we
7:14:31
want so change the order that Facebook goes first so we can click on it drag it
7:14:37
up to change the order on those buttons uh yeah that would be a cool
7:14:42
feature because if you want to have your mobile before your email you should be able to do so so uh this is another for
7:14:50
feature I'm going to implement before we will go to Links all right so now let's
7:14:56
try to fix this sorting so uh first we will need uh to install a sorting
7:15:04
library because I don't want to write it myself and I think I'm going to use sort
7:15:11
the JS so as do react sort uh I think it's sort JS sorting JS and no uh it's
7:15:19
sortable sortable sortable JS here's this one and I'm
7:15:25
going just to yarn added so let's do yarn add and this one and now let's see
7:15:32
how to use it um in a functional component yes so this looks really easy
7:15:40
so uh first let's go to the place where we want to do this and we want to do
7:15:45
this on the buttons so here we have a form here we uh um look through all of
7:15:52
the active buttons and uh now next to the icon I want to have a grip icon kind
7:16:00
of so let me search maybe here uh after
7:16:05
sort and yes this looks nice uh but I want to have something more like a
7:16:12
handle so let's search for handle uh yes something like this grip uh but I think
7:16:18
grip lines will work best so uh let me see here we have a div with this font
7:16:25
awesome icon let's try to add another one so let's do font awesome icon and
7:16:31
let's add this fa grip grip uh lines uh
7:16:37
grip lines yes like this and now let's see how this looks like and maybe I need
7:16:44
to refresh yeah now we can see uh it looks like this uh I want to add add a
7:16:52
uh class name cursor pointer so let's do cursor pointer so we know that we can uh
7:16:58
grab it and now we don't have enough space for the label so let's make it
7:17:04
wider let's do wave of 48 yeah now we have enough
7:17:09
spacing and um yeah I think this looks fine maybe we can make it uh more
7:17:17
grayish more uh more to the white so let's see here we have this icon for um
7:17:24
for uh with the lines to search let's add text Gray and let's do maybe 400 yes
7:17:32
now it's more uh brighter lighter right and I think it looks good now let's try
7:17:38
to use this Library so we can Implement um we just need to implement
7:17:44
sorting we just need to copy this let's put this import somewhere somewhere here
7:17:50
at the top so we have react sortable and now let's see how we need to use it and
7:17:57
we have our component and we have uh this and this will be our active Buton that we are going to sort and then we
7:18:05
just do react sortable with the list and then we need to have a set list and
7:18:12
that's it so um so let's do this let's try to implement this on our uh list uh
7:18:19
on our map upap here so uh on the above as the parent as you can see we have map
7:18:25
here as the parent we need to have this react sortable so let's add it uh react
7:18:32
sortable and the closing needs to go after uh this uh map so let's see it
7:18:39
needs to go here I will add some indentation here so it will look better
7:18:46
and now let's see and we need to pass the list so let's pass the uh list and the list will be active
7:18:54
buttons and the set list will be set active buttons I guess I'm going to put
7:19:01
this here and maybe this here so it will be easier to read and uh now let's see
7:19:07
we have uh this map function here with the key let's just just in case let's
7:19:13
add uh not here uh whoops um let's see we have this map function let's add a
7:19:20
key here so let's do key let's do uh B button key and now let's see it looks
7:19:28
like that's it so let's see if this will work can't resolve sortable JS okay so
7:19:34
we added this and but we also need to add only sortable JS all right so now I
7:19:41
think it works and look we can do drag and drops let's do mobile as the last
7:19:47
one and it looks fine would be nice if we could change some styling so the one
7:19:54
that is behind our Mouse will be more transparent uh let's see if we can uh do
7:20:03
this list State item no we have group
7:20:09
name and so on let's me let me open this inspect here and let's see how it looks
7:20:17
like so here we have all three three elements and let's see how they um look
7:20:23
like when I um move them so they have an
7:20:28
additional class sortable Chosen and sortable ghost and I think I can use
7:20:34
this sortable ghost um as uh uh inside my Global CSS so let's go to globals
7:20:42
CSS and maybe here let's do sortable and
7:20:47
ghost and let's add capacity of I don't know5 so it will be 50% transparent now
7:20:56
when I drop as you can see it's transparent behind let's make it more transparent I'm going to do point three
7:21:03
and now let's see yes it's even more transparent so that is nice uh maybe I
7:21:11
can make um I can add some uh background color uh let's do apply background let's
7:21:18
do gray and let let's do maybe 300 and now let's see let's see yeah so now it's
7:21:26
this gray um gray color so that is uh nice well you can experiment and do your
7:21:35
way I think I will remove this background color and I will just leave this opacity and let's see yeah I think
7:21:44
this looks fine so now we have a working uh sorting at least on the front and
7:21:50
part uh let re Let me refresh and now let's see we have email mobile and then
7:21:55
Facebook let's try to put Facebook as the first one yes and then let's save it
7:22:01
uh it's saved but let's see if the uh if the order is saved if I refresh as you
7:22:07
can see Facebook is still the first now let's try to put mobile as the first yes
7:22:13
and now let's hit uh now let's refresh mobile shouldn't be first that's correct
7:22:18
now let's try to put mobile first first again let's hit save and uh now let's
7:22:24
refresh and we should have mobile Facebook email I refreshed mobile Facebook email so that is uh correct so
7:22:32
our sorting works and now we can continue with the next section which
7:22:39
will be links custom links all right so now let's do links so the next section
7:22:47
uh let me go to that page because that page is account page and in
7:22:53
here we have two forms as you can see for uh base settings page settings and
7:22:59
Page buttons form and I want to create another for the thir section and it will
7:23:05
be links form or page links form so let's create this inside forms I'm going
7:23:12
to do new file and let's the page settings form. JS and and sorry not page
7:23:21
settings form uh it will be page uh links form. JS and in here let's do
7:23:28
export default function um page links form let's see if
7:23:35
it's correct with the file name yes and now let's do just return and in here
7:23:41
first we will need a section so let's do um section box yes and let's put links
7:23:50
here so we can see how this will render but first we need to uh put it here so
7:23:55
let's do page links uh form and let's also pass all of this stuff here so
7:24:02
let's pass page and let's pass user as well so we will have this information
7:24:08
here inside that we can use so let's grab it from here page and user so we
7:24:14
can use it and as you can see now we have this links here all right so what
7:24:20
do we want to have here well first we need to have a we need to have a button
7:24:27
to add a new link so let's start from this uh maybe I will start by putting a
7:24:35
form and it will have an action and we will add a server action sumwhere here
7:24:42
let's put function save and that's it and it will take form data and here
7:24:50
we'll have just a save all right and now uh inside this form uh first we need a
7:24:57
button it will be type of a button uh I'm adding this type of button so this
7:25:04
button will not save uh will not save this uh form uh I want this to be a
7:25:11
custom button that will do something else and this button will add a new link
7:25:19
so H it will have a span add new something like this and uh let's see we
7:25:26
have an error H because we need to make it a client component because we have
7:25:32
this uh lose client because we have this form with action right now let's see and
7:25:39
now we have here add new button it doesn't look like a button but we will
7:25:44
fix it and I want to add an icon so
7:25:50
let's do font uh awesome icon font awesome icon and the icon will be F
7:25:57
A+ let's do fa A+ yes and now let's see yeah we have a plus and now let's add
7:26:06
some class names here and for this button I want this to be um let's do um
7:26:14
blue text so let's do text primary text primary and let's do do 500 and no this
7:26:22
didn't work sorry not primary it should be blue 500 yeah something like this and
7:26:28
let's check the submit button component submit button yeah it's also a blue 500
7:26:35
so that's okay now we have this icon here and I would like to add make this
7:26:42
uh icon and and the button bigger so I want to do text um XL or maybe large
7:26:51
large will be enough and uh yeah now for uh I want to add a spacing between this
7:26:58
plus and the add new so let's do Gap let's do flex and gap of two and let's
7:27:05
add items Center so it will be um aligned uh
7:27:12
vertically uh or horizontally now I don't know um now uh for this icon plus
7:27:18
icon I want to add background of blue 500 and the text so the icon the plus
7:27:25
should be white yeah something like this I also want to add a small padding and I want this to be circle is so let's do
7:27:33
rounded pool yeah something like this and um it looks fine maybe will be
7:27:41
better with smaller padding let's see uh yeah let's add also um that it should be
7:27:49
ratio or sorry aspect Square yeah and now I
7:27:54
think it looks good and I also want to add cursor pointer just in case and now
7:28:02
we have our button to add a new link we don't have this uh label so let's add it
7:28:09
as well let's do H2 saying clinks and we need to have some class names so I'm
7:28:16
going to add a class name like text XL and font bold so let's see yeah I think
7:28:23
it should be bigger let's do 2 XL yes and let's add some margin buttom margin
7:28:29
buttom of four yeah I think that is uh good now we will also need a a button
7:28:37
like this maybe with this line underneath so we can save everything so let's add it as well let's put a div
7:28:45
with some class names like uh I don't know a border on the top top and the
7:28:51
padding from the top four margin from the top will be four padding top four
7:28:57
all right and now let's put a submit button here and we are going to put a
7:29:04
save with this save icon so let's do font awesome and Fa a save so let's do
7:29:11
fa save let's import this one and now we have something like this let's make it
7:29:16
uh well uh more narrow so let's do to Max wave of Xs and MX Autos that will be
7:29:25
centered okay that's much better and the problem is that uh the top border is
7:29:32
also smaller uh so let's remove this and let's put this into separate div or
7:29:39
maybe we can even put it here and let's put this yeah it worked all right so now
7:29:46
we have this button to add new links it doesn't do anything so the first thing is that we need to
7:29:52
fix uh this so uh first we will need to have a state for our buttons right so
7:30:00
let's do const and let's do H um links
7:30:06
and set links equals use State and default will be an empty array all right
7:30:13
or maybe we can do that the default will come from the page links and if it it's
7:30:19
empty or something the default will be empty array otherwise all right and now
7:30:25
uh if we click on this button add a new link what do we want to do H we want to
7:30:32
uh run a function let's say called add new link and um let's put this here so
7:30:42
type class names let's add on click on click and we will do add new link right
7:30:51
and uh now if we add want to add a new link we are just going to go to uh Set
7:30:59
uh links we will get the previous value and we want to return the previous links
7:31:06
but we want to add another link and this another link will be added as a last as
7:31:14
an object and it will have uh well for each link We we will have
7:31:21
an uh label or maybe title title we will have
7:31:26
subtitle and we will have an uh we can have an icon that you can upload if you
7:31:33
want and um everything of this will be empty strings as
7:31:39
default and um what else do we need I think we will also need the link okay
7:31:46
and I think that should be it so now let's go maybe under the button and
7:31:54
here let's do Json stringify and links and now let's see as you can see it's an
7:32:01
empty array now and if we click uh on this button we have one object if we
7:32:06
click we have two objects two empty objects so now instead of doing this
7:32:11
let's put a div and um here we want to
7:32:16
map through all of those so let's do something like this for each link so
7:32:22
let's do links and let's do map and let's do for each link I would do
7:32:28
justl uh for each I want to do a div and I want to do well I need to have URL so
7:32:36
uh maybe let's don't call it link let's change it to URL and now let's see uh we
7:32:43
will need to have an uh we will need to have an input for the link we will need
7:32:49
to have another input for the title and another one for subtitle so we will have
7:32:55
three uh text inputs and then we will have also an input for the icon or a
7:33:03
gray area so we can or a button for the icon so we can change the icon so I will
7:33:09
I'm going to do something like this but there will be three inputs under each other so let's try to do this um uh
7:33:17
let's put an input for uh the first input it will be for let's say the
7:33:22
placeholder will say um it will be for title and another one will be for uh
7:33:31
let's say subtitle subtitle it will be optional optional
7:33:38
subtitle and the last will be for um link Place holder and let's do uh URL
7:33:46
okay and we have something like this for for each link now we want to do some
7:33:51
separation between those so let's do something like this for each of those uh
7:33:57
paron divs I'm going to do margin top of four and let's even add uh let's even
7:34:04
add more let's do Mar top of eight so now we have something like this and I
7:34:11
think it looks fine but on the left side I would like to have an an icon so I
7:34:17
want to have those links more to the right those two those three inputs more to the right and on the left we will
7:34:24
have a space for the uh icon so here I'm going to put uh two divs the left and
7:34:31
the right side for the right side we are going to put those three inputs and for
7:34:36
the first one uh here we will do the icon thing and for this I'm going to put
7:34:42
flex and uh now let's see uh for this one I need to add grow so it will take
7:34:48
the all space here and yeah now it looks fine now for the icon I want to have
7:34:56
like um um let's say a rounded icon here that's the font awesome icon and I want
7:35:05
to do something like this uh let's search for fa link uh link yes and let's
7:35:11
import this one let's see how it looks like it looks fine but I'm going to put this into a separate div and I I want to
7:35:19
style it a little bit so uh for this da I'm going to add a background of um
7:35:27
let's say darker gray color uh so it's the gray 300 yes and let's add padding
7:35:34
of four let's do rounded of four and now I also want to have some
7:35:40
spacing on the left side so maybe let's add a gap of two let's add item centers
7:35:47
will be centered yes that is uh better and um now under this gray rounded
7:35:55
Circle I want to have a pattern that will say change icon okay and um well
7:36:03
maybe not like this um I don't want this one to take all of the wi and um so
7:36:11
let's add the aspect Square well not like this um let's remove this aspect
7:36:18
Square and now let's see um this div takes the
7:36:24
whole with but this one shouldn't so let's do here um let's maybe remove this
7:36:32
background gray or maybe let's keep it and I'm going to change to inline inline
7:36:39
block and let's see yes now it's better but the change icon button is um to the
7:36:46
right and it should be underneath so I'm going to put this button in a th let's
7:36:51
see now yeah now it's better now for this thing um I'm going to put on the
7:36:57
left side div uh text Center yes uh it's
7:37:02
better and now for the button let's add some class names and let's put type of
7:37:08
uh button button and for the class names I want this to be more like more like
7:37:14
those so let's do um background Gray 300
7:37:19
yes and let's add margin top of two let's add some padding of two and um now
7:37:27
let's see um I want to have an icon here so we have this change icon let's put
7:37:33
this into a span and now let's do a font awesome and here I want to have fa Cloud
7:37:41
uh Arrow up yes let's do this one and we will need to add a flex here item Center
7:37:48
and Gap of at least one yeah and I think this looks fine um maybe we can make
7:37:56
this button rounded uh a little bit so let's do rounded medium uh yes I don't
7:38:02
know if it's better but I think it looks fine and uh maybe I will make it more
7:38:08
not gray but I will make it white with a border so let's just do border yeah I
7:38:14
think it looks fine and let's make the text a little grayish so let's do text Gray 700 yeah I think it looks better
7:38:23
and um yeah I think it looks fine maybe we can make it even brighter the text
7:38:29
and that's too bright let's do 600 and um yeah this will work now um we
7:38:37
have all of this and we can even add more if we want to and now now we need
7:38:43
to be able to edit all of those right so um let's see we have those inputs here
7:38:51
uh but we don't have any name properties and and those will not be able to be
7:38:59
saved and another thing is I want to be able to sort all of those so um I want
7:39:06
to add a sorting handle maybe here so I can sort them let me go here and let's
7:39:16
see uh here we are sorting the link links uh listing the links and uh we
7:39:22
have text Center let's add the div and here I'm going to add this uh font
7:39:28
awesome icon and I think it was fa lines uh fa grip lines yes this one now let's
7:39:35
see so we have uh this lines uh uh icon here let's add some class names on this
7:39:43
one so I want this to be text Gray 700
7:39:49
and I want to be I want to add more margin to the right of at least two so
7:39:54
we have more spacing all right and now I want to be able to sarch those but
7:40:01
before we can do this we will need to have some kind of IDs or something like
7:40:07
this for each one we create so uh as you can see here when we create a link uh we
7:40:16
just add empty empty object object or almost empty object with just URL and uh
7:40:23
so on so I think we'll need some kind of ID or we can call it a key and the the
7:40:30
key needs to be unique so I'm going to put date now and it will be just a time
7:40:36
stamp let's do two string just in case and um and now we can even print this uh
7:40:45
thing let's say we can print it next to the inputs so uh let's do link key and
7:40:52
let's display it here I'm going to refresh and add new links and as you can
7:40:58
see we have like Tim stamps here that we can use as keys so that is nice so now
7:41:04
let's use this uh here we are doing map so let's put here key link key all right
7:41:13
and now let's try to do this uh sorting once again so we we just basically need
7:41:19
a react sortable and um here is this super simple example let's do this uh so
7:41:27
um let's see here we are looping through uh let's add a react sortable yes and
7:41:36
this one and the closing tag will go under under this map and let's uh ident
7:41:42
this yes and no the list is uh links and
7:41:47
the set list is set links and now let's see if this will work uh we have links
7:41:54
let's try to add them let's add two a here and B here and let's try to H sort
7:42:01
it yes the B goes first the B goes second that's correct uh I want this uh
7:42:08
this to be a hand icon so let's scroll up here and let's put uh this here this
7:42:16
here and cursor pointer right so I can uh drag it uh up and down let's see what
7:42:24
other cursors we have is there something alas um resize and default e resize grab
7:42:32
let's see grab yeah I think grab is nice do we have something even better let's
7:42:38
do move let's see yeah move looks nice do we have a cursor uh cursor move no
7:42:47
move up and down no we have zoom wait resize text uh
7:42:53
resize us up and down and um maybe this thing ands res siiz let's see yeah check
7:43:01
this we have icon like this that is nice well you can experiment if you want uh
7:43:07
I'm going to leave it uh like this for now looks really nice and um now this
7:43:15
sorting seems to work so now let's go to um fing the information and fixing that
7:43:22
we can do uploads so uh first maybe let's fix that we can do uploads so how
7:43:31
can we fix the uploading functionality and we also will need to fix this
7:43:37
functionality for um for those inputs that we can fill
7:43:43
information and uh and so on so let's first start with the with the
7:43:50
inputs uh when we change something here when we add text it doesn't update the
7:43:56
state and I think this time it will be nice to actually do this so um let's see
7:44:03
um we have those inputs here and uh if we put names here like name and Let's do
7:44:12
let's do for example uh we could do like title of second link or something like
7:44:18
this then it will be handled with this form action and uh there will be no
7:44:24
problems there to do a Ser function and um the only problem with this solution
7:44:31
would be with this uh upad functionality and another problem is that we have just
7:44:38
empty State and uh that's it we have empty state for title subtitle icon and
7:44:44
URL so let's start maybe with the hardest thing which will be the upload
7:44:51
as you remember we have this upload functionality somewhere else and it's on
7:44:56
this page buttons form I think no it's inside the page settings form we have
7:45:02
this generic uh upload functionality here that takes an event and then we
7:45:08
have callback function that we can run when everything is complete well because
7:45:14
it doesn't use any state as you can see we have nothing that touches the state
7:45:21
we can we can grab it and we can uh we can grab it and we can put this as a
7:45:28
separate as a a function outside of this component so let me grab this upload so
7:45:35
let's copy from here and let's paste it here outside of this component so we
7:45:40
have page settings form and here above we have upload or maybe even better
7:45:46
Let's do let's remove it from here let's see where it is now uh let's cut
7:45:51
this from here and let's put this into separate file so I'm going to put this
7:45:57
uh let's see here we have components here we have Libs uh let's do a new file
7:46:02
and let's put upload. JS and let's paste it here so we have this uh function here
7:46:10
and now let's go to page settings form and here we have this uh let's see
7:46:18
somewhere we have this we are using this upload function here and as you can see
7:46:23
it's not here anymore so it's unresolved but let's try to import it no it will
7:46:29
not work because we are not exporting this one so let's do export here and now
7:46:34
let's do here upload um yes and now it's imported from let's see uh upload it's
7:46:43
imported from the libs upload so now it should work and we should be able to use even here on page links form. JS and
7:46:52
before we will do this let's see we have this change icon we have this button that says uh change icon it doesn't do
7:46:59
anything it's just a button the first thing uh we're going to do we will need to have an input of type file and uh now
7:47:09
um this button needs to be a label to this input so let's put input ID uh well
7:47:18
ID will be for the ID we need to put because there will be many of those
7:47:23
inputs we need to make it unique for each link so we need to put something
7:47:29
like this um icon plus the link uh key
7:47:35
right and then it will be unique and now the label we need to remove this type
7:47:40
it's not needed anymore let's add four HTML 4 and needs to be the same as this
7:47:47
ID so let's just copy and paste it here and now let's see yeah and now if we CLI
7:47:53
if we click this it will open file picker for us now uh this input of type
7:47:59
file should be invisible so let's do class name hidden yes and now let's see
7:48:06
if it still works yes it does but I want to have cursor pointer here so let's do
7:48:12
pointer cursor pointer yes and uh now it's the works and it opens the file
7:48:20
piure of the input type file that is invisible here somewhere in between right and now uh for this input type
7:48:29
file we want to add um on change and on change we will run a function let's put
7:48:37
our function here uh handle upload and uh we will use the event that we get
7:48:44
here and we will also pass the key of the link so let's put the key sorry link
7:48:52
key here so we will know where inside this uh array of links we are located
7:48:59
now let's define this function let's put function here handle upload and we have
7:49:06
an event and we have the key or maybe we can name it link key okay and now uh we
7:49:14
want to do something like this we want to run this upload function it from upload JS with this event and here we
7:49:21
have callback function that we can use and this callback function uh contains a
7:49:27
link if everything goes fine uh link to this uh link to this uploaded image and
7:49:35
what I want to do here is okay I have a link everything is uploaded so I want to
7:49:42
go to my links and I want to Loop through this uh loop through those links
7:49:49
I want to find the link where the key is the same as this one and then I want to
7:49:54
change the icon to this link all right so now let's do something like this uh
7:50:01
we want to do set links and maybe let's rename this link to just URL and now um
7:50:08
let's do or maybe let's do image uh or maybe uploaded uploaded uh image link
7:50:16
yeah or upload that image URL Now set links and we will have the previous
7:50:22
links so the pr previous uh value of uh links and it will be the same as just
7:50:29
links it's the same thing but this is the way um well you can just name it
7:50:35
links it doesn't really matter I just put previous links because it tells me
7:50:40
that this is the previous value and here I'm going to return a new value so let's do return and um I'm going to make a
7:50:50
copy of it so let's do previous links with this spread operator like this and
7:50:55
this will be a new array that is just a copy of uh previous links so copy of
7:51:01
links but inside uh I want to do something else so let's maybe do
7:51:07
something of this uh before I return let's do const new links equals this and
7:51:13
now uh I want to do something like this uh I want to look through those so let's do new links and let's do for each and
7:51:23
um for each I can do here an aror function and um here I can use also
7:51:30
value and index so value and index uh I
7:51:35
will not need the index so I can just the value and value is just a all of the
7:51:41
information about um a link so the object inside this array so uh instead
7:51:48
of this I can also grab it like this or well or I can do just link and then do
7:51:56
link. key or something like this right uh so I'm going to do just
7:52:01
link and key and uh now let's see um I want to find if link if link sorry here
7:52:11
should here I should put index because it's an index of array here if link uh
7:52:18
if link key is the same as uh this thing
7:52:23
maybe I can rename it to something uh key uh let's do link key
7:52:30
and or upload something like this if there inside this for each Loop if the
7:52:36
link key is the same as link key for upload then I know that I should change
7:52:43
um link um link icon to this uh let's see uploaded image URL so let's
7:52:50
do let's try link icon equals uploaded image URL all right and uh now let's see
7:53:00
um now let's see if this will work so let me scroll down here we are not using
7:53:06
icon anywhere but I will try to print it maybe before here somewhere so let's do
7:53:14
here Json stringify and let's put link icon like this and it's empty for those
7:53:21
two but let's see what happens if I try to change icon on the second one to
7:53:28
maybe uh this test image why not open and we get an error uh looks like links
7:53:35
map we cannot uh map through it anymore and this is because here we forgot to
7:53:41
return new links so we forgot to set this state thing and now let's see let's
7:53:48
add a new link maybe even two let's change icon on the second one to the test image open and it's uploading Now
7:53:56
it's uploaded and as you can see here we get this URL for the icon so now we can
7:54:02
do something like this and we can put this um use this icon URL uh as an image
7:54:11
so let me see here we have this Json stringify let's remove it
7:54:17
and uh here above we have this font awesome icon we show this link let's
7:54:23
show it only if we don't have an link icon if we don't so exclamation mark
7:54:31
let's do this but if we do so if L icon and parenthesis let's put here image and
7:54:39
let's put image like this from nextjs The Source will be L icon here I will
7:54:46
just put icon and now let's see how it looks like well we need to put an icon let's upload once
7:54:54
again and I think we will have an error saying we need to have with and have so
7:55:01
uh let's put with and have let's put that the WID will be 64 and same with
7:55:07
the ha will be also 64 so now let's see let's try again here upload this uh test
7:55:15
image yes and uh well it's not Square anymore so
7:55:22
uh I want to add some class names here so uh for this image of this source and
7:55:28
so on I'm going to add U well I'm going to add some class names so I'm going to
7:55:35
add like let's do uh object cover aspect
7:55:42
Square uh yes I don't know if it's now uh stretched it shouldn't be stretched
7:55:47
let's remove and let's see yeah it has been stretched uh let's put this back but on
7:55:54
this thing I'm going to add relative this didn't help um let's see how we did
7:56:00
it for the Avatar so for the page settings form we have this Avatar uh
7:56:06
here so we do with full and he full and object cover let's do the same thing
7:56:13
here object cover and let's do wave full and have full okay now it's better but
7:56:21
now this gray square is not uh a square
7:56:26
so let's do aspect Square uh okay object cover let's do F no not fil uh let's see
7:56:36
we have this object cover we full have full let's see on the Avatar here we
7:56:43
have a rounded overflow hidden uh let's try with overflow hidden let's do
7:56:49
overflow hidden no didn't help we have image object cover with full half full
7:56:55
same as here with ho with full have full object cover and let's put object cover
7:57:03
as the last maybe if it changes anything no it does not and we have with and have
7:57:11
same with this thing then we have a relative somewhere here over the flow
7:57:18
round that border border Shadow we have relative here I don't know if it makes
7:57:23
any difference we here we have relative this shouldn't be stretched let's see
7:57:28
with another image for example I will take my photo here and let's see if my
7:57:35
image will be stretched yes it is stretched and um let's see let's try
7:57:41
with another icon I'm going to put maybe this this forest or maybe this icon so
7:57:50
my image here I think it's correct now let's see I'm going to inspect here and
7:57:57
let's see and I think it's correct it uh trimmed the sides of my image let's try
7:58:04
with again with this test image maybe it's too small let's see with this one
7:58:10
this one is Big let's see if this will be stretched and if this will work fine
7:58:16
I think it looks fine let's see yeah my nose is in the middle and it removed bottom of the of the bottle so I think
7:58:25
it's fine so now uh this works fine I'm
7:58:30
going to add some extra class names here because I want this to be rounded full
7:58:35
so we have something like this and uh maybe I will make it a little bit
7:58:41
smaller or I will do this uh square-ish so let's put this and and let's put um
7:58:48
aspect Square overflow let's remove this surrounded full yes and now let's see
7:58:55
how this looks like for empty new uh links it looks like this I think it
7:59:01
looks fine I think that for this thing we can add we can remove the padding so
7:59:08
let's remove padding so we have something like this and maybe we can add a minimum WID so let's do minimum WID or
7:59:15
maybe not minimum WD just a w let's do 12 half of 12 so now we have something
7:59:21
like this and maybe we can make it a little bigger so let's do
7:59:27
24 I think that's too big let's do like um 12 what what else do we have here we
7:59:34
can do 12 we can do 14 let's do 16 16
7:59:40
yes and now this uh icon here should be in the middle so I'm going to add here
7:59:47
as well flex and let's do justify Center yes and let's also change this to inline
7:59:55
inline sorry uh inline Flex so it will be centered and now let's see uh justify
8:00:03
Center let's also add items Center and now the icon is centered uh here inside
8:00:09
uh I want also to make it bigger so let's do size and I'm going to do like 2
8:00:14
XL yes maybe that's the big let's just put Xcel yes I think it looks fine and
8:00:23
uh yeah now let's see and now I can uh addit uh the upload works we save it to
8:00:31
the state I can addit uh stuff here it's not saved inside the state because we
8:00:38
don't have any on change and so on so what we can do now is either fix that
8:00:44
those inputs will have and we'll use the state that we have for each uh for each
8:00:51
of those uh links so we can use state or
8:00:56
or we can use uh we can do as we did before with just form data and so on and
8:01:05
uh we did it before with this form data and the names on the inputs so maybe
8:01:10
this time we can do this uh the controlled way so if you don't have any
8:01:15
value on the input and on change actions it's uncontrolled input and then you put
8:01:21
just default value here but if you put value and don't change then it's
8:01:28
controlled and uh for those two forms for this and this we did uncontrolled
8:01:35
inputs for this one I will show you how to do this the controlled way so um well
8:01:41
here I'm going to just put value and the value of this first input is the title
8:01:47
so let's put link title and on change on change we want to uh we want to well
8:01:55
edit this value with this event uh
8:02:01
information uh but because we need to go inside links and because it's the link
8:02:07
that is uh inside links that we want to change um I'm going to have a separate
8:02:13
function uh called let's say uh handle uh link change and here inside I'm going
8:02:21
to pass the key so let's do link key and let's also pass the value so let's put
8:02:28
the event information now we need to Define this function somewhere above here so let's do this function and let's
8:02:37
do uh sorry first we'll need to have the key and then we get an event if I
8:02:43
remember correctly and let's put the name the link change and uh now let's
8:02:49
see uh we want to update links so let's do set links let's grab the previous
8:02:55
value and we want to return the new value so and um so something like uh a
8:03:03
copy of preview of preview previous previous value of the links uh we change with
8:03:12
something changed inside and I'm going to do something like this const new links new links
8:03:20
equals and let's do copy of uh previous links and but I want to change something
8:03:29
the same way we did it here so I can just maybe copy and paste this here and
8:03:35
what I want to do inside this for each I don't need an index I want to check if the link key is the same as the key here
8:03:44
so I want to um maybe let's rename it to Key of link to
8:03:50
change and let's put this here key of link to change and let me scroll down
8:03:59
here we have a handle link change we push we put here the event
8:04:05
information um so we will have the value we will have the key of the link but we
8:04:11
are not saying what should be changed we need to pass that it's a title that we we are updating here tile all right now
8:04:20
let's go up here and let's see let's call this uh thing uh What uh what we
8:04:29
changing or maybe just let's call it prop sorry prop and uh now here we are
8:04:38
editing an icon we don't want to EDI an icon we want to edit prop and for this
8:04:44
prop uh we are grab in the value from event Target value and that should be it
8:04:51
so now let's me scroll down here and we have uh here title let's see if I can
8:04:58
still edit this one so let me put title and looks like it works just to be sure
8:05:04
it works I'm going to print it here link title and as you can see when I when I
8:05:11
edit it uh it's rendered underneath so everything works let me remove uh this
8:05:19
and now okay uh we need to do the same thing for uh those other two inputs so
8:05:27
I'm going to just copy paste the first will be uh well uh the second will be
8:05:34
subtitle and here we'll have a subtitle as well and on the third we will have
8:05:41
Let's see we will have the URL so let's do here URL and here let's do URL as
8:05:48
well all right now and now let's do some this um so we can added stuff here
8:05:55
inside we can um put URLs and so on and uh now we have this function that
8:06:04
will be run when we submit this form with this button here and um inside this
8:06:10
function I think it's called save yes and it's empty here let's just do a
8:06:16
console log of all of those links that we have inside state so we are basically
8:06:22
not using this form data so I can just remove it from here and uh now let's see
8:06:28
this console log so if I click save as you can see we have an array of two
8:06:33
elements and for each uh of those we get an object that is a link so um the first
8:06:41
one has some data as you can see here so we have like the link the icon that we uploaded we have the
8:06:49
subtitle and the title and the and the uro so what I want to do now is I want
8:06:56
to change this uh object to a form so
8:07:01
let's see if this will work I going to the const form data sorry I want to
8:07:07
change this Json to a form and uh or maybe I don't have to
8:07:13
maybe I don't have to maybe I I'm going to just use a server function here and
8:07:19
let's see if this will work so uh we have those page actions if you remember
8:07:25
and we have those server actions here we have a save page buttons and here I will
8:07:32
have something similar called the uh I sync function called save page links
8:07:41
well and uh well it will do uh almost the same thing so so I need to First
8:07:47
connect to the database and I need to grab the session and then I want to know if we have the session active session
8:07:54
because if we don't so let's do else let's just do return false right but if
8:07:59
we have a session what do we want to do first we'll have um here we had form
8:08:05
data because we were sending form data with uncontrolled inputs here I will try
8:08:11
to push array of links so I'm going to call it just links
8:08:16
and uh here I will just do a console log of those links to to see if this will
8:08:22
actually work so uh let me open this tab here so we can see the console log from
8:08:28
the back end let's hit save and um we just have console log here because I'm
8:08:34
not using this function yet this server function let's go to page links form and
8:08:39
here let's also add the uh save I think it was save page links save page links
8:08:48
yes and let's pass those links here and let's add a weit here and as Sync here
8:08:55
and now let's see what will happen so let's hit save again and as you can see
8:09:01
this thing worked so this is uh console logged from the back end let's go back
8:09:07
to page actions and now we can uh just put those links into our database so we
8:09:14
need to uh update our page so let's do await page update one and the first par
8:09:24
is what we want to update where we can find this page we want to find that the owner comes from the session session
8:09:31
user email because the owner is the email and we can grab the email from
8:09:37
session user email and now what we want to update the second paron of update one
8:09:42
well what do we want to update we want to update only one thing we want to update links that we don't have uh
8:09:50
inside page let's see now we have only buttons but let's put links here as well
8:09:55
let's define the links will be type of well the type of links it will be an
8:10:00
array of objects so let's put an array of object and um or maybe we can put just
8:10:08
object this will work as well and the default will be let's say an
8:10:14
array and uh now let's go back to page actions because we have an error here we
8:10:19
need to push that the links that we are putting here is just links from here so
8:10:25
we can put links like this this will work or we can put like this and this will work too but it's shorter so uh now
8:10:34
let me refresh and let's try to do some stuff so let me uh add a link uh for
8:10:41
example on the first one we are going to put an um MacBook icon I'm going to put
8:10:48
some stuff here test test test URL and on this one I'm going to put my
8:10:55
photo here and I'm going to put to A to B or something else to to URL and just
8:11:04
to see if this will be saved before I'm going to hit the save I need to restart
8:11:09
my environment because we updated this page um schema so now let's see if if I
8:11:16
hit save it's saving and uh saving okay
8:11:22
still saving and it's saved uh would be nice to have this toast thing so let's
8:11:27
go to page links form and here let's remove those links and here let's add
8:11:34
that after it's saved let's do toast and toast and sucess success and saved all
8:11:42
right and now let's see inside our datab if it's actually saved let's go to
8:11:48
database and let's go to browse Collections and now to pages and let's
8:11:54
see if we have links yes we do have links we have two links and we have this
8:12:00
test blah BL blah 2 a 2 N and so on so this seems to
8:12:07
work uh what else we need to fix this is saved into the database let's see what
8:12:13
happens if I refresh when I refresh well uh we still have it let's see we have it
8:12:19
because it comes from the database from the page links all right so this basically works now I want to see what
8:12:28
happens if I try to add another one the third let's put free free B and free URL
8:12:36
and let's put an icon here of I know I don't have let's put this forest and
8:12:43
let's see how this will look like all right so we have this Forest let's try to save it saved okay let's try to
8:12:51
refresh everything looks fine now let's put this MacBook as the last as the last
8:12:56
part and let's see if I refresh MacBook is first correct if I put this as the
8:13:02
last one and then hit save and then refresh MacBook should be the last one
8:13:07
and it is let me scroll up here scroll down yes MacBook is the last one so now
8:13:13
we can uh save our links and it seems to it seems to work the only small thing
8:13:22
that I have here uh problem is that I cannot select on those inputs because
8:13:27
then we are grabbing those so um let's see if there have uh documentation about
8:13:34
this so we have a drag here sort table
8:13:39
API there is group delay let's see if we can Define the handle so there there is
8:13:46
more spe specification on just sort table JS so I'm going to see what we
8:13:52
have here we have delay uh store ising handle here we have drag handle selector
8:13:59
within List names so let's try to use it let's put this handle and let's see here
8:14:07
we have this react sortable let's add the handle and this is a selector so
8:14:13
let's do that the selector will be our uh let's do just let's see the
8:14:19
information yeah it's just a selector CSS selector let's do a class name handle and let's put this thing here on
8:14:28
this div so let's put a class name of uh handle handle and now let's see this
8:14:34
should be fixed and yeah no it's not fixed let's see maybe we need to refresh
8:14:40
let's refresh now I can select here um I can drag in and so on and only when I do
8:14:48
here I can uh sort it and here I can just uh select stuff and so on I think
8:14:55
the similar thing was here yes as you can see I cannot select the text inside the input because we don't have this um
8:15:03
I think it was handle yeah property so let's go to buttons uh
8:15:09
form and let's see here we have react sortable closing tag here we have uh
8:15:15
opening tag let's put handle will be do handle selector and let's put that uh
8:15:22
well let's see where we have this handle I think it's here um yes so let's put
8:15:29
just a handle here so we can grab even from even on the whole thing here maybe
8:15:34
we could maybe we should change that only um only this thing so let's remove
8:15:40
this handle here and let's put this handle here right now we can let's do
8:15:46
refresh we can s select the text here and the handle is only on this icon so
8:15:52
that is nice we could maybe add some padding here like padding of two so uh
8:15:59
so there will be the area of grabbing will be a little bigger but yeah uh this
8:16:05
uh works now maybe it's too too narrow as you can see and but we can make it uh
8:16:12
wider so it's with 48 let's put wave of 56 yeah and now we have more space here
8:16:20
so that looks better now uh we have on this uh icon padding we have here some
8:16:29
Gap well I think uh the spacing here is just all right okay and maybe we can make those
8:16:37
sorting a little brighter so let's go back to page links form and here we have
8:16:43
this uh icon grip lines let's do text Gray we have 7 700 let's try with 500 so
8:16:52
it's more H brighter yes and I think it looks fine now let's see if I drag me to
8:16:58
the bottom here and I will put um uh I will put um URL here a a real URL let's
8:17:06
hit save and let's see if this will be the last one I refresh and yes it's okay
8:17:13
now let's go for example to analytic back here refresh and yeah everything
8:17:19
looks fine so everything is saved and looks like our links are working so that
8:17:26
is really nice right before we will go further I forgot again about removing
8:17:33
clinks we can remove the buttons here with those um buttons uh here but we
8:17:39
cannot uh remove it here we don't have any delete button so so let's try to add
8:17:46
it on our links here we have ADD div with all of those three inputs let's see
8:17:52
where it ends it ends here let's add another uh div with just a button with a
8:18:00
trash icon so let's do font awesome icon let's put icon here and let's do fa
8:18:06
trash and let's import this one let's see how this will look like well it's not where I want this to be uh this
8:18:14
whole da it shouldn't be here uh let's remove it from here let's cut this it
8:18:20
should be under the input so here we have the inputs let's try to put it here
8:18:25
yes that's bur now let's style it a little bit let's put type of uh button
8:18:31
because we don't want to submit the form and let's add class names the class names here will be the same class names
8:18:38
as we have here so let's just do something like a background GR aray 300
8:18:46
let's add padding of two let's do aspect Square because I want the square Batton
8:18:53
if possible and on this da I want to do uh this to grow so it will be square no
8:19:01
this will not work like this uh let's see uh aspect Square will not do
8:19:07
anything here um so let's do something like this uh I'm just going to do punish
8:19:15
on the top and bottom will be two or yes and here let's maybe even add flex and
8:19:23
let's remove this padding on the top and bottom and uh now let's add here half of
8:19:31
full H will take the whole space no it will not it doesn't have to take the
8:19:36
whole Space the whole cave because I don't want this one to be to take the
8:19:41
whole have of three inputs and uh instead I'm going to just add a padding
8:19:49
on the top and the bottom to one uh and pading on the sides of two yes so we
8:19:56
have something like this and uh now maybe we can do some more padding on the
8:20:05
top or something like this or we can add a margin bottom of one let's see or two
8:20:11
so it will be more to the top and let's uh change that top and the bottom padding will be two so it will be more
8:20:19
uh of a size of a um of this um input
8:20:24
now the problem now now I see is that when you click on this you can think
8:20:29
that it will remove only this thing in the middle so only uh let's say the
8:20:37
subtitle uh so maybe it would be actually better to put this here underneath the change icon or I don't
8:20:44
know um or maybe we can put this underneath here or here uh let's grab this from
8:20:52
here this button let's remove this div that is the last part here and let's put
8:20:58
this back to uh this uh div on the left side let's put this button here uh on
8:21:06
the one above let's add some margin btom of two so we have some spacing and on
8:21:13
this button will uh let's add also a span saying remove remove this link and
8:21:22
now we will need to have a flex and gap of at least one here and items Center so
8:21:28
everything will be in line and uh I think this looks fine uh but I want to
8:21:35
have more uh spacing so let's see let's do gap of two and the spacing on the SES
8:21:43
we have only two here here I want to have three and uh no this looks fine but
8:21:51
the one above is rounded a little bit so I'm going to remove it this rounded
8:21:57
medium here so those will have the same styling yes that's ver now um the text
8:22:04
inside here is not aligned so let's do justify Center and now it's uh better so
8:22:12
we have a change icon remove of this link and here we have test test test you
8:22:18
maybe it would be nice to even add some labels here let's maybe try this so here
8:22:24
I'm going to add the label for uh the title title title yes and I think
8:22:33
inside globals CSS we have this class name input label so I'm going to use it
8:22:41
uh here so let's do label class name input label without the dot so it's more
8:22:47
like this now let's put more of those so here and the last one will go here and
8:22:56
we will have a a title let's see the other labels uh we need to have
8:23:04
subtitle and the last one will be URL so let's put uh just URL and this looks
8:23:12
fine and now I will be nice nice maybe to increase the spacing here between so
8:23:18
let's do something like uh let's see here we have gap of
8:23:24
two let's do gap of four yeah now we have more spacing here let's do maybe even more I want to do Gap six so we
8:23:32
will have more visible space here so uh this now looks fine and now we need to
8:23:39
add on click for this uh delete button so let me see where it is this we have
8:23:45
this remove this link type button let's add onclick and on click we want to do we
8:23:53
want to do remove link we want to run this function we want to pass
8:23:59
information about the key so let's do link key and now let's uh Define this
8:24:05
function somewhere here at the top so let's do function remove link and we
8:24:10
have the key maybe we can just name it here key to and let's do link key to
8:24:17
remove and now we want to do here set links with the previous uh let's do
8:24:24
previous links we want to do a return sorry first let's define a new links uh
8:24:31
it will be a copy of previous links and we will just do return here new links
8:24:37
but uh before we'll do this and new links will be previous links and we want to filter we want to fil
8:24:45
and we want to see that the link the link uh key is different than the link
8:24:52
key to remove and uh now we can maybe even make
8:24:57
it simpler we can do just return here and we can make it even simpler we can
8:25:04
do something like this without return and without uh those curly brackets and
8:25:11
we can just put it like this and this Arrow should go here and this should work let's see when we want to remove uh
8:25:19
the link with this key we set links and we grab the previous links we make a
8:25:25
copy and we filter them and we make sure that the link key is different than the
8:25:31
link key to remove now let's see if I refresh uh let's remove this one in the
8:25:36
middle it's removed and uh now uh let's hit save if I saved it looks fine and
8:25:43
now it looks fine as well and maybe after we remove we can even add a toast
8:25:49
uh saying uh success um removed removed uh link or
8:25:56
maybe you can do the link has been removed yes so um Let me refresh now
8:26:04
let's see if I remove this one the link has been removed and uh but we still need to save
8:26:10
so I can refresh and I can remove it again and then hit save then uh then it's saved maybe this the
8:26:18
link has been removed is not needed right and now if I refresh I have
8:26:24
one link I can add another I can hit save if I refresh I have one that is
8:26:29
empty I can remove this one save and now I'm still back to only one link so now
8:26:35
everything's to work we can add edit and delete both buttons and links all right
Public page
8:26:41
so the next really important part will be uh a page so we can see our page how
8:26:48
it looks like live and I think we can start by putting a link maybe somewhere here so uh let me go to this uh up
8:26:58
sidebar and uh let me see we have this my page link and here we have this
8:27:06
navigation uh let's go to this template for the app and here we have this
8:27:12
aside and uh let's see here we have the image and maybe here I will put another
8:27:20
div with a link so it will be something like this um I will have my page here I
8:27:29
guess uh let's see no I cannot find it but I will have the page here like we
8:27:34
will have a logo then slash and then uh my page name so something like this so
8:27:41
yeah something like this but instead of logo I I'm going to take uh this icon
8:27:47
and then it will be slash and then my name of my page uh so how can I get it
8:27:55
uh let's grab this from uh from here we have a session here so we can most
8:28:02
likely also fetch our page so here we check for the session and after let's do
8:28:10
the page and the page will be await and let's do p page page and now let's do uh
8:28:18
find one and we want to find one uh where the owner is our session user uh
8:28:27
email right and this looks fine and now let's see just in case we need to do H
8:28:34
we will need to do connect to the database so let's do mongus mongus
8:28:40
connect and here let's do process. environment. URI and we can do
8:28:45
connection and this page here because this is an async server component we
8:28:52
don't have used client on the top right so this will work now we have even here
8:28:58
a URL let's see if this works uh but it it shows just slash account we have some
8:29:06
warnings here I will fix them later let's remove this URL we don't need this
8:29:11
and this URL is not needed here all right so we connect to database we
8:29:17
grab the page here we have this logo and/ David let's add that only if we
8:29:23
have page we are going to do this so let's put this da here but most likely
8:29:30
we always have a page uh object here all right so uh this is what we are going to
8:29:35
do I need to First fix this logo so I think we have this header and here
8:29:41
somewhere we have this font awesome uh icon and this is our logo is so this
8:29:48
is what I want to put here first and yes something like this and now I'm going to
8:29:55
remove this logo part let's see how it looks like yes something like this now I
8:30:00
want this to be centered so let's do text Center and now let's see yeah now I want
8:30:07
to have some more spacing so let's do margin top of four and now let's see I going to put
8:30:15
slash in a separate span with some class names and same with this David this
8:30:21
David needs to be dynamic so let's put here page I think it was U that we
8:30:26
should use here yeah so we have this logo slash and then page URI which is
8:30:32
David for this profile and now let's see for this slash I want to do uh uh I want
8:30:40
to do some spacing I would do some spacing Maybe here I'm going to do flex
8:30:46
and gap of two so we'll have some spacing yes and I need to add now items
8:30:53
Center so let's do items Center and justify a middle or Justify Center so
8:31:00
justify Center so everything will be nicely centered yes now let's see uh
8:31:06
this icon I want this to be bigger so I'm going to put size 2 XL to XL let's
8:31:14
see how big yeah maybe that's too big let's do just XL yeah that uh that looks
8:31:21
nice um maybe it can be a little bit smaller let's do just large let's see
8:31:27
yeah I think this looks fine now this slash can be also bigger so here for the
8:31:33
slash let's do text large let's see yes
8:31:39
uh maybe even bigger uh I'm going to do 2 XL let's see yes and uh maybe a little
8:31:47
bit smaller let's do just large and brighter so let's do text Gray and like
8:31:53
I know 300 so barely visible yeah something like this and uh I think this
8:32:00
looks fine but I want to decrease the spacing here so let's do gap of one and
8:32:05
this should work fine yeah so we have this uh looks
8:32:10
fine and uh maybe we can remove of this spacing let's do just without Gap and
8:32:16
let's see uh no I think it was better with a small Gap right and uh now I want
8:32:24
the whole thing to be a link so let's change this div to a link or we can
8:32:30
import first the link yes it's imported now let's remove it from here and let's
8:32:36
put this uh link here instead of this div class names here I'm going to put
8:32:41
also C because it's required the C will be dynamic so let's put it
8:32:47
like this and it will go to Just slash and then the the URI of the page so
8:32:56
let's do page. U and I want to add Target to be blank like this so it will
8:33:04
open in a new tab so now I can just click this one and it goes to Local Host
8:33:09
3000 SL David my URI right so this works works and uh and I think it looks just
8:33:18
fine would be nice uh to make it sticky so let me see we have this as side let
8:33:25
me add sticky and top zero and let's see uh no uh maybe I need to refresh no it's
8:33:33
not sticky let's see why and this should be sticky let's see if it has been added
8:33:42
here aside sticky uh I don't see yeah we have position sticky but it takes the
8:33:49
whole hav and it shouldn't so let me see and we have this aide here something
8:33:57
inside it uh takes the whole he and I don't know why let's see um padding
8:34:04
padding wave top sticky and nothing about maybe the div that is uh the main
8:34:11
here let's see here we have aside no nothing about the hav let's see this
8:34:16
thing this thing is display Flex okay that's why this thing aside is full hav
8:34:23
so uh to make it sticky we can do something like this we can remove the
8:34:29
sticky top zero and we can add another div with some class names let's put this sticky in top zero and the closing tag
8:34:37
will go before the closing of aside so here and the rest that is inside let's
8:34:44
just uh do fixed for indentation here now it should be sticky and it is um the
8:34:52
top margin should be added even if we scroll so let me see here we have this
8:34:59
uh padding top of eight let's see uh let's do maybe here six and here let's
8:35:06
do padding top of two so we have a little bit of bading here even if we
8:35:12
scroll that is nice nice and let's see how it looks like if the page is smaller
8:35:18
okay we can still scroll to the to the bottom even if we don't have enough space so that is nice so U yeah this
8:35:25
works and if we click here we go to our page and this will be the next step we
8:35:32
need to fix this page so uh let me go we need to fix this page and we need to list all of the links uh Avatar
8:35:40
background image and so on so um now let me go to um let's see note actions let's
8:35:48
go to page we have two groups uh app and website for the website we have a a
8:35:56
template or the lout that looks like this and for the app we have something
8:36:02
like this this is our template and here we have layout for this so we need
8:36:07
another group I think and this will be for page so I'm going to do another
8:36:13
another group with parenthesis parenthesis another directory here and
8:36:18
let's make it uh called page yes and uh
8:36:24
now let's see now I'm going to go here and inside page I'm going to add a
8:36:31
directory directory with uh square brackets because this will be a URI of
8:36:39
the of the page let's let's create this one because this David will be dynamic
8:36:45
param and we we are going to call it URI and inside U let's do new file and let's
8:36:52
do page thiss all right and here uh we will also need a layout so let's add a
8:37:00
uh layout let's do layout. JS and let's do uh let's put some layout maybe from
8:37:07
the website I'm going to copy and paste it to this layout uh X accept I'm going
8:37:14
to remove the header because we don't need this and that's it now let's go to
8:37:19
page and let's do export default function and let's call it the just page
8:37:26
uh or maybe user page doesn't really matter and we need to do return here and
8:37:32
we need to put some HTML so let's do div and now let's see what is wrong here so
8:37:38
there's something wrong with the globals uh we cannot import globals here and
8:37:44
this is because uh here is our file where we try to import globals and it's
8:37:50
not uh one level up it's two levels up so let's do another dot dot and Slash
8:37:57
and now I think it works so let's go back to this page and let's put page here and yeah we have page so now let's
8:38:05
go to those uh uh props here let's grab everything and let's see what we have
8:38:13
here so let's do Json and let's do stringify props to see what we can work
8:38:19
with we have pars with URI param uh David so this is what I need so I do
8:38:26
const uh URI equals and now from here
8:38:31
let's grab a params params and params and now let's do here
8:38:38
ps. U and here we can just do URI and I
8:38:44
need to save okay so we have this from the URL here all right so now we want to
8:38:50
display page for this user so how can we do this we can do just uh first we need
8:38:55
to connect to the database so let's do Mong H connect and let's do process.
8:39:01
environment. Ur then let's grab the page con page equals a weit page uh
8:39:09
let's import this is a server component so we can do just find one where the URI
8:39:16
is URI so we can do just this it's a weit so we need to do export default ass
8:39:22
sync function and uh now we can display here
8:39:28
more stuff uh so first uh we will have display name and maybe let's do display
8:39:35
name with H2 then we will have a Tre with um H2 let's do a page uh page
8:39:44
display name then let's do uh location page
8:39:50
location and then let's do another H3 or maybe paragraph 4 and bio so let's do page bio and let's
8:39:59
see if yeah it works as you can see here uh I'm going to make it pretter in in a
8:40:05
moment I will also need first an image so let's do image from uh our page uh
8:40:15
actually from yeah from our page not from page we want to grab the session uh
8:40:20
we want to grab our user so we will have page but we also need to grab the user
8:40:27
so let's do wait and let's do user and we want to find and this will
8:40:33
not be a logged in user this will be user from for that page we want to find
8:40:38
where email is the same as page owner and now for this Avatar we take user and
8:40:45
we show the image we need to pass with and half let's put maybe
8:40:51
256 256 and now let's see we need to put
8:40:56
this alternative text so let's put Avatar here and now it almost uh worked
8:41:05
something wrong with the image let's see what happened so here we have the image and U
8:41:11
I can't find Source we have user image let's try to print the information about
8:41:17
the user Json stringify user and now let's see we have image so this should
8:41:24
work user image but it doesn't work let's see why we have image and let's
8:41:31
see let's try to open this image looks fine to me uh so something wrong with
8:41:37
the image let's say weave have decoding uh the source seems to be empty that is
8:41:44
weird let's add uh test here on the end
8:41:49
and let's see uh failed par Source undefined test okay so it says that user
8:41:56
image is actually uh undefined somehow we are waiting for the user to be found
8:42:05
something's OD here so um let me see let's comment out this image for now and
8:42:12
let's see again the user okay now I see this is an array of users and only one
8:42:18
is found we need to change this thing to find one and now let's try let's UNC
8:42:24
come on to this and yeah this looks fine almost the image doesn't work let's see
8:42:31
uh but it's almost uh there so we have Source next image we need to remove this
8:42:38
test and now it works all right so uh let's remove this plus and
8:42:43
string and we will also need to put some class names on this image I guess so
8:42:49
let's put this here this here this here oops and this here and here I'm going to
8:42:56
put some class names later on all right uh I can remove the information about
8:43:03
the user this weird Json and now let's try to style it we have also this
8:43:09
background right because we have this um background that we can do colors and so
8:43:15
on and I want to display it this way is so let's do this uh first let's maybe
8:43:24
also grab the background so um let's do something else first I'm going to print
8:43:31
this uh rectangle so let's do a div and um this rectangle will be a half
8:43:40
of let's do 24 let's the background of gray right and now let's see how it
8:43:48
looks like so uh I don't see it because we need to add background gray and for
8:43:53
example 400 so we have it here the first issue is we have this padding on the
8:43:59
sides and on the top I want to get rid of it I think it's inside this layout
8:44:05
here so let's remove it yes here on this div as you can see we have some paddings and so on let's remove this div let's
8:44:12
just we leave this main that's better but now uh this uh header this top uh
8:44:19
rectangle should be a little bigger let's do 36 whoops
8:44:25
36 and now depending on if it's uh if it
8:44:30
should be an image or the background uh if it should be the color or the background it should change some CSS I
8:44:39
think we can just grab it from the uh set P settings form here we have it
8:44:46
somewhere more to the top Yeah here we have our um here we have extra style if it's
8:44:53
background type if color then we use color otherwise we put background image
8:44:58
I'm going to grab the class names and the style and I'm going just to reuse it
8:45:04
on uh here uh so this uh let's add those
8:45:10
class names here this let's put here let's put this like this now we have two
8:45:16
class names and I'm going to put this as one like this and let's see I'm going to
8:45:23
remove this minimum hav because we have hav of 36 I don't need this negative
8:45:31
margin of four I don't need this padding of
8:45:37
four and I most likely don't need this Flex just if I Center and items Center
8:45:44
so let's remove those and now let's see and now it says background type is undefined uh it's inside page so I can
8:45:52
do just uh something like this I can do page page background type and here page
8:46:00
background color and here same page background type and now let's see uh
8:46:06
almost uh we have use context that's weird let's try to refresh it okay okay
8:46:13
now we have it so we have a background here and if I change to color and I save
8:46:20
and then I go uh here it should be color but it's not let's see if I refresh here
8:46:26
it's still an image let's let's put this to a color let change it to this color
8:46:31
let's hit save let's see if I refresh it's still an image so there's a bag but
8:46:37
we'll fix it in a in a minute let's see let's first fix the
8:46:42
profile uh the Avatar let's put it in the middle and and so on so um here we
8:46:49
have our rectangle uh let's put here a div for our Avatar so the Avatar is just an
8:46:58
image that we are going to uh put in the middle and we have this image here and
8:47:03
the only problem is that we need to make it uh rounded so let's do uh rounded Po
8:47:12
and and it's not square but it should always be a square and uh let's go to
8:47:18
page settings and we have this uh Avatar runed somewhere um somewhere here let's
8:47:26
see here is Avatar we do with and half and then we do those classes object
8:47:32
cover and the parent needs to be square as well so let's put this on the page
8:47:37
rounded full let's put this and now it's not square but if we make this div par
8:47:47
uh as a square so let's do uh ratio of
8:47:52
square aspect Square let's put W of 56
8:47:57
and let's do the same with have and let's see and now it's a circle nice
8:48:03
looking circle now we want to make it centered so let's do MX Auto so to the
8:48:10
middle and now we want to pull it up a little bit so let's do maybe here
8:48:16
relative and minus minus top of I don't know like 24 yeah so we have something
8:48:23
like this maybe this is too big so I'm going to change those 56 to I don't know
8:48:31
48 uh maybe it's still too big so let's do 36
8:48:37
36 yeah I think this is nice now let's change this to 18 now uh let's do 16
8:48:46
minus top of uh let's see we can do 16
8:48:51
should work yes it does and let's see can we do 18 no uh let's do just 16 for
8:48:59
now it will work now uh here underneath I want to have display name and I also
8:49:06
want to change the background color so uh we have this uh col color here uh but
8:49:14
this color will be only for the cover for the rest I'm going to do my own
8:49:19
color but I'm going to maybe put it as a as a setting later on let's do for now
8:49:26
background blue and let's do I don't know like uh
8:49:32
950 let's see and let's see here yeah something like this let me also open
8:49:39
Tailwind colors and let's see see what type of colors we can have here not here
8:49:45
here we have colors and I want something here like blue or Indigo I think Indigo
8:49:52
950 looks nice blue looks also nice uh I think this will work for now
8:49:58
uh I'm going to put it actually uh into the layout so let me put this into uh or
8:50:07
it doesn't really matter let's put it back here for now right so uh that that works and the
8:50:13
text will be white uh for now and uh yeah now let's put the name and
8:50:21
everything here on the mid to the middle so first uh let's put this H2 display
8:50:28
name it should be large it should be centered and now let's see yeah it's
8:50:35
just David maybe I can up uh update this thing to the my last name as well why
8:50:43
not and let's see yes now I want to pull it up a little bit and I will do this by
8:50:50
removing uh doing negative margin bottom so let's do negative and let's do here
8:50:56
maybe 16 that's too close let's do 12 yeah I think this will work and let's
8:51:03
make this name even bigger let's do text XL and now for the location I want to
8:51:11
have this pin icon so let's def font awesome icon and Fa a place uh place
8:51:19
place pin something like this uh let's search for place and location pin let's
8:51:27
search for location pin yeah location dot looks uh looks nice so let's do fa
8:51:36
location uh was it location dot yeah it was location dot location
8:51:42
dot uh yes and now let's see the rest I'm going to put this inside span and
8:51:50
for this H3 we will need to do text uh of uh let's say large flexed and GAP Gap
8:51:59
two so we have some spacing between the icon and the the icon and the rest icon
8:52:07
became really big so let the size here of medium and let's see it's really huge
8:52:15
uh I want this to be smaller why is it that big let's do maybe size of XL and
8:52:22
let's see still big uh I'm going to add some class names here instead let's do
8:52:28
class name and let's do have of eight and now it's fixed almost now let's make
8:52:35
it Center the whole thing so let's do it's Flex so we need to uh justify uh
8:52:42
Center something like this now let's make it the icon smaller let's do half
8:52:47
of four and let's add the items Center here and uh now this should be more
8:52:56
grayish so I'm going to add text Gray or maybe let's do text white but divide it
8:53:02
by 50% so we have something like this but maybe let's do 70 yeah and let's
8:53:08
make it smaller let's do a little bit smaller so let's do medium here and now let's see we have medium
8:53:17
yes I think this will work maybe a little bit of margin um from this one
8:53:24
margin bottom of two yeah maybe just one will be enough right and now here we
8:53:30
have a bio and as you can see bio is to the left it should be centered as well
8:53:37
uh let's put this into a div that will have Max wave of Xs and MX Auto so it
8:53:43
will be centered now let's see uh we have bio here uh let's also add here
8:53:50
text Center and also some margin from the top
8:53:55
um let's add margin top of four maybe that's too big let's do three and let's
8:54:02
do same for the bottom for now all right so we have this and uh maybe I'm going
8:54:10
to put some text uh because why not let's uh to the bio I'm going to put
8:54:17
just this as a random text or I don't know let's put a a
8:54:24
programmer uh located in Stockholm Sweden and uh
8:54:31
that's it all right so this will work and um now let's make the display name
8:54:39
bigger and this looks fine maybe let's decrease the margin to two will be
8:54:44
enough all right and now underneath under this I want to display the buttons
8:54:50
as remember the buttons were those uh those icons here so um how can I do this
8:54:58
first we need to list them so let's put a div here and uh let's say that inside
8:55:06
this div we will do page uh buttons and
8:55:12
let's do map and for each button we will do just parenthesis and we are going to
8:55:20
put a a link uh like this all right and
8:55:26
uh now we need to put here labels but labels will be actually icons so um
8:55:34
depending on the icon I'm going to put one awesome here because this can be
8:55:40
envelope or so on so here I'm going to put button. icon for now and the page
8:55:47
button map something crun with the function let's see uh let's refresh and
8:55:54
let's see page buttons map is not the function let's see why uh looks fine for
8:56:01
me uh let's try to remove it and let's do Json stringify page buttons right and
8:56:10
let's see so uh well it's actually an object it's not an array so we have a
8:56:17
key and then the value so that's why we cannot Loop through this uh so we cannot
8:56:23
do like this uh we need to do uh something else so uh we need to grab the
8:56:30
keys and we can look through the keys so the object keys of page buttons we can
8:56:38
map through those keys button key and and then for each button key we will do
8:56:44
a link whoops not like this uh it will be link with c and let's put this like
8:56:54
this for now and inside we will have an icon and the icon will be for now
8:57:00
buttons of this uh button key and the
8:57:06
dot icon uh here we need to put page buttons all right so now now uh let's
8:57:12
see I don't see anything and uh let's put here also a value so the value will
8:57:21
be same sorry it's not an object the key the key is actually the value the key is
8:57:26
actually the icon so to display the icon we just do button key button
8:57:32
key like this and for the value we just take the value like this so mobile is uh
8:57:40
whoops mobile is this then we have Facebook is Facebook and then email
8:57:45
email and so on so uh let's do maybe something like this for this div I'm
8:57:51
going to add a class names I'm going to put flex gap of two and let's do justify
8:57:59
Center so everything is centered here nicely and now first I'm going to put
8:58:06
the key colon and then and the value yes that looks nice
8:58:12
and no I want to put those as a uh as a
8:58:18
like rounded buttons or something like this so let me put some class name here
8:58:25
and for those class names I'm going to do something like this let's do rounded
8:58:32
medium or maybe rounded full let's do border border white and yeah something
8:58:40
like this let's add ping of two why not and now instead of those texts I want to
8:58:47
display um I want to display the icons so uh here inside instead of button key
8:58:56
which is Facebook and so on I would like to display an icon same way we did for
8:59:04
page and buttons form I think here on the top we had this and it would be nice
8:59:13
if we could just export it and use it uh here so let's try I think it was called
8:59:21
all buttons yeah so let's try to use it here let's do all buttons yes let's
8:59:28
import this thing and let's try off this let's see how this is structured it's an
8:59:34
array so we need to find it of all buttons we want to find where the B
8:59:42
and key is the same as this button key and then we want to have icon so uh
8:59:50
attempted to call find from the server but find is on the client it's not
8:59:56
possible to invoke a client function from the server it can only be rendered as a component or passed to props of a
9:00:04
client component right so um so we cannot do this like this uh instead let's remove
9:00:12
it okay then it works um let's see if we can grab just
9:00:20
the the icon somehow maybe before we will do the render so let's do here uh
9:00:27
icons and let's do something like this we will grab all of the buttons so let's
9:00:33
do all buttons and we want to mop through them and for each button we want
9:00:38
to transform and we want to return that to the icons uh something like this um maybe
9:00:46
instead of map we will do let's do a for each instead so um let's do for each for
9:00:54
each and here we'll have an icons that will be an object it will be cons here
9:01:01
now for each button we want to do something like this uh I want to put two
9:01:07
icons with this button key and button icon here let's see if this will work no
9:01:14
and this doesn't work attempted to call for each from the server but for each is on the client it's not possible to inote
9:01:22
a client function from the server it can only be rendered as a component or pass
9:01:28
two props of a client component right so um so let's uh try
9:01:35
something else we will do something like this icons and let's do something like this email we will will have the value
9:01:42
of um fa email email no fa envelope fa
9:01:49
envelope yes is it uh allowed yes it is
9:01:55
so we can have structure like this and we can even export it and we can later
9:02:00
use those icons here so we don't do a copy paste so first I'm going to um I'm
9:02:08
going to put those icons here let's do X Port const icons and maybe let's call it
9:02:15
buttons buttons icons all right and I'm going to put um this data icon blah blah
9:02:23
blah and so on um down above sorry above
9:02:29
so let's do I'm going to oops not like this I want to H select like this so
9:02:35
let's copy this all of those you cannot do tricks like this you need to do this
9:02:40
manual and now I'm going to add a colon here
9:02:46
everywhere and I need the keys to be unique here so not icon instead I want
9:02:53
to grab all of those key keys like um
9:02:58
well you see uh Telegram and so on let's copy those and uh now here I'm going to
9:03:06
replace those with this right that is much
9:03:12
nicer and uh uh yeah so uh this will
9:03:17
work and now I will just uh import it so let's do let's go to my URI page let's
9:03:25
remove those icons and now here instead of this let's do here um let's try to
9:03:34
print it let's put icons let's try to uh well I cannot find it uh let's see I
9:03:41
icon icon not visible here let's go here buttons icons okay forgot that are in
9:03:48
buttons icons I forgot that I rename it of uh let's see button key so now let's
9:03:55
see now uh cannot find module forms and buttons icons in uh mobile okay so
9:04:05
there's something missing let's see mobile fa a mobile that is weird let's
9:04:10
try to put fa a envelope here let's see if this will work uh no something is
9:04:17
wrong here mobile uh could not find module blah blah blah uh buttons icons
9:04:25
hasht Mobile in the react client Manifest this is probably a bug in react
9:04:32
components bundler okay let's see if we restart the environment will it help
9:04:38
let's do refresh here and let's see if we will have the same error yes looks
9:04:44
like we still get the same error um we still get this right I'm going to put
9:04:51
this inside my URI page maybe then it will work so let me try to put this here
9:05:00
and uh let's see we have here some imports uh let's remove it those are
9:05:09
unused objects are not valid as react child okay so let me see okay so that's
9:05:17
better it just says I cannot uh put it like this I need to put this as a font
9:05:24
uh font awesome icon and the icon will be uh uh buttons uh icon buttons uh
9:05:33
icons of buttton key all right and let's see almost it almost works so so uh now
9:05:41
let me see how it looks like here inside for each link we have an SVG and it's
9:05:49
not empty so that is nice uh the only problem is that it's uh hidden or
9:05:55
something and um so let me try to put size of um I don't know XL let's see
9:06:04
still hidden we have a padding we have icons let's try to just put here f a
9:06:11
envelope just to see if this will work no uh nothing is visible so something is
9:06:18
wrong here let's do um let's try to put
9:06:23
this for here I'm going to put test for now and let's put the icon here and
9:06:29
let's see yeah the icon here worked it's really big and it's not that beautiful
9:06:35
but at least it worked now I'm going to uh let's see it's here location dot here
9:06:43
is this big envelope let's try to put this inside a link and this test I'm
9:06:50
going to put inside the span okay now it's better and now I'm going to put half of
9:06:57
those links to let's say 16 and now I'm going to remove this test and now let's
9:07:04
do the width of 16 as well okay that's better and uh uh now let's see let's
9:07:12
change the size to medium and this didn't help let's do here class name of
9:07:20
let's do wave of eight and half of eight uh whoops eight yes and now we can
9:07:28
remove wh and H from here I'm going to do flex and items Center and justify
9:07:36
Center so it will be in the middle let's do more of ping or I don't know if we
9:07:42
need more uh maybe smaller icons instead so let's do here maybe just six and yeah
9:07:50
that looks nice maybe instead of the Border we could make the background to
9:07:56
be white and the text to be a blue um 600 something like this yeah I think it
9:08:04
looks nice or this blue 90050 why not and now instead of fa
9:08:12
envelope I want to have those buttons uh buttons uh icons let's see buttons icons
9:08:19
of button key yes and let's see if this will work yes I think it works uh except
9:08:27
the first one where I have this mobile let's put fa mobile uh like this and yes
9:08:35
import okay uh looks nice but maybe I'm going to do one instead phone instead of
9:08:43
uh this mobile right looks fine now let's make it even smaller so those uh
9:08:50
circles needs to be smaller let's see uh let's change the icons to let's do five
9:08:58
and let's decrease the Ping to two or maybe just one yeah no let's just do to
9:09:05
right and I think this will work for now and now let's add maybe some padding to
9:09:13
the bottom padding bottom of four at least and let's do maybe let's do margin
9:09:19
on the top of four so we have more spacing and maybe even more let's do
9:09:25
eight yeah and maybe that's too much let's do six so something in between
9:09:30
yeah uh maybe still too much let's keep it four underne I want to have uh all of
9:09:37
the links so uh let me go here and now
9:09:42
let's do apparent for all of the links and here let's Lo through the links so
9:09:47
links are uh an array so let's do page links let's do map for each link let's
9:09:54
do parenthesis and let's put this as a link
9:10:00
like this for now it will be just slash and here will um each link will be
9:10:09
an icon I want to have a left side each link will be a box and on the left side
9:10:16
I will have an icon and on the right side I will have title description and
9:10:22
the URL maybe so let's put two divs or the left and the right side for the left
9:10:29
side we are going to have the image or uh the icon and for the right high right
9:10:35
side we are going to have link uh let's put maybe H3 and here let's put link um
9:10:43
I think it was title title and here let's do link
9:10:51
description as a variable like this and now let see yeah it's uh almost there uh
9:10:59
let maybe put let's put some real links so um this is just some URL to a library
9:11:07
let's put the LA uh label or title my favorite
9:11:13
favorite Library my favorite react Library something like this and subtitle
9:11:21
and uh sore table JS used for sorting
9:11:27
sorting list with and drag and drop
9:11:33
something like this let's save it and now let's refresh here and U well it it
9:11:40
hasn't been saved let's see I hit save and let's see uh save and payload it
9:11:47
looks like it's save uh let's do save let's see if it has been saved to the
9:11:53
database let's go database Pages let's go to Links uh yes it has it is saved
9:12:02
it's just uh the problem is that it is
9:12:07
cached so um okay okay now it's not it's actually it wasn't cached uh it was just
9:12:14
updated but I haven't seen the difference all right but uh let's uh fix
9:12:20
it so um those should be uh like boxes I
9:12:26
want those to be boxes so for each link uh we will have a URL here so let's put
9:12:32
link. URL and I want also to put some class names class name and let's put
9:12:40
background gray or blue uh 900 and let's see uh this will be fine
9:12:49
let's add padding of two just to see how it will look like uh I don't see any
9:12:54
difference here let's do background blue 500 uh I don't see anything background
9:12:59
blue 500 the color doesn't work uh let's do display of sorry just block like this
9:13:07
should work and now I see something all right right so let's change this to 9900
9:13:13
so it's this blue color here maybe I will change it to let's put Indigo
9:13:20
Indigo uh 900 yeah something like this maybe let's do 800 yeah and now I want
9:13:28
the links to be centered so on this parent div I'm going to do Max wave of
9:13:35
let's do Xs and MX Auto so it will be centered um that's maybe too narrow
9:13:41
let's make it uh large uh yes and let's
9:13:46
add more links so I'm going to add two more links so let's close this and uh
9:13:55
let's put maybe font awesome as a link uh font awesome uh my favorite icons
9:14:05
pack and the URL is this and now the third will be
9:14:11
uh I'm going to put my my GitHub my GitHub account and here you can find all
9:14:20
my projects right let's hit save and now let's see how this will look like right
9:14:26
so it looks like this and uh first uh let's make it little bigger um not to LG
9:14:35
let just do XL and now I want this to to be um two links in a row so let's do
9:14:43
grid and grid Columns of two and let's
9:14:49
add a gap of four so we have spacing like this yes now let's do padding of
9:14:56
four so we have some padding yes that is nice and now let's make it even wider
9:15:04
yes it looks fine we can also do that uh for small screens it will be only
9:15:10
uh one row so let's do this only for medium only for medium screens we will have two columns yes that is nice and
9:15:19
now let's add more padding on the sides so let's do padding on the sides of
9:15:25
eight just so we have some more space here to work with and yeah I think this
9:15:32
looks fine now I would like to uh fix
9:15:38
the the width of of the uh of the main color here so this dark blue should take
9:15:45
all the all the wh so um this thing let's do mainave off screen yes that's
9:15:53
much better and uh yeah now let's fix the rest of those links so um let's fix
9:16:02
the the icon and the text should be on the right side let me scroll here and
9:16:09
for those links let's do flex and uh and now let's see so we have icon on the on
9:16:17
the right side and let's see for the uh let's add some P we already have padding
9:16:24
of two and but now for the icon let's put a class name background blue 550 or
9:16:34
I don't know like 700 700 so we will have something like this yes that looks
9:16:40
nice and I also want the icons to
9:16:45
be uh Square so let's do aspect Square
9:16:51
yes and more padding so let's do padding of two at least but maybe let's do like
9:16:57
four yes and I want to pull them uh like outside so more Gap Let's see we have
9:17:06
gap of uh four let's do six so we have more spacing here and um now I will pull
9:17:14
the icons icon boxes little outside so
9:17:19
uh let me see I'm going to add relative here and minus left minus left of four
9:17:27
let's see yes something like this this looks really nice and now if we don't
9:17:33
have an icon let's see here I'm going to do if link has icon then I'm going to
9:17:41
display it as uh image from next let's put icon here and here let's do Link
9:17:49
Link icon and the wave will be like 64 and half of 64 will be good enough let's
9:17:58
see uh here I also want to have the uh to make it square and not uh like
9:18:06
rectangle so let's see um here we have this parent for those icons let's add
9:18:13
wave of 12 and half of 12 here and let's see yeah something like this and maybe
9:18:20
I'm going to make the padding smaller so let's do padding of one or maybe uh yeah
9:18:27
this will work let's also remove the Overflow overflow hidden let's see yeah
9:18:33
I think it looks fine uh but uh maybe I will even remove
9:18:40
this padding one so let's do without padding so we have something like this and let's make it bigger so let's do 16
9:18:48
here and 16 here so we'll have bigger icons yeah I think it looks fine and if
9:18:56
we don't have any icon I want to display this link icon so if we don't have any
9:19:02
icon if we don't have any link icon I want to display a font awesome icon and
9:19:10
it will be fa link I think yes and now let's see yes it can be white it's fine
9:19:18
and the only thing is I want this to be smaller so let's do class name and let's
9:19:24
do with of six half of six uh maybe a little bigger so let's do maybe uh eight
9:19:31
something like this let's make it centered so on the parent let's add Flex
9:19:37
items Center justify Center yeah now I think it looks nice now for the texts uh
9:19:46
let's see we have texts here we have description uh it's not description it's
9:19:52
subtitle I think yes and now the subtitle should be more grayish so let's
9:19:59
do text white oops text white 50% transparent something like this and uh
9:20:07
what else and this looks fine um it should be only one line so let's
9:20:13
do here I'm going to do half of 12 or maybe like the half of I know like eight
9:20:21
and well if it's bigger than this then uh I want this to be overflow hidden so
9:20:29
let's do here overflow uh ellipses will it work no let's do overflow hidden all
9:20:36
right so almost there let's do sa of um six yeah so now it looks like this now
9:20:43
let's make those texts centered so this div let's make it Flex let's make items
9:20:51
Center uh but let's change this to flex Flex zow yes and let's add justify
9:20:59
Center no it didn't change anything um let's do content content and
9:21:08
Center no right uh I can Center it by putting another div here and putting
9:21:15
this H3 and paragraph inside no still nothing let's put just flex and item
9:21:20
Center okay now it's centered right and it looks fine except
9:21:26
uh this one let's see why I think it's because this text takes too much space
9:21:34
so on this div that is the parent of the icon I'm going to add grow here now
9:21:40
let's see now that's too big let's see uh I need to assign with and have okay
9:21:47
let's put this wave and have on the on the parent same with the same with the
9:21:52
color and so on so let's put the div with those classes and let's put those
9:21:59
icon or image here inside let's put the blue thing and aspect Square inside here
9:22:08
same Reef relative okay and all of this about uh let's see
9:22:14
all of this that is about the flex thing we need to put this uh here as well all
9:22:22
right now let's see we'll still too small um let's see if we add a grow here
9:22:31
well uh didn't work let's see well let's see and whoops here here we have a link
9:22:41
this part is super small let's put this wave uh thing here inside and let's see
9:22:49
now still didn't work the have works but not the wi so we have Wii on this thing
9:22:56
and uh with 16 if I open this is uh big
9:23:03
enough okay so I think the only problem is that the image is not a square that's
9:23:08
why and uh so let's do on the image let's see here it is we don't have any
9:23:15
classes here so let's try to fix it let's put some H class names on this
9:23:22
image let's do width of four and half of oops half of full now let's see and the
9:23:30
better but not perfect I think it has been uh it's not fully visible let's see
9:23:36
maybe because of this and we need to have this cover thing object cover now
9:23:43
let's see still nothing do we need to add the relative on the parent no
9:23:49
because we have it we have here we need to add wave here let's see that's better
9:23:56
but still not as we want to have it let's see on the Avatar so runed full
9:24:02
wave full have full object cover wave have object cover and how the parent
9:24:09
should look like aspect Square okay let's fix it um here we want to do
9:24:16
aspect square and let's see it is square but the image doesn't take the whole uh
9:24:24
WID of the of this div let's see how it looks like on other places so on other
9:24:31
links we have this div and it looks fine
9:24:36
well the only problem here is probably this long uh description so let's try to
9:24:44
remove it okay and then we can then it works um let's try to maybe just um
9:24:51
remove part of it and let's hit save or maybe we can put as it was and just make
9:24:58
sure uh that it's uh it doesn't take that much space so um it shouldn't grow
9:25:06
it should shrink so let me see here we have it let's put shrink and let's put
9:25:14
grow of zero and uh what else um we will
9:25:20
also need that limit the width of it let's put here inside maybe overflow
9:25:27
hidden will it help no it will not if we remove it then it's fixed but uh well uh
9:25:35
it doesn't work if we have a long description here for now I'm going to
9:25:41
put a shorter description and later we can figure it out so like this let's do
9:25:48
hit save let's refresh and for now it works let's fix that uh everything is
9:25:54
more to the left let's see here we have too much spacing it pushes everything to
9:26:01
the right so we need to remove those gross things let's see here let's see if
9:26:09
I refresh and uh let's see here we have grow uh let's see let's search for grow
9:26:17
here let's remove it okay now that's much better all right so now we kind of
9:26:24
have displayed our profile and you can register more users and you can do and
9:26:31
more links or different patterns and so on now uh one small thing that we need
9:26:38
to fix is for now we don't have links for those buttons here and let's see for
9:26:44
now all of the buttons buttons go to Just slash and I want to change it so let's
9:26:53
do something like this it will use a function that is outside of the
9:26:59
component called button uh button link all right and it will pass here the um
9:27:07
the key and the value all right and now I want to check if the key so let's do
9:27:14
if key is uh is phone or if it's mobile
9:27:21
then uh the URL will be tell colon then the value now if the key is uh email
9:27:30
then I want to do mail to colon and then the value otherwise so default will be
9:27:38
just value uh and this function is called button link okay so let me see here
9:27:46
let's change this to a button link and here let's put key so button key and the
9:27:53
value will be uh page buttons of button
9:27:58
key right so now if I click on this one as you can see in the top left corner of my browser it's t colon so it will just
9:28:06
call this number uh for for the Facebook it's just a link and for the email it's
9:28:12
mail too so if I click on this one it will open my app for sending image so
9:28:19
that is really uh nice right and uh this
9:28:24
uh seems to work let me try to fix now so we can change uh to a bug to a
9:28:32
background color so for example if I want to have purple background I say it
9:28:39
and but then if I refresh it's uh it's a color okay let's see here okay so it
9:28:45
works I thought it didn't work but well actually looks like it just does maybe I
9:28:51
clicked on the on the wrong button I try to change it to a dark blue or maybe
9:28:57
this blue let's see if I refresh yeah it just works so uh let me change back to
9:29:03
image and I want to change image to this MacBook thing this MacBook photo
9:29:10
uploading let's wait uploaded okay let's save let's go here yeah and it works
9:29:18
another feature that would be nice to have is a theme so that we can change
9:29:23
the background color and the color for the for the buttons or for the links
9:29:30
would be nice to have it but uh and maybe a theme for a light theme with uh
9:29:37
black text but it's just another one thing to to to add maybe later for now I
9:29:44
think it would be nice to First Implement analytics so we can see how many views we have on our page and how
9:29:52
many clicks on each link and so on so this will be the next part the next
9:29:57
thing I'm going to implement all right so now let's try to implement some kind
Analytics
9:30:03
of Statistics or analytics so the first part will be uh page views so what I
9:30:10
want to do is every time someone visits this page I want to save information
9:30:17
that this page has been visited so we will need a new collection inside our
9:30:24
database like page views or something like this so uh let's go
9:30:31
to uh our models let's go to models and let's create a new model and let's call
9:30:40
this one maybe maybe let's call it clicks or maybe we can call it stats or
9:30:47
I don't know events so it can be both for clicks and visits so let's do uh
9:30:54
events or maybe let's do startat uh statistic or maybe maybe let's do just
9:31:00
Event Event JS and let's do export default sorry not here and here we are
9:31:08
doing schema so let's do const and event schema equals new schema let's
9:31:18
import this function and first we want to know what type this will be so let's say it will
9:31:26
be a type so it can be either a string yeah it can be only a string but it can
9:31:32
be click or view so let's do something like this um
9:31:39
we will do just here string and now I think that's it but we need also
9:31:46
U so uh let's put this and this will be also a string and I want to have time
9:31:54
STS so let's do uh time stamps to True right and now this will be type of
9:32:02
events so it will be either a click or View and this one will be your I so for
9:32:09
example SL David for the page or for clicks it will be a really long URL like
9:32:17
htps and whatever we have inside our um links that we are clicking all right and
9:32:25
because we have time stamps to true we will have um created ad time stamps there right so we have this now let's
9:32:33
create our model so let's do const uh and we can also export for const event
9:32:40
equals uh let's first check for models models if we have event if we
9:32:47
don't let's create a new model with name event and then the schema will be event
9:32:57
schema all right now we can use it so the first thing and that we want to do
9:33:03
that is that every time someone visits this page we want to save a view with
9:33:11
this URI so let's go and do this let's go to um let's go to
9:33:19
website Website Layout let's see or let me go to the page and here we need to go
9:33:26
to page and then we have our page here
9:33:31
and this is where we render this page and I think we can do something like
9:33:38
this and we have our page here and we can add
9:33:43
here that every time someone enters this page we will also add a um event so
9:33:52
let's do something like this wait and let's do event let's import this one
9:33:58
let's see if it's imported correctly um now I cannot see this uh I
9:34:05
cannot find it here let's see now we have on page and user let's import it
9:34:11
manually let's do import event from Models event and now let's see now let's
9:34:18
do event and let's do dot create and we want to create an event so let's
9:34:25
do uh like this and now URI will be uh
9:34:31
just U that we have here so let's do just URI and now uh what else do we want to
9:34:39
add here we want to add a type will be View and that's it now let's see what
9:34:46
will happen if I just refresh here now let's go here let's do refresh and we
9:34:52
have events here and I have two uh two
9:34:58
events here we have and those are exactly the same and I think I have two
9:35:05
because when you develop an app it renders always two times uh to check if
9:35:13
there are any problems with the app so I deleted all of the events and now if I
9:35:18
just uh refresh this page I will I should have two events let's see no I
9:35:25
get one okay so that's that's good let's try to refresh once again it should be
9:35:31
only one yes so sorry I was wrong we get only one event let's try again I will
9:35:37
delete this one let's refresh here refreshed now let's see how many events
9:35:43
we will have we get only one okay that's fine I thought that in the app Rend
9:35:49
there's two times behind the scenes uh another time behind the scenes so it will uh compare the react apps but
9:35:56
that's fine uh it's uh only once so we have only one event and that's even
9:36:02
better all right so now we have our view event that we can use uh here inside
9:36:11
analytics but before uh I'm going to implement those views here H I want also
9:36:18
to have clicks so for example when someone clicks on one of my links or
9:36:23
maybe on those I want to have uh information that someone clicked on this
9:36:31
so if I scroll down here we have both the buttons and the links here are the
9:36:39
buttons and here are the links let's first do the links so um here there is
9:36:47
something called ping and the Ping attribute is a URL
9:36:53
that we can notify uh just before uh when someone clicked the link it will first notify
9:37:01
the pink and then it will redirect so uh let's notify and here we
9:37:08
want to pass uh some URL um so let's say the URL will be
9:37:13
slash API SL click and then slash and then let's put
9:37:21
um a URL here so let's put here plus and
9:37:26
Link URL now let's see how this will look like I will refresh here let's
9:37:32
check this one inspect and let's see here we have a
9:37:38
ping and as you can see here I have my URL and um well I don't like that it
9:37:46
looks like this it's go it goes with htps and so on so we need to somehow
9:37:53
make it more um make it more um it shouldn't
9:37:59
look like this because it can destroy the structure of links uh so we need to encode it somehow
9:38:07
so let's maybe first try with question mark URL equals and now let's try to do
9:38:16
now let's try to put this into a function called and and code um let's
9:38:23
see URL I think it was like this and code
9:38:30
and code U yes this function and let's
9:38:35
put this as a Pam and now let's see what we will have so now we have something
9:38:41
like this um click and then URL equals htps and so on and well I think this may
9:38:51
work or I don't know because here we have question mark Q equals and here we
9:38:57
have question mark URL equals so I don't know if this will work so we will try
9:39:03
something like this there's an encoding function called all the
9:39:09
BTO a and it's like base 64 encoding so
9:39:14
let's try this one as you can see it refreshed and now the URL looks like
9:39:19
something like this uh it doesn't look like our URL but we can decode it on the
9:39:26
back end so that's not a problem let's now go to uh let's keep it this way and
9:39:34
um let's see what happens when we click open a new tab for this link uh the link
9:39:42
has been opened let's see if any requests have been send to this uh to
9:39:47
this uh ping I don't see any request here uh but let's try to create a back
9:39:54
end first maybe it doesn't work because we don't have any back end so as you can
9:40:00
see we need to have API and then click so let's go to up API and then let's do
9:40:07
new new directory click and here let's do a new file and route.
9:40:15
JS and here let's do export uh function
9:40:20
post and for now let's just do that it will do await let's add ASN here await
9:40:29
event and let's import this event it doesn't import automatically for me
9:40:35
event from uh I want to go to models so one more here no one more models and
9:40:43
event right now event create and let's
9:40:48
try to create a type of type of Click event and for now the URL let's see how
9:40:57
it looks like it has this URI okay let's put that URI will be empty for now and
9:41:06
uh that's it it will just return um response Json true and that's
9:41:13
it and here we can probably do just something like this models event or
9:41:20
let's see um here we can replace it with models events event like this right so
9:41:27
now let's see if I click one of those uh it will direct me because it's a link uh
9:41:33
let's see if I will get an uh an event here so let's scroll to the bottom no I
9:41:40
don't see any click events let's go to let's go back to my
9:41:47
profile I'm going to refresh let's see let's see this link we have a p a pink
9:41:54
here so this should work now let's try to click this one again let's go here
9:42:01
let's do refresh and let's see to the bottom no no click events
9:42:09
let's see what happens if I add a Target blank to those um links let's do
9:42:17
Target and let's do blank and let's see let's see if this will work then or
9:42:24
maybe we need to add also a full URL so
9:42:29
let's also add it so um let's see if we need to add this HTTP loc 3,000
9:42:38
let's add it to ourv let's see do we have any um URL
9:42:45
here no we don't we probably will need to have it so let's add this and let's
9:42:53
do public URL equals and let's do HTTP or maybe let's just name it
9:43:00
URL uh HTTP and let's do Local Host and let's do
9:43:06
3,000 and and uh let's just save it like this and now let's go
9:43:11
here and uh before here I'm going to add a process env. URL and I can remove this
9:43:21
slash and now let's see now we have locost 3000 and then API click right so
9:43:28
let's try to click equ one to click this once again I will click this one and it
9:43:36
opened in a new tab because we added this target blank uh I don't see any requests to
9:43:43
Ping but let's check our database let's do refresh let's scroll here no no click
9:43:50
events let's check here no all right so it looks like uh it was my ad blocker
9:43:57
that was uh not sending those pink requests because if I copy this URL and
9:44:04
I will open this in uh for example for uh Safari so here's my Safari and if I
9:44:12
click one of those let's say this one um something was happening here and um we
9:44:20
get even an error that it cannot create here um this um event crate because we
9:44:28
forgot to connect to our amongus database so let's do mongus connect and
9:44:33
let's do a process that env. URI and uh now let's try to do this
9:44:42
again I'm going to click on this one and now it looks like everything worked uh
9:44:48
just to be sure let's add a console log saying
9:44:54
click and now I'm going to open this again click and as you can see we have
9:44:59
this click here and so I can close this thing now and if I go here and I refresh
9:45:08
my database I should see uh the clicks here uh not here here on the next page
9:45:16
down here yes you can see we have clicks right uh but the issue is here
9:45:22
small issue that uh it can be blocked by uh it can be blocked by
9:45:29
trackers uh uh sorry it can be blocked by ad blockers so um what we can do is
9:45:37
we can add we can add a separate redirect request but I think it's not uh
9:45:45
necessary for now uh we can maybe do this later for now let's try to display
9:45:51
some data here so where we have both views and clicks and let's try to at
9:45:58
least put some information here uh let's remove this console log and before maybe
9:46:04
before we will do this let's do that this U will not be empty we are sending
9:46:10
this uh let's see this URL here as you can see so maybe let's try to uh get it
9:46:18
here so let's do request let's grab the request let's do cons URL equals new URL
9:46:25
from uh request URL and now let's try to do conso log
9:46:33
URL and here we can do also query search for query query um no we
9:46:43
are not using any query selectors query let's just conol for the
9:46:49
whole URL and I'm going to use my um Safari so let's do this in another
9:46:57
browser if I click let's see uh we get here some information console logged and
9:47:04
we have for example here URL pm and it's
9:47:10
let's see where is it inside it's inside search parms so let's do do search pars
9:47:17
and it's an object so we can do get and URL and now if I try to do this again
9:47:25
let's see we get only this encoded URL and now we can use uh let's assign it to
9:47:33
uh to a variable uh or to a con so let's do const clicked link equals and we need to
9:47:42
decode it first as you remember we were encoding with uh let's see uh we were
9:47:50
encoding this with this function H BTO a
9:47:56
and we can decode it with AO a o b so
9:48:01
now let's try to do console log of the clicked link and and if I open here
9:48:09
let's click once again and we get clicked link and it looks fine right so
9:48:15
let's add this click clicked link here to the U clicked link and now this
9:48:22
should work fine so if I click once again and uh let's close this thing now
9:48:31
if I go to database and I do refresh and I go to the last page uh
9:48:38
let's see we have a click with the URL here maybe it should be called URL and
9:48:44
not U I don't know you can rename it if you want and uh now let's try to display
9:48:50
something here something so let's see uh let's open sidebar and uh we have app
9:49:00
and then let's go to the app so our uh admin panel and then let's go to
9:49:06
Analytics and here we have analytics a page goes here uh let's put our white uh box sorry
9:49:15
we had this box component uh section box let's put test here let's see if I
9:49:23
refresh yes we have test and now I would like to put some numbers here so first
9:49:29
let's maybe uh grab uh views count equals
9:49:37
and let's do await and let's grab our event I want to import this thing so
9:49:45
let's do event now uh I need to import it manually so let's do import event
9:49:51
from and let's do slash models slash event and uh now here let's do event and
9:50:00
let's do count documents and I want to count where uh I think it was type let's
9:50:07
see yeah type is view so where type is
9:50:14
View and URI is uh and U is let's see
9:50:20
Slash David or just David so my uh my page name so let's say it will be David
9:50:28
for now it will be hardcoded we will uh fix it in a in a minute let's do const
9:50:34
click count and let's do this same um U doesn't really matter
9:50:41
here and we need to do asnc function so let's do as sync and we need to connect
9:50:47
to the database so let's do mongus connect process. environment. U
9:50:54
and now let's try to display view count maybe it should be called views count
9:51:00
and here we should have clicks count let's try with uh views count
9:51:07
and let's see 43 43 views okay uh it's
9:51:13
because I uh refresh the page a lot uh all right this thing works uh now I need
9:51:22
to change that uh this URI will be
9:51:27
dynamic so first we want to grab our um
9:51:32
session right so let's do const session equals and let's do wait get server a
9:51:40
session and here of options imported yes now let's grab our let's first check if
9:51:47
we don't have a session then let's do return uh no session or we can just do
9:51:55
redirect redirect to uh homepage okay if we have a session here let's do const
9:52:02
page and we want to do await and then let's do pay page that's the page find
9:52:09
one and we want to find the page where the owner is uh our user so let's do
9:52:15
session user email right so we have page so we can now replace this um U David to
9:52:26
page U right now uh let's see it should be still 43 now it's 45 maybe because I
9:52:35
refreshed this page a little bit it let's refresh once again refresh here 46
9:52:40
okay uh it looks fine uh now we have those clicks here uh for those clicks I
9:52:49
want to check where the type is click and I want to check clicks only for my
9:52:56
links so let's do that where Ur is
9:53:02
inside page links so it's the page links and and um now let's try to print this
9:53:09
clicks uh count let's see if I refresh
9:53:14
it doesn't seems to work because um links is actually an array of
9:53:22
objects and I want only to have the URL so let's do something like this map and
9:53:28
for each link I want only link URL right now we have only one click I don't know
9:53:35
if it's correct um let's see let's try to
9:53:42
display all of those uh links here let's do here Json
9:53:49
stringify and let's do page links map and for each link I only want link URL
9:53:57
and now let's see what we will get here so we have an array of links uh and as
9:54:03
you can see we have like two or free links so that's good and uh I think we
9:54:11
were clicking only this one or no we were CL we were clicking this one with the font
9:54:17
awesome and uh let's see how many times we can find it in the database so U and
9:54:25
let's try to find this one so we find only one okay I'm going to open my
9:54:32
Safari once again and I'm going to I open my profile and let's go to slash
9:54:42
uh David and let's try to open this link once again and now we should have two
9:54:49
yeah now we have two two clicks so that is nice uh so it works I can remove this
9:54:55
Json and let's put clicks is this and the views is view count and let's put
9:55:05
break line here and we have now some basic
9:55:11
analytics uh maybe it will be nice to put some graphs here or you know um
9:55:17
something like this and I also want to display clicks
9:55:24
for every specific link so for example for uh this uh font awesome link you
9:55:31
have so many clicks and so well so this is what we are going to also add here
9:55:38
all right so now I would like to start by showing those views uh in a chart so
9:55:45
I think I would I will use for this recharts so
9:55:51
recharts and it's a library to do charts and yeah as you can see uh but before we
9:55:58
will do this uh I want to be H do this horizontal line with uh days and this
9:56:07
line up will say how many views we have for specific day and to achieve this we
9:56:13
need to get rid of this count let me open inside up we have our analytics
9:56:21
here page and as you can see we have only views count and instead of this
9:56:28
views count for all of these I would like to have count for uh each specific
9:56:33
day so let me go for example to events and um we have a view on this Ur
9:56:42
and what I want to do is I want to group by the Numbers here so to do this we are
9:56:49
going to do aggregation and I'm going to first show
9:56:55
how to do it here with this aggregation tool and later we are going to do the
9:57:01
same thing but uh inside the code so with aggregation we have like stages so
9:57:09
the first stage is uh uh we will choose what we want to
9:57:15
match and we want to match uh the query where let's see uh here we have some
9:57:23
examples of the documents we want to have only type of view so let's add that
9:57:29
type uh is View and uh what else do you want to
9:57:34
check well well I think that will be it and the URI is David so let's add URI is
9:57:43
David later we will add this to we will change this to be dynamic variable
9:57:48
inside our code but for now it will be just a fixed so uh now we have only
9:57:55
views here uh event type view for URI David inside those examples we have
9:58:02
sample of 10 documents so we see what this St stage does uh let's add another
9:58:08
stage and this time we'll do group and now um first we have ID here
9:58:17
as you can see that should be expression and here what we need to do is we need
9:58:22
to Define how we want to group this and we want to group this by date right so
9:58:31
we want to take created ad for example this date and we want to get only date
9:58:37
from this date time so we don't need this second part we only want the date
9:58:44
so we can do something like this we can do date to
9:58:50
string and here we need to put some parms and our pars first is date and our
9:58:59
date is uh created at created ad like this and now format format
9:59:07
and our format will go like this uh we do percentage uh y so it will be year
9:59:15
then let's do percentage month and then percentage day all right and then we
9:59:22
have here uh the rest is accumulator so what we want to uh have uh inside our
9:59:32
grouped data so I want to have only count and my count will be uh here we
9:59:41
just need to put count and it has no extra pars so now let's see here as you
9:59:48
can see we have ID of this date uh fourth of uh December count one then we
9:59:55
have this uh second of December we have count two and let's see and here for
10:00:03
this date we have 52 so that uh seems to be okay seems to be correct but uh let's
10:00:10
see today's date is 4th of December so I did only one uh I trigger only one uh
10:00:19
view event I'm going to trigger another one yes so now if I refresh I should get
10:00:26
56 yes and now let's see here here uh I should have two here uh but I need to
10:00:34
refresh so let me just do something like this and let's put this back and now I
10:00:40
have two here so it works fine so we want to do some this kind of
10:00:47
uh this kind of aggregation but inside our code so we can have uh this data
10:00:55
sorry here for every specific day we know how many views we had so uh let's
10:01:03
go to our analytics page and let's see we have views count uh let's remove
10:01:09
those views count and clicks count from here and um I can remove this clicks
10:01:17
count and Views count and basically now we want to do the same thing that we did
10:01:24
here so uh let's go to the first stage first we have match and it's on events
10:01:31
table so uh events collection so let's do something like this let's do a wait
10:01:37
because it's a database query and let's do event and now let's search for Agra
10:01:44
gate and now here as you can see we have uh parms and the first parum is uh our
10:01:52
document sorry not document it's actually pipeline uh but the thing is uh that
10:02:00
this is an array so we just put an array here let's see what's the second part
10:02:06
its options maybe we can skip it for now so now we put here an array and let's
10:02:13
try to do this uh as we have here so first match and then group right so
10:02:20
first match let's try to do this dollar match and let's put pars like this and
10:02:28
maybe I can just uh copy and paste this here let's try I'm going to past this
10:02:34
paste this object and looks like something is wrong okay
10:02:39
it's wrong because uh I cannot put this like this because this is an array so let's start
10:02:47
by doing this as an object and let's put Match and now let's paste this and now
10:02:54
it looks better and let's see I'm going to put
10:02:59
this here this here so it will be formatted properly right and uh now
10:03:07
let's try to add the second one the second stage so then we have group let's
10:03:13
open object a dollar group uh another object with all of those pars that we
10:03:20
will have here and I'm going just to copy this and let's paste this thing
10:03:26
here all right so now uh let's see what result we will get here so let's do
10:03:32
const uh let's put I'm going to put a C4 now and let's just display it here so
10:03:39
let's do um this Json stringify
10:03:45
ABC and uh let's see what we will get here so uh as you can see we get exactly
10:03:55
what we wanted so we have ID of a date and then we have count that's uh perfect
10:04:01
so um let's replace this ABC to and grouped
10:04:08
grouped uh sorry with one p and grouped and this is views group views and we
10:04:15
have this and uh that's correct and now
10:04:20
we can maybe print this better so we have an array of objects where ID is
10:04:26
this uh is the date and then we have count so maybe we can do something like this let's look through this let's do
10:04:33
views sorry group View use let's map through this and for each uh data object
10:04:41
let's call it this way we are going to put a div with uh data or sorry maybe
10:04:49
not let's not name it data object instead let's just grab the ID from here
10:04:55
and the count and here I'm going to put ID which is actually the date we can
10:05:01
rename it here to date uh so I'm going to put date here date and then we will
10:05:09
have our account so now if I save we have this this many views this date this
10:05:16
many views and so on uh it's a little bit easier with SQL but I really like
10:05:22
those stages that you can do with aggregate on uh database all right
10:05:28
but now uh this works and now with this data we can do something like this
10:05:36
so uh let me install this let's go to yarn and let's for re search for
10:05:43
recharts and uh for react so let's do react
10:05:50
recharts I think recharge is only for react yeah so let's just install re
10:05:56
recharge so uh let me copy this and here let's do yarn add and let's do
10:06:02
recharge and now let me go back back to the documentation uh of recharts let's go to
10:06:10
API and we have here bar chart line chart yeah I'm going to use line chart
10:06:17
so um let me maybe let's just copy this and uh we will see if this will just
10:06:25
work out of the box I can remove this let's put this we don't have any data so
10:06:32
let's put here uh show data format and for now I'm just going to copy this and
10:06:39
I'm going to put this summer here outside of my component now let's see if
10:06:44
this will work uh line chart is not defined right so I need to import this
10:06:51
let's do your line chart imported uh I'm doing this because then
10:06:56
it will be automatically imported here as you can see in my IDE so um if it
10:07:03
doesn't do it for you need to manually um just write the Imports on the top
10:07:09
here we have Cartesian cartisian grid cartas Cartesian grid yes then we have x
10:07:17
axis x uh axis and we have y AIS let's
10:07:23
import this one tool tip uh yeah let's import this one this one two tool tip
10:07:31
Legend no I don't need Legend and no for the line let's do line and let's import this one
10:07:39
and now this should work so if I save this should refresh and let's see super
10:07:47
expression must be either be a l or a function right let's see uh here on the
10:07:54
top we have some um data and let's see here we have line
10:08:02
chart I don't see any super expression let's refresh nothing
10:08:07
happened uh something about the legend content maybe let's put this Legend back
10:08:14
here Legend yes and now let's see still
10:08:19
nothing right uh I'm going to do now I'm going to remove some stuff and U let's
10:08:28
see if this will fix anything so I'm going to remove all of it and uh still
10:08:34
we haven't problem cannot read properties of null reading use context right so something with uh
10:08:41
use uh context here uh let me check uh I
10:08:47
think this can be a problem because this is a server component and with those
10:08:53
charts we need to have a client's components and this can be uh the issue
10:08:59
so I'm going to create a new component for this uh let me go to components and
10:09:05
and I'm going to create a chart just
10:09:11
chart.js and let's do on the top use client and let's do export default
10:09:19
function let's do chart and let's do return here and uh
10:09:25
I'm going to put the div and in here I'm going to just grab
10:09:32
all of this line chart stuff let's cut this from here let's put this here and
10:09:39
let's also grab the data that we have here I'm going to cut the data from here
10:09:46
and let's put this to chart so I'm going to put this here data yes and now let's
10:09:54
see we have analytics page and it works now uh let's try to display this chart
10:10:01
component that we created chart from comp components yes so if I save uh we
10:10:08
have a chart yeah so the issue was that it needs to be a client component then
10:10:14
it works all right uh so we have two lines of data and we need only one so
10:10:20
let's go inside chart and we have two data points uile and pile we can have
10:10:28
only one so I will go with uh or we have maybe even three let's see uh no we have
10:10:35
two so uh I'm going to remove uh this p
10:10:40
p f PV and ATM AMT sorry so uh let's do
10:10:47
this this I'm going to select all of those and I'm going to remove or sorry
10:10:54
not like this I'm going to remove it manually so um but let's see if we have
10:11:01
we have page a okay this looks fine so uh I'm going to remove those two uh last
10:11:09
lines from each because this page a page B and so one will be dates for me and uh
10:11:16
for this uh UV we will have number of views so I can remove the rest yes and
10:11:25
the yes so now let's save and we have only one line for UV and so let's remove
10:11:32
this PV because it's not needed yeah and now it looks fine uh now I will try to
10:11:40
put this data inside our component function here so let's put this
10:11:48
here and uh now let's see we have an array uh where name is like page a and
10:11:56
so on so here we want to have actually dates let's change this name uh columns
10:12:03
to uh date so let's put date let's see here do we need to change something yes
10:12:09
x axis needs to be data key date so uh it still works let's try to change one
10:12:17
of those to just a random uh date and let's see if it work
10:12:24
yes it works so now let's see um let's
10:12:29
say that I will get here our data so let's put data here and for me data will
10:12:38
be actually and let's put it the same way we have it here so we will have date and
10:12:46
then we will have other um uh numbers
10:12:51
here so for now we have UV but we can we will have let's say clicks instead so
10:12:59
instead of this UV let's change the name of it to click
10:13:06
and now we also need to Let's remove this BM from here for now we have clicks
10:13:12
and we need to pass that here the data key is clicks and that looks better so we have
10:13:21
number of clicks here uh but now let's see uh we will need to uh change and get
10:13:30
everything from a property here so uh let's the here we will have a data yeah
10:13:40
and let's put this inside where we use this components so we will have we will
10:13:46
not have any data here we will go to analytics page and here we are going to
10:13:52
put our data that will be a super long array just for now we are going to fix
10:13:57
it in a moment and we have clicks here now uh inside chart we are using clicks
10:14:03
here as a data the key but this can be something else so um this can be views
10:14:10
or something else so I'm going to do something like this I'm going to find it
10:14:16
um and I'm going to call it X label label equals um or maybe let's call it X
10:14:23
label key right and to do this I'm going to grab data first uh first uh object of
10:14:32
the array and I want to grab so for example data first will be uh the first
10:14:41
uh object here and I want to get the second key so to do this I'm going to do
10:14:49
uh something like this I'm going to do object object keys of this and then we
10:14:57
will have keys here but I don't want to have both uh date and clicks I want to
10:15:03
have uh only clicks so I can do something like this I can find where the
10:15:10
key is uh not key is not date right and
10:15:16
now I can put this here or maybe I can first print this here so we can see it's
10:15:23
uh clicks yes it's clicks so this is correct now let's use it here so uh it
10:15:30
will be X label key and it still works so that's fine now let's go back to
10:15:38
analytics page and instead of those stuff we want to use
10:15:44
our um let's see group views right so and this will be not clicks this will be
10:15:51
views so uh how we can pass the data now uh let's remove all of this uh but let's
10:16:00
remember the structure it needs to be uh a an array of objects where we have date
10:16:07
and then the number will be views and then will be number of views so let's
10:16:12
remove all of this and if you remember inside this we have an
10:16:20
array uh inside this we will have an array where underscore ID is the date
10:16:26
and count is actually our views so now we want to use our grouped views but we
10:16:33
want to change uh some stuff we want to change uh
10:16:39
the um the key to be um the underscore
10:16:44
ID to be date and the count to be the
10:16:49
count to be views so let's do map and for each object we want to return a new
10:16:58
object so let's do like this let's put new object here and let's do something
10:17:04
like this we want to return for this object to be something like this we want
10:17:09
date to be object underd and we want to have views to be
10:17:16
object. count all right now let's see if this will work and it actually works uh
10:17:25
so it's not the correct order because as you can see first we have fourth then we
10:17:30
have a second and then we have 30 of uh
10:17:36
November so the order is not correct and we are missing few dates so uh we need
10:17:43
to fix some stuff uh so let me see we are doing this
10:17:49
aggregate but as you remember we have some options here maybe we can use those
10:17:55
options to uh add something like uh
10:18:00
order so let's do order and let's see if we can do order by minus because we wanted the
10:18:08
sending and let's do uh underscore ID let's see if we can do something like
10:18:14
this and now it's the correct order first we have November then we have December 2nd December December 4th all
10:18:23
right so that's much better but now we as you can see we have some gaps between
10:18:30
dates uh here we have a second and here we have a fourth of November here in the
10:18:36
middle we should have third but because we didn't have any views and we don't
10:18:42
have it inside our grouped uh grouped uh views result so how we can do this um
10:18:53
well to have it we need to just fill off those gaps with zeros right but how can
10:19:00
we know what are the dates between here so for example here can be one day or
10:19:06
two days and same here we have one day uh we need to uh count it right we need
10:19:13
to go through this we need to go through this group views and uh we need to fill
10:19:20
all of the gaps and uh the problem is uh we need to know how many days is between
10:19:27
um each uh date so let's do this um
10:19:32
first we will do something like this let's change this group views to AET so
10:19:39
we can edit this and um or maybe let's put it back to cons but we will create a
10:19:46
another one we will create something called con and let's do maybe grouped
10:19:54
views without gaps and it will be an empty array and now uh let's do
10:20:01
something like this we want to go uh with each date we want to grab first
10:20:09
the first date so let's do something like this I want to do grouped uh views
10:20:17
and I want to do for each and for it I will get here I can pass a function
10:20:24
where I can use the value and from the value it will be in an object so I want to grab the ID and the count right and
10:20:33
now I will want to do something this we will have the value which was the first
10:20:38
problem of this function and we can also grab our key I think I don't know if we
10:20:45
are going to need this and um but uh sorry it's actually maybe we should call
10:20:51
it index uh but we will see if this uh will
10:20:57
uh be needed all right so we have First Data here so what we want to do uh our
10:21:03
date um date is actually under underscore
10:21:09
ID and what we want to do is check if there are any dates between this date
10:21:16
and the next and the next date is actually um the next date is actually
10:21:24
grouped uh views of index + one uh I'm
10:21:30
going to add question mark and Dot just in case it's not the the last date now
10:21:37
let's see if we have date and we have next date then we know we have a uh a
10:21:44
date that has also a next date in the array and we want to check if there is something in the middle we want to check
10:21:51
if there's something between the date and the next date so um let's do this to do this I'm
10:21:59
going to use date functions there's a nice Library called uh date uh
10:22:07
FNS yes date FNS that I'm going to install let's do yarn add date
10:22:15
FNS and now let's see um it has really big documentation so I'm going to open
10:22:22
it and I think there is something like between and we have many between
10:22:30
functions um so we have this difference in days so let's see difference in days
10:22:38
and as you can see here we are passing two dates date left and date right and
10:22:45
it returns how many days is between so uh uh we can start with this so let's do
10:22:52
here uh let's do const days between
10:22:58
equals and now this function was called difference in the days let's do
10:23:05
deference in days let's import this one from date functions and let's do date
10:23:11
and next date and now let's do if days between is bigger than
10:23:17
zero H then we want to do something this and then we know we need to find some
10:23:23
dates and how can we do this well we can uh if this is for
10:23:30
example three we can take the first date and we can add one date one add one day
10:23:37
and then we can add the second day and then we can add the third day so um
10:23:42
let's use for Loop and let's do something like this let E equals this a
10:23:48
is smaller than I is smaller than the between i++ yes and now we want to do uh
10:23:58
maybe before I will do this let's do console log and let's do something like this uh I'm going to print date next
10:24:07
date and days between so we can see if it actually works for now let's do
10:24:13
inspect here console and we have some warnings here let's see if I
10:24:19
refresh uh sorry it should be inside here because this is a sever component
10:24:25
so uh let's see um I don't see this here uh but
10:24:32
maybe let let's put this inside our uh
10:24:38
client component chart so I'm going to grab this and let's go inside here and
10:24:47
let's put this here so we need to just go through uh data instead data like
10:24:55
this and now let's see if we will have anything here so I'm going to
10:25:02
refresh and I don't see anything okay so we probably never get here let's see
10:25:09
console log here our date and next date let's see if we will get anything here
10:25:16
yes we can see as you can see we have date that is always undefined and next date that is always an object so
10:25:23
something is wrong here first date is uh this so this looks fine to
10:25:30
me and the next date is um this okay but we don't want the whole
10:25:37
object we want to just grab the underscore ID so now let's
10:25:43
see um something is wrong let's see maybe I need to add the question mark
10:25:48
here in case it's empty yes that was the issue so um everything is
10:25:54
undefined so let's see once again let's also maybe try to print our
10:26:01
index so uh let's see here as you can see index seems to work it's 0 one two
10:26:08
and so on and the only thing that is wrong is something with this ID and count so let
10:26:16
me print this first console log and let's do ID and count and I can remove
10:26:22
this for now so let's see ID is always undefined okay maybe instead of this I'm
10:26:29
going to put here a value a value like
10:26:35
this and let's put value here and let's see if this will work now we have some
10:26:40
undefined variabl so it this will not work so I'm going to comment out uh all
10:26:47
of this and now let's see now it renders and we have Let's see we have objects
10:26:55
for those values so this works yeah I forgot that we have now date and Views
10:27:01
and not and not uh those objects right let's put everything back and let's just
10:27:08
change some stuff here so date is just
10:27:13
inside uh date so we can uh just uh
10:27:18
change this to uh to just value value. date value.
10:27:26
date and here for next date we can do just date here and uh now let's see now
10:27:36
let's see if something will change and we have some renders
10:27:41
here and we have some console log so that is better let's remove this thing
10:27:48
this console log and let's see if we have some gaps here so as you can see here we have some let's see I will
10:27:57
refresh and here we have views and so on this is probably from here let's see if
10:28:04
I refresh once again do we have any console logs no we don't so let's try to
10:28:10
put something back here console log if we have date let's put date and next
10:28:18
date all right now let's see and we have date and we have next date so let's see
10:28:25
if we can get even this between this between and now let's see this between
10:28:32
is all is not a number so the problem is that those are strings and we want to
10:28:39
change them to dates so to do this I'm going to do new date for this one and
10:28:47
new date uh for this one and this can be
10:28:53
an issue because uh as you can see it's always minus two because we want to create
10:29:00
dates from this specific format and um to do this we need to create
10:29:08
dates in this format um but there's a function here I
10:29:14
think it's called pars pars the date and let's
10:29:19
see um it's a old function or does it
10:29:25
work let's try with pars ISO and as you can see we can do something like this
10:29:34
and uh this one is invalid because first we need to have the month and then we
10:29:39
get number H the the day number I think so let's see how this ISO looks like and
10:29:47
yeah first it's the format that we want to have so let's use this pars
10:29:54
ISO so uh here instead of new date let's do pars ISO from oops not par par in um
10:30:05
let's do parse IO from date FNS and here
10:30:11
with the second day let's do the same thing I'm going to put this in separate line so it will be easier to read let's
10:30:17
put pars ISO yes and uh now let's go back here and
10:30:24
let's see I'm going to clear and let's do refresh and let's see do we have any
10:30:29
Conant logs yes we have days between two so that that it looks nice so let's get
10:30:36
rid of this and now here uh let's see if this works once again and uh no we don't
10:30:45
have anything here let's see I'm going to refresh once again no nothing here so
10:30:53
let's do console log here only for days in between that is between and let's do
10:31:00
refresh and see this there between four there between okay so now it kind of
10:31:07
works so um now if I maybe remove this we should get here inside if this
10:31:14
between is bigger than zero let's do refresh nothing let's do once again
10:31:20
refresh still nothing so something is wrong let's see I'm going to do this bit
10:31:26
ref um console Lo days between once again and let's see we have days between
10:31:32
that is always minus 2 so uh I think that is actually
10:31:39
correct uh we can change it to be um two positive two by changing the the order
10:31:47
of those dates here so first we will get bigger date and then we will have
10:31:52
smaller date so now if I refresh it will be 222 okay so that is correct now we
10:31:59
can get rid of this and now we have have this final cons log that says the date
10:32:05
the next date and days between so now let's see between the uh um November
10:32:12
13 and the 2nd of December there are two
10:32:17
days uh I think that this is correct because then we have first and then we
10:32:24
have second and let's see here between the 2nd of uh December and the 4th it's two
10:32:32
days yeah it's 48 hours so days between four uh sorry two okay so this is
10:32:39
correct and now for each Gap that we have here so we need to do uh for uh let
10:32:47
I equals z uh smaller than the between
10:32:53
i++ and we want to for each uh number here we want to create a date so let's
10:33:00
do something like this console log and let's put missing date uh and let's do maybe here on the
10:33:09
beginning I'm going to do date uh start will be first date and then console log
10:33:18
date and and the second date so let's do next date and here in between we want to
10:33:25
I'm going to put this here outside of the loop and same with this and after
10:33:31
each uh Gap I'm going to do something like this so we can see uh the the
10:33:38
difference all right so now for each days between I want to um I want to do
10:33:45
something like this I want to do let's do con TMP temporary value or maybe
10:33:52
let's do day uh date between this will be a beer name and what we want to do is
10:34:00
we want to grab this date so let's do pars ISO from the date and we want to
10:34:07
add a day there is a function called add days yes add days import from date FNS
10:34:16
first we are going to put the date because this is the first parm and the second is number of the dates so we just
10:34:23
put one here and let's do console log here and let's put our date between all
10:34:30
right and now let's see let's clear everything let's refresh and uh now let's see
10:34:38
here and the date start 30 of November
10:34:43
date and second and now date between is first December and then we have also
10:34:51
another 1 December so that is a little weird and but here we have a second of
10:34:59
uh December and then we have uh date and fourth and we have date between
10:35:07
third uh third but we have this two times uh this is because we always add
10:35:15
one but instead we should add I so now let's see I'm going to refresh and let's
10:35:21
see now we have something like this um let's do it with the second group uh
10:35:26
second of December fourth and we have first second and then we have third
10:35:33
and I think this is the same problem will be here so first we have the same date and then we have the date between
10:35:41
so basically what we need to do we need to skip always the first day here so
10:35:47
let's do something like this I'm going to start with always one let's do
10:35:53
refresh and uh let's see nothing has been and displayed here so let's do
10:35:58
refresh once again and now we have something so date start 30 of uh
10:36:05
November date end 2nd and the only date between is 1st of December now the
10:36:11
second group date start is 30 of um 30 I think it's the same thing
10:36:19
here yeah uh let's see I'm going to clean everything and let's refresh once
10:36:24
again and to see if something is actually wrong let's see date start we have here
10:36:33
second of December fourth is the end and in the between we have third of uh third
10:36:41
of December so that is correct and here let's see we have first December that is between this and this okay that is
10:36:47
correct so now we want to have used this array to put both uh the date and all
10:36:55
the dates in between and um we will see if we will
10:37:00
have all of the dates we don't need those console logs so I'm going to remove those console
10:37:06
logs and now let's see on the beginning here um I'm going to add the our main
10:37:15
date inside the loop so let's do grouped views without gaps let's add push so we
10:37:20
want to push an object here and the date will be date and we want to put uh for
10:37:29
example clicks or something so let's put X label key and it will be our uh value
10:37:36
of x label key let's just add question mark and Dot in case it's uh empty or
10:37:43
something and now here for every date in between we want to do something uh like
10:37:50
this first we want to this is a date object and we want to format this so
10:37:55
let's go to date FNS and uh we want to go to
10:38:01
documentation and we want to do format to ISO format
10:38:08
ISO uh let's try with this and let's see how this will look like uh this one looks nice and let's
10:38:17
see this thing this thing looks also nice let's use this one so we can uh
10:38:23
crop using uh space and we can grab the first part so let's
10:38:29
see um we have date but between we are adding these but let's also format ISO
10:38:37
let's see how it's called ISO 90 something let's do a format ISO and 9
10:38:45
075 yes let's import this one oops um let's open parenthesis let's scoll close
10:38:53
parenthesis here and uh I think there are no problems here and it will give us this
10:39:00
string and we wanton only the first part so what I'm going to do I'm going to split by space and grab the first part
10:39:09
and now I want to put this uh the same way we did it here so let's do grouped
10:39:16
without gaps let's do push and now let's do object the date will be date between
10:39:24
and the X label key will be zero because
10:39:29
it's empty all right so now we have some issues here for example this uh zero
10:39:37
let's see here we should have a comma and now let's see now I think it works
10:39:45
but it's not used so let's go to here let's see here we have this data let's
10:39:52
use uh we have we call it grouped views without gaps let's rename it to a data
10:40:01
data without gaps I rename it I have renamed this in the all three places at
10:40:08
once now let's use it here data uh without gaps let's save and now as you
10:40:15
can see we have here a gap that says 52
10:40:21
that is wrong or something is wrong here but here we have zero and that is
10:40:27
correct and I want to see how this looks like so let's do
10:40:33
Json stringify and let's do data without gaps and let's see how it looks like so
10:40:40
we have this one 52 then we have first of zero then we have second of two then
10:40:47
we have third of Zer and then we have four of 64 so everything seems to be
10:40:53
correct maybe it was just a cache yes and I think it was because now as you
10:40:58
can see we have one day that is here zero second that is here zero here we have
10:41:04
two and here we have fourth of December
10:41:09
and it's actually today's date so I think this can be uh correct so we have
10:41:17
this small chart now and working and I think the next part
10:41:23
will be to style it a little bit better so we will have uh better colors and
10:41:28
better spacings and so on all right so uh now now I would like to do this uh
10:41:34
graph responsive and make it a little pretter because as you can see it takes
10:41:40
too much space and I don't like this uh blue line here so let's jump to our
10:41:46
components and here we have chart let's open chart and in here first I will get
10:41:52
rid of this views here and it's uh this Legend I think all right and uh yeah now
10:41:59
it's better I just need to refresh so so it will let's go back to P my page and
10:42:05
analytics so we have all of the data and uh now let's see now I would like to
10:42:12
change for example to get rid of those horizontal lines so let's go to cartasi
10:42:19
grid and here I'm going to put uh ver uh
10:42:25
sorry not vertical horizontal horizontal to false and I ALS
10:42:32
so want to Let's remove this and instead let's do just stroke with to uh let's
10:42:40
say five and the stroke color to be
10:42:46
let's say I want light gray so let's do like F5 F5 F5 and now let's see uh let's
10:42:55
refresh let's go to my page and back to analytics yeah this looks nice and and
10:43:02
uh now let's see uh now for those uh uh
10:43:07
like y axis and x axis I want to uh
10:43:12
remove those lines here those gray lines and add some more margin and so on so
10:43:21
let's start with uh y axis and in here I want to do something like this um I want
10:43:29
to remove this line so let's do axis line to false and I want to uh remove
10:43:35
those tck tick lines so let's do tick line to false and uh let's make that
10:43:42
those ticks a little bit bigger so let's do tick uh let's do uh sorry not bigger
10:43:47
but let's do some more margin here so let's do tick margin to 10 and again I need to go to my page and
10:43:56
analytics yes so uh as you can see now we don't have this horizontal line here
10:44:03
on x axis and um now let's go to this
10:44:08
vertical uh y AIS so let's go here and
10:44:14
in here I want to do something similar so let's do axis line to false and tick
10:44:22
line to false and uh let's do tick margin to 10 and uh let's see let's do
10:44:30
refresh and let's go back here yeah that looks much better and now I would like
10:44:37
to uh add some different color I don't want this dark gray I want lighter gray
10:44:44
for both of those so let's do tick and here we just put uh an object and it
10:44:52
will be fill oops not full fill of uh let's say um a AA and let's do the same
10:45:01
thing for for y AIS here and as you can see now it's a little uh lighter here
10:45:08
lighter color and it looks better I would say and um maybe we could Mo do
10:45:17
those lines here those vertical lines a little um more narrow so uh here we
10:45:25
could do like grid stroke with to two and now we have something like this I no
10:45:31
we can change it to your taste if you want but now uh let's see uh now I want
10:45:36
to change this blue color to uh like this blue this green to this blue all
10:45:44
right so we have this line here and here we have type here we have stroke color
10:45:52
so I don't know let's do maybe 09 F and it will be bluish yeah that's uh much
10:45:59
better but uh May maybe it would be nicer to make to make it more uh bold so
10:46:06
um we have stroke here but there's also something called stroke withi and here I
10:46:13
will just put maybe four and now it's more you know bold so I think it looks
10:46:20
better right uh so this looks nice and now I want to do this more um more
10:46:28
responsive so let's put the here uh respon save uh respon save container yes
10:46:39
let's import this one the closing should go here after line chart let's ident
10:46:45
here to make it like this and here we need to pass wave and for us the wave
10:46:52
will be uh just 100% so we can put it like this
10:46:57
100% And for half let's maybe put 200 and now it looks like this uh looks
10:47:04
really nice let's see we can make it more narrow if we want so yeah now it's
10:47:10
responsive uh now it will be nice to put some um some header here on the top so
10:47:17
let's go back to our analytics page here we have our first chart let's do maybe
10:47:23
an H2 here saying views let's add some class name and I want this text to be XL
10:47:31
let's see yeah we have views let's add some margin so let's do margin bottom of
10:47:37
at least four let's maybe do six so we have some more spacing and um maybe
10:47:44
let's make it centered uh so let's do text Center so we have this here and yeah I think it
10:47:52
looks nice uh I'm going to add another one here underneath for and clicks so
10:47:58
let's do clicks and we want to have more margin from the top here so let's do
10:48:04
margin top of at least eight yeah I think this will work maybe we can make
10:48:09
it even bigger like 12 yeah so we have views here and here we will have clicks
10:48:15
so uh this uh looks nice but now for the
10:48:20
clicks I want to have like list of all of those links here and how many clicks
10:48:28
we have so first we need to fetch our our uh fetch our fetch our
10:48:35
clicks and maybe we can do some aggregate like here before we go there
10:48:42
yeah I see in this aggregate I forgot to change this uh David that is uh
10:48:47
hardcoded let's take it from page and let's do URI I think it's URI let's make
10:48:54
sure yeah it's u i here as we can see right so let's just make sure if I go to
10:49:00
my page and Analytics yeah it works fine now let's uh fetch our clicks so um if we go to events in
10:49:09
our database and we should have some uh let's see type view type view let's go
10:49:16
to next page view here we have a click let's see where where was it here we
10:49:22
have click but no URL let's go to next next maybe somewhere here yeah here we
10:49:29
have a click so that is nice and we have URL so that is really cool uh we have
10:49:38
URL or URI uh but uh the problem is um
10:49:45
that for those events let's go to event model uh we have URI that can be either
10:49:52
a page U or a link and type of event click or view but if we have for example
10:49:58
a link like for example this font awesome link We Know know that that link has been clicked but we don't know on
10:50:04
what profile so uh to fix it I'm going to add another uh property here called
10:50:11
uh page and this will be for example um David so the name of the
10:50:19
profile and uh this will rename and this will uh remain the
10:50:25
same um so let's go back to our page so
10:50:31
to make sure that this will be filled let's go to let's see up we have website
10:50:38
and but that's not here we have page URI page and here we are printing our
10:50:46
profiles so uh let's see here we are uh sending uh click events we are sending
10:50:56
URL H but we are not sending uh profile so maybe we can add it here uh so let's
10:51:03
do something like this let's do here plus let's add end and let's add the uh
10:51:10
page equals and here let's add plus and we can do page. like this and that should work for
10:51:19
the uh link clicks now let's go to the page uh View and the page view should be
10:51:28
somewhere here yes here we create an event with this URI uh that's good and
10:51:37
now let's do the same uh so we will add a page and Page will be actually our
10:51:44
page URI and we could also do just URI because this will be the same uh I
10:51:50
forgot about the comma okay but now if I go here and I refresh and I go to the
10:51:58
last page of events I should see a a
10:52:04
view uh view uh sorry uh view event but
10:52:09
first I need to restart my environment so we will have this new database
10:52:14
properties and now if I refresh this page and I will uh refresh here my
10:52:21
database we should get a new uh view view event on the end of this collection
10:52:30
so somewhere here let's go to the bottom and we have this type view page David U
10:52:38
David and now if I for example click on this link let's see if I will get an an
10:52:45
event let's search for event where page is uh dbid uh let's apply uh we have only view
10:52:55
maybe that's because I have this uh uh blocker so I'm going to also I'm I'm
10:53:01
going to disable per I'm going to disable it uh for now so this was this disable hyperlink aiting and now when I
10:53:11
if I click on the link I should get a a click event let's see view view no no no
10:53:19
click events I'm going to just use Safari where I don't have this uh uh
10:53:25
enabled and if I click just here uh I should be the click should be triggered
10:53:31
so let's hit apply and we have view view view view no click so that is
10:53:38
weird uh let's see yeah I forgot also to add it so it actually worked the problem
10:53:46
is I added this as a here property but it's not handled in the back end on API
10:53:53
click so let's go to so it was working even in my Google Chrome the problem
10:53:59
here was that inside II um click route we were handling this
10:54:06
URL but not our new page property so let's go here and here let's also grab
10:54:13
our page equals we need to um let's see if it was uh encoded no only URL is
10:54:22
encoded the U of the page is not encoded so we can just do URL search BS get page
10:54:29
and this should work and now let's put this here we can just do page and this should be saved so now
10:54:37
let's try again to click a page click a link sorry and uh now let's go back here
10:54:45
apply and let's go to the bottom and we have a click here so uh and with page
10:54:51
David and URI of this so now it works we can go to back to analytics page and we
10:54:57
can fetch all of the clicks where the page is my page so to do this uh I'm
10:55:05
going to do something like this I'm going to well first I want to grab all
10:55:11
of my links and all of my links are already inside uh page so I think it was
10:55:18
called just links so if I go to pages I should have one page here yeah and we
10:55:25
have links that's just an object so let's start with this um let let's put
10:55:32
click we have clicks here let's look through all of my page links and I want
10:55:37
to map for each link let's do parenthesis let's put a div and I want
10:55:44
to print uh well the name of the link so let's do link title uh or uh no title
10:55:54
and uh maybe I'm going to put it inside like H3 and then I will have a part paragraph
10:56:01
with link subtitle or no uh no
10:56:08
description something like this and now let's see what uh how this will look
10:56:13
like so if I refresh my favorite react library and so on yeah so it looks good
10:56:21
now I would like to do more like of a square so something like uh something
10:56:27
like this so I will have some separate ation maybe I would just add lines
10:56:33
between those so uh here for this da for each link I'm going to add uh a border
10:56:40
top and the Border color will be of gray
10:56:46
let's say um 200 so now we have lines here let's also add some adding on the
10:56:54
top and the bottom of four and uh now let's see and now it looks better better
10:57:01
and uh yes now for let's fix maybe the
10:57:07
links and and maybe we can put Clicks in a separate box so we have those section
10:57:14
box let's add here another uh section box and I'm going to move the clicks to
10:57:22
this second box so now we have something like this maybe too much Bard margin
10:57:28
from the top so let's do margin top of just uh let's just remove margin top and
10:57:36
yeah I think it looks fine and now we have those links maybe we can put a link
10:57:46
icon on the beginning of each so um let's see first we will have this uh da
10:57:53
for each a link I'm going to put flex here and then I'm going to do div for an
10:58:00
icon they have four texts uh so I'm going to put those texts here and the
10:58:05
last part the last column will be for analytics something like this so we have
10:58:13
something like this now let's put the icon here so let's do font uh awesome
10:58:19
icon and the icon will be uh I think it was fa a link fa a link yes uh let's do
10:58:28
like this so we have an icon here let's also change here to items Center and
10:58:36
here for the icon I want that text to be primary text primary I don't know if we
10:58:43
have defined this as primary maybe we didn't so let's do just blue
10:58:48
500 and now I want also to have some Gap here so let's do gap of four and this
10:58:55
second column should grow as much as possible with the texts so so yeah now
10:59:01
we have something like this maybe let's do more of a gap let's do six so we have
10:59:06
some spacing uh now we have those icons here but I want to make them uh well
10:59:13
bigger so and also let's add some padding left of four for the icons yeah
10:59:20
I think it looks uh better so now we want to fill the information about the
10:59:26
analytics maybe let's also change this those descriptions so uh for those
10:59:33
descriptions I'm going to add some class names like text Gray let's do I don't
10:59:39
know 500 and text should be smaller yeah so we have something like this and
10:59:44
underneath I also want to add the link and so here I'm going to put link and I
10:59:52
think it's just let's see how we can print the link it's link URL so let's do
10:59:59
link URL all and same thing will go here we just need to add also Target and
11:00:07
blank so it will be opened in a new tab and then we have something like this and
11:00:13
this URL should be a smaller text so let's add some class names here text
11:00:19
smaller let's make it blue text uh blue let's do um I don't know 400 or 500
11:00:27
let's do 400 so we have something like this maybe let's make it even smaller
11:00:32
let's do XS so we have a super small
11:00:38
links and this looks fine I would say
11:00:43
now um maybe I can make those a little darker so let's do maybe
11:00:49
700 yeah and uh now what I want to do is
11:00:55
for analytics to show Clicks today uh in instead of showing graphs
11:01:01
you can also do graphs by doing those aggregations I want to show analytics uh
11:01:08
for clicks today or maybe let's do aggregation so we have small graphs for
11:01:16
uh analytics or maybe let's make it different so you guys can see different
11:01:22
ways of uh showing stats so uh what we
11:01:27
want to have here is number of of uh clicks for um for today and number of
11:01:36
Clicks in total so to do this I'm going to just uh fetch all of the clicks so
11:01:42
let's do con uh clicks and let's do here a wait and
11:01:48
let's do event event I want to find all
11:01:54
I want to find all where the page is my page URI and the well the rest doesn't really
11:02:01
matter uh actually it does the type of the event should be click and that's it
11:02:08
now uh let's see how clicks looks like so I'm going to put here Json and
11:02:15
stringify clicks and now let's see what we get so we have like one click I think
11:02:23
something like this or maybe two clicks it doesn't really matter the data looks fine so now we can just use the clicks
11:02:31
um here inside analytics so uh let's say that we will have two divs for analytics
11:02:38
we will have today and all time all time so let's put uh here here and we will
11:02:47
have today and all time and uh or maybe we can have it in one da so I can remove
11:02:54
this and I will make one div like this let's add breake line something like
11:02:59
this yeah this will work so uh for today how can I know how many clicks we have
11:03:06
today so I can check um maybe first let's do all time because it will be a
11:03:11
little bit easier all time clicks number for this specific link so I go to clicks
11:03:20
and I want to H filter and I want to know where the
11:03:25
click uh URI I think it was is the same as link
11:03:31
and then I want the length length of this uh array so now let's see uh
11:03:38
something is wrong we don't have L it's a instead is link and uh now let's see something is
11:03:46
wrong let's refresh yeah so we have only uh only this one has been clicked and um
11:03:53
this is because we introduced this new page um page property inside events so
11:04:00
the older clicks don't uh make any difference all right um so now let's see
11:04:08
uh we have this all time seems to work uh so now let's fix uh clicks for today
11:04:16
this will be same as uh same as for all time except we want to also filter where
11:04:23
the date is today so I want to add here and uh and I I want to do that click uh
11:04:32
created Created at is the same uh as uh
11:04:38
the day is the same as today right so first I want to convert this date to um
11:04:47
I want to convert this date to uh from this weird timestamps that we have
11:04:53
inside the database I can show you uh let's see events uh as you can see we
11:04:58
have a date and time with time time zone time zone I want to convert it to just
11:05:04
this ISO format so first I'm going to put maybe to make it uh easier to read
11:05:11
I'm going to put it uh like this and now uh we had this uh function called The
11:05:20
Format ISO uh 9075 so let's use this one
11:05:26
and here let's put our uh click and created uh at and um now we want to make
11:05:35
sure that it's the same as today's date so we can just do format ISO and just
11:05:42
new date and this will be today's date so now let's see if this will work and
11:05:49
it doesn't seems to work because we should have one here so um let's see why
11:05:56
so I'm going to create another dat here and I'm going to put all of the
11:06:04
clicks um uh clicks for those specific uh I'm going to grab all of the clicks
11:06:11
for this specific URL and I'm going to uh display uh each click uh created at
11:06:19
to see the time stamps so this will not work because we need to join them
11:06:25
together because this was an array I'm going to use comma and now let's see we
11:06:30
have Wednesday uh 6th of November yes that's today for me and um looks fine
11:06:39
now let's try to change this to uh instead of doing let's see I'm going to
11:06:46
put filter here and map here let's put join here and the closing here now let's
11:06:53
put here date uh sorry format ISO format ISO
11:06:58
9075 five so let's see now yeah now okay so it doesn't give H just the date it
11:07:06
gives uh also the time so that is uh the problem so let's see if we have a
11:07:13
function that uh uh returns date only date only no can we do only date no
11:07:20
there's no such thing so we need to make it manually we will just split by using
11:07:26
this space and we will take the first part so we can do some this uh split by
11:07:32
space and take the first part so now we have only date and this is the same thing we need to do uh with um the one
11:07:41
thing that didn't work here so here we have this filter we filter by checking
11:07:47
two things the first is the URL needs to be the same as the click URL and here we
11:07:55
check that uh the format of uh this Cate
11:08:00
that sorry the date will be the same as today's date H but I think uh there is a
11:08:07
simpler way of doing this maybe there's a function saying today yeah there is a function called is today so let's get
11:08:14
rid of this and um and here let's add is
11:08:19
today and let's put let's import this one and let's put click created at yeah
11:08:25
so there is there was a simple way of doing this we can remove this this is not needed anymore and now we have today
11:08:33
one all time one so yeah now it works so now we have a nice uh let's go to my
11:08:40
page and back to analytics to refresh now we have a nice looking uh data and
11:08:47
graph here and we have clicks here and everything seems to work nicely let me
11:08:54
just refresh here and it seems like we are getting in all the data here we
11:09:00
don't get any sixth of uh uh December but we should let me just refresh once
11:09:06
again here so we'll get events yeah now now we get event for 6th of November so
11:09:13
that is nice uh all right so we get nice views here and we get clicks and maybe I
11:09:20
will style it a little bit so for today and all time uh I will do like uh uh I
11:09:28
will make it a little bit uh prettier so um let's make this like uh the labels
11:09:36
should be more grayish so let's cut this let's put a span the span with some
11:09:42
class names it will say today and let's do text Gray uh maybe
11:09:49
500 and uh yeah this looks fine and now span with some whoops let's go back span
11:09:57
with some class names for the number and the number is uh
11:10:03
here and uh here I'm going to do text large for the first uh
11:10:10
number and maybe I will replace those spans with this so we have different
11:10:18
lines yes and for the whole thing let's make it Center text Center so we will
11:10:25
have a today and all time here and today and let's do the same thing with all
11:10:31
time so we don't need this brake line Let's uh let me just copy those things
11:10:38
so we will have here uh all time and here we need to closing div for the
11:10:46
number uh this one all right so this looks nicer um maybe I want to add like clicks
11:10:56
today and clicks uh let's put total and yeah this looks nice
11:11:05
and let's change this large to to XL let's see yes so those zeros are bigger
11:11:12
now uh for those uh let's see clicks today and Clicks in total I want this to
11:11:19
be smaller let's do maybe Xs and now let's see yes and I want
11:11:25
those to be also uppercase so let's the uppercase and bold font
11:11:32
bold and let's make it more grayish so I'm going to do 300 maybe 400 yeah so now it looks like
11:11:42
this and now I'm going to put this into separate uh columns so we have like one
11:11:47
column here but I'm going to add another diff with text
11:11:53
Center and I'm going to grab and put this here so now let's see clicks to
11:12:01
clicks today clicks total yeah that looks better now uh those should be
11:12:07
under under the number so let's grab and let's put it under here and I don't want
11:12:14
to have those colons here so now let's see yeah and uh let's make the numbers
11:12:21
even bigger so uh let's see we have two
11:12:26
Exel let's do like uh three fre XL and fre XL here yes yes that looks nice
11:12:35
click today clicks uh total uh now uh let's see I want to uh
11:12:44
put those um I would like maybe to put a line here or something like this or put
11:12:50
this inside boxes I think boxes will look better so I'm going to put another
11:12:56
Dave here uh with some class names so so let's do border and let's put radius uh
11:13:03
sorry border how is it I think it's rounded yeah it's rounded medium and
11:13:08
let's put clicks and the label here inside so now we have something like this and let's also add padding of two
11:13:17
something like this yeah this looks nice and let's do the same thing for here for
11:13:23
the second uh for this clicks total so let's put the number and the label in
11:13:29
inside this new div and this looks really nice maybe we can decrease the
11:13:35
Gap here so let's do just gap of four yeah I think it looks uh
11:13:42
fine uh yeah I think it works really nicely so um let's go back to my page
11:13:50
and analytics yeah uh I think it works nice one thing uh that I need to fix
11:13:56
that I noticed now here we have first of November 2 third fourth and here we have
11:14:02
second of November and then we have third fourth and fifth and sixth so uh
11:14:08
it looks like we have some dupes we have some duplicates here that we need to
11:14:14
take care of so uh let's go to chart
11:14:19
component and I'm going to print the data so let's do data without gaps that
11:14:25
we are using but I'm going to do Json string if I on this thing so let's put
11:14:31
this like this and now let's see um we have first second third fourth and then
11:14:40
we have second of November third of November fourth let's see here yeah we
11:14:47
get uh dupes so something is wrong let's see uh and to see what is wrong I'm
11:14:54
going to do console log um on this so I'm going to put console log here on a
11:15:03
data without gaps and let's see how it looks like let's go inside here console
11:15:09
and we have array of nine and let's see um the order seems to be wrong so let's
11:15:17
see data with without gaps uh let's also see how the data looks like um so let's
11:15:25
do maybe not data because it can be or let's do data as well so let's do data
11:15:32
and now let's see on the bottom here so U well it looks like well I'm going to
11:15:40
put this as an object so we will know which one is which one so uh let's see
11:15:45
for data we have four um and we have second six and 30th
11:15:53
and uh fourth of uh December so the problem is that this is not in order
11:16:00
um so we need to First sort the data so
11:16:05
uh to First sort the data here maybe we can do something like this we can do
11:16:12
sort and with this sort we can do like an arrow function with uh A and B and we
11:16:22
just check that um a created uh create
11:16:27
sorry not created that because we have date here so we just check that date is
11:16:33
bigger than b date right and now let's see and let's see uh I want to see if
11:16:42
this will work so we need to assign it back to data equals data and sort so
11:16:49
let's grab this let's put data here now let's see and what we will get inside
11:16:54
data so data uh four six and and uh no it still
11:17:01
doesn't work yeah I actually I think we just need to do minus here because it
11:17:09
should return a difference let's see and uh now if I go to data four six no it
11:17:17
doesn't work with the dates so I need to probably um transform those dates to uh
11:17:26
to numbers or something like this but there is maybe an easier way of doing
11:17:31
this and this is by going to where we are using this so for this uh analytics
11:17:38
page and here we are fetching this and we should be uh doing this uh order but
11:17:46
looks like it doesn't work uh just to be sure I'm going to do console log on
11:17:52
those grouped views and uh let's see what we'll have four six and then we
11:17:59
have uh November and here back to December so this doesn't work so so I
11:18:07
think we cannot put it this way as an parm here instead we need to put another
11:18:14
step in this aggregation so let's add a comma here and here I'm going to put
11:18:21
just sort and uh well here I will just put uh H we want to sort by ID my one so
11:18:29
I think it should be descending now uh let's see we have a sixth and fourth
11:18:36
second yeah H that's correct let's do this as a positive number so it will be
11:18:42
uh ascending yes so we have November December December uh 2nd fourth yeah so
11:18:48
now it seems to work I can remove this console log now let's see how it looks
11:18:54
for our views here so still we have still some problems here or do we let's
11:19:01
see uh November uh 30 of November then we have December 1st 2 third fourth
11:19:10
fifth and then we have sixth of November so I think now it looks and works fine
11:19:17
so the problem was only that it wasn't uh sorting properly from the database
11:19:23
now this seems to work fine so I'm going to remove this conso log from this chart component
11:19:29
right and if I refresh it should still work fine yes and every time I refresh I
11:19:36
get the same graph or line chart result so this looks really nice uh now uh
11:19:44
let's maybe change one click to all their date so we will be sure that this
11:19:50
works let's change uh page to uh my page
11:19:56
and uh let's see for click clicks so uh let's see we have view here let's add
11:20:03
the type of uh click and we should have only one here let's duplicate uh by
11:20:11
changing only one date to uh or maybe the both of those dates to
11:20:18
yesterday and now let's see now we should have two clicks here in total but
11:20:23
one click today so that is uh correct all right so this this uh worked and if
11:20:31
I click on here we should have another uh clicked yeah as you can see we have
11:20:36
click one here so now everything seems to work and uh we have completed my page
11:20:43
and analytics we have everything I wanted one thing that I would like to add would be maybe to make it responsive
11:20:53
so uh for example uh this sidebar should be uh hidden for mobiles and this is
11:21:01
what I'm going to do uh next all right so to make this uh sidebar hidden let's
Fixing bugs & deployment
11:21:08
go to uh our template right so we need to go to up and we have account
11:21:15
analytics let's go to template and let's see we have this um
11:21:21
aside here and we have Flex so uh let's see we have flex and outside inside so
11:21:29
let's do that this Flex will be only for a medium and bigger screens so uh now we
11:21:36
have this aside but if I make it like this you can see that we have this aside
11:21:41
on the top so uh that's better now let's also do uh that uh well let's see we
11:21:49
have this aside here let's change that uh well um on default by default so for
11:21:58
for mobiles it needs to be um let's say it will be uh display fixed so it will
11:22:06
be fixed and it will be left of zero and uh top of zero and bottom of zero so it
11:22:17
will stretch from top to the bottom and let's make that index uh of 20 so it
11:22:24
will be above but this will be only for a small scre by default it will be block
11:22:31
um sorry or maybe static I should place here instead of fix so for medium
11:22:37
screens static so now it's above but if I make it like this then it's not above
11:22:44
yeah so now um this uh Works uh but now I need to have a some
11:22:52
kind of state or something like this so I can toggle and this
11:22:59
sidebar and um so to make a toggle I'm
11:23:04
going to put uh button here uh somewhere here maybe to toggle this sidebar so for
11:23:12
example in here we will have a togger toggle or maybe we can put this toggle
11:23:18
here so um here I'm going to put uh
11:23:23
let's put the button with an icon so let's put font awesome icon and I want
11:23:30
those uh lines F A lines I think it was
11:23:36
lines and grip lines um let's search for
11:23:42
this one so let's search for lines uh we have two lines here and um let's uh
11:23:50
search for menu we have bars okay so let's use fa bars fa bars yes and now
11:23:59
let's see so uh now we have those bars here and this button should be visible
11:24:06
only for small screens so let's do uh inline block by default but for medium
11:24:13
screens it will be hidden uh so now it's hidden but if I make it this big then it should be un
11:24:22
behind this aside so let's make this aside hidden for a second
11:24:28
so we can see this button yeah it's here let's put this button inside a separate
11:24:35
div so we can add some spacing uh we have div let's put those
11:24:41
class names on those div to make it hidden or visible and let's add some
11:24:46
padding left of at least four so we'll have some spacing I think we need to do
11:24:52
more like eight and same on the top and the bottom let's do like eight and and
11:24:58
maybe eight is too much so let's do padding top of four and padding bottom
11:25:05
of four so we have something like this maybe that's still too much for the Ping bottom let's remove it and for the
11:25:13
botton let's make it more like a button so let's add some class names let's put a border and let's put padding of four
11:25:21
and let's make it little bit rounded uh rounded let's do medium now let's see
11:25:27
how it looks like yeah I think it looks fine I want it to make uh to be white so
11:25:33
let's do background white and I'm going to remove the border and instead I'm
11:25:39
going to add Shadow and I'm going to add a span here to do menu uh label so we
11:25:47
have menu now we want to have some spacing so let's do Flex item Center and
11:25:52
let's do gap of two and maybe instead of menu it will have a
11:25:58
open navigation open navigation yes and now
11:26:04
what I want to do is that when we click on it and let's also add the cursor
11:26:10
pointer just in case and when we click on it it should open this uh this let's
11:26:17
see uh this aside right so to do this uh I will
11:26:23
do um we would need to have state for this um or we can try with doing this
11:26:31
with uh check boxes so I can show you how this can work with u uh checkboxes
11:26:39
so let's see H we have this button here so let's do uh uh label instead of a
11:26:47
button instead of a button and I'm going to put an input of
11:26:53
type checkbox next to it and for this input type checkbox I'm going to do uh
11:27:02
ID of um I'm going to do nav nav
11:27:07
checkbox and for this label I'm going to add four nav checkbox all right now this
11:27:14
will toggle this uh chbox cool right uh I'm going also to add events pointer
11:27:22
events nonone so it will not select those uh this uh sorry not P pointer
11:27:28
events known let's remove it uh let's see yeah it still works now I want to do
11:27:36
that uh as you can see we can click and unclick this uh checkbox using this
11:27:42
button now what I can do is uh I'm going to remove this da oops H but before I
11:27:49
will do this I'm going to uh put those uh classes into the
11:27:55
button uh so let's put here and instead of those paddings I'm going to change
11:28:00
them to margins so we don't need this uh div and what this will do is it will put
11:28:08
the label and the input next to the aside as like uh uh it those will be the
11:28:14
same uh children to the same main element here so that is nice the problem
11:28:20
is only with this label it's super long um but we can change it uh we have Flex
11:28:28
here that we need to change to inline flex and we don't need this inline block
11:28:35
because for medium screens it will be hidden yeah now everything still works
11:28:41
and if it's a bigger screen we should have an aside but for now it's
11:28:47
hidden and right but now let's uh focus on this input I'm going to do something
11:28:54
like this I'm going to my globals CSS and and I'm going to do something like
11:28:59
this we had this input of ID navigation checkbox and what I want to do is when
11:29:07
this is checked and there is an aside next to it I'm going to change uh aside
11:29:14
to display and block all right and now let's see if I toggle this as you can
11:29:22
see it toggles uh it toggles this aside so that is nice
11:29:28
uh another thing that we can do is we can do like uh left uh oops uh left uh
11:29:35
zero uh but by default I can do that our side will have like uh minus left of 100
11:29:45
uh 100% so let's do now let's see now this this doesn't seems to work uh - 100
11:29:55
let's do minus uh 4 48 let's see now no
11:30:00
it should be fixed uh outside of the screen uh let's do just left 48 and
11:30:07
let's see no maybe it's because it's hidden now let's see yeah now we see
11:30:12
this H it jumps back and forth let's do minus on this left let's refresh if I
11:30:19
toggle it then it shows we can add the uh transition to make it more uh smooth
11:30:27
so let's do transition all and now let's see if I toggle here you can see that it
11:30:33
toggles nicely back and forth and if the screen is bigger well then it looks like
11:30:38
this and the check bu should be hidden for the bigger screens so let's put in
11:30:44
put uh let's add class name let's do medium hidden we don't need this and
11:30:52
yeah now it looks better now it's see for mobes this inputs can be hdden then
11:30:58
for all of the screens we don't need to to see it so we can toggle but as you
11:31:03
can see uh the problem is that when uh it's open when this is open we cannot
11:31:12
click this button well uh we can fix it by doing that when when this is open we
11:31:20
can also show uh the some backdrop that we can click on so let's do also and div
11:31:29
with back drop or maybe yeah let's do back drop and it will be fixed as well
11:31:37
with inser zero with background black of
11:31:42
90% And it should take all the space yes let's add that index of 10 so it will be
11:31:49
above everything let's maybe do just 80% so we will have more
11:31:56
transparency and now this should be uh hidden by default uh but I want this to be visible
11:32:04
when we toggle this checkbox so let's do go to globals and here let's do the same
11:32:12
so like this but instead I'm going to do backdrop and let's do display of U block
11:32:21
and now let's see if I toggle yeah we can see that we have this backdrop now
11:32:27
what I want to do is that this backdrop let's go back to template this uh
11:32:33
backdrop will also be a label to this checkbox for navigation checkbox and uh
11:32:41
now let's see if I click on it it will close this uh aside so that is really
11:32:47
nice all right so we have a navigation for mobiles let's see how it looks like
11:32:54
it looks fine uh maybe for for those clicks we could uh uh make it into separate lines
11:33:03
so uh but let's first check this my page how it looks like and I think it looks
11:33:11
well almost fine there's only some small things to be fixed so let's do this
11:33:17
first let's go to clicks so let's go to
11:33:22
analytics page and let's scroll here to the clicks
11:33:28
and we have this Flex let's change the flex to be only on medium screens and if
11:33:35
it's not medium screen uh it will look like this so uh uh not perfect but not
11:33:42
that bad um it looks it looks fine uh I
11:33:47
would like to change this uh those borders to add some spacing here uh so
11:33:55
let's go to here we have clicks today here we have those border border for the
11:34:02
second one I'm going to add margin top of one so now we have some spacing but
11:34:07
by uh for bigger screens medium screens let's do margin top uh margin top of
11:34:13
zero so this will be only for small screens and let's do the same thing for
11:34:20
the one above so here we have the second box and let's add a little bit of margin
11:34:26
yeah and I think this looks much nicer so now this is readable and it looks
11:34:33
fine now let's go to my page and uh here we need to fix some stuff as well so
11:34:40
let's go to let's see inside the up we will go to uh account page and now let's
11:34:49
scroll we have those three forms so we have this four page settings I think
11:34:56
this one looks fine then we have buttons and then we have links we need to fix both buttons and links so let's go to
11:35:03
buttons and now let's see well what we need to fix is this part so here we have
11:35:10
this Loop and I want to get the rid of this Flex to be only for medium screens
11:35:17
and up um so let's refresh to see H well
11:35:24
almost uh it didn't work as I wanted it it's not this Flex probably um let's refresh here and let's
11:35:33
see we have buttons yeah then we have react sortable and then we have Flex
11:35:39
here that I want to change only for medium screens let's refresh and uh yeah
11:35:45
that that looks better um would be nicer to put those
11:35:51
trash icons into same uh into the same part that we have a input inside so I'm
11:36:00
going to put a DA here and let's put this those inputs and the B and the
11:36:05
buttons inside and uh now let's see we have here
11:36:10
we have a font awesome let's see how this looks like on bigger screens well
11:36:17
we need to fix that this the second div should grow so let's do class name uh
11:36:23
grow and let's do grow let's see no this didn't do anything maybe we need to add
11:36:29
grow here let's see yes that's better and now for the for this one let's put
11:36:36
flex here so maybe the buttons will go next to those yes and this looks fine
11:36:43
and now the grow maybe shouldn't be here and instead it should go to here so
11:36:48
let's do grow here and let's remove the grow from here let's refresh and let's
11:36:55
see this looks fine for for mobiles yes it looks fine and it looks fine for
11:37:00
desktop too so I think we are done here now let's go to Links uh form page links
11:37:08
form and we need to do something similar here so let's see we have this uh loop
11:37:16
somewhere here and uh let's see here we
11:37:21
have a flex for each link let's change it that this will be only for medium
11:37:27
screens and I think now it looks better we have a lot of stuff going on here but
11:37:34
this is because we have a lot of fields for we have a lot of inputs for each link but that is fine what I want to fix
11:37:42
is only this button to be the same WID of the the same WID as the button above
11:37:47
so let's see we have label uh title subtitle um let's search for remove this
11:37:55
link or it's a actually here here we have the button and let's add class of block and
11:38:04
I think this will and let's also do wi of full so it will have a WID of 100%
11:38:12
and let's do text Center here and this will not affect this thing because um
11:38:20
and block doesn't do anything because we have this uh Flex here and and we have
11:38:27
item Center but we need to add justify Center as well so now it's
11:38:33
centered and here is centered as well this looks fine for the links and this
11:38:39
looks fine for the links too all right so um I think we are done here this
11:38:46
looks fine and this looks fine as well
11:38:51
so yeah everything seems to work on mobiles now we can have a mobile phones
11:38:58
and we can still use the service same thing for the pages and the profiles are
11:39:04
the pages are responsive so they look fine for both mobiles and desktops all
11:39:11
right so now I would like to deploy this app so um before we will do this I will
11:39:17
go through it and I will try to fix some bags and warnings so we can get rid of
11:39:22
them and then we can deploy it to let's say to veral right so uh now let's start
11:39:30
with the homepage here as you can see this input is uh broken it doesn't look
11:39:36
good uh so I will go to let's see uh let's go to up and then we have website
11:39:44
group and then we have this a page here and here we have our hero form let's
11:39:50
open this one and let's see here we have our form with input and so on so the
11:39:58
first problem is this button it's uh well the text is splitted into several
11:40:04
lines so let's do white space uh no wrap
11:40:09
and let's see if this will uh now be fixed yes it is now this input should be
11:40:15
white here so let's go to this input and let's add some class names here let's do
11:40:21
background white let's do margin bottom of zero because I think
11:40:27
we had some extra margin bottom here yes we do so let's fix this let me reload to
11:40:33
see how it looks right now and this looks like this white
11:40:38
background didn't work let's see background white and no it didn't work
11:40:44
let me put maybe this here and this here and now let's try to inspect this thing
11:40:53
let's see here we have this input and and let's see um we are adding
11:41:00
those class names here background white and as you can see those are overwritten
11:41:08
by uh this definition of a default input type text that we have inside the
11:41:15
globals so um to fix it I'm going to put some definitions into style uh style and
11:41:25
um let's do do something like this um let's do background color of uh
11:41:33
white white and let's see if this will help yes it did now let's fix this um
11:41:42
margin bottom so let's do margin bottom of zero and now let's see and it helped
11:41:49
now it's a little bit of margin on the top and the bottom so uh now maybe we can get rid of this background white
11:41:57
this and probably this padding as well it doesn't do anything yes that's
11:42:03
correct now we can maybe add background white to this form so everything inside
11:42:10
will be white yes and it is and it looks
11:42:16
fine maybe we could get rid of this padding on the left side so maybe let's
11:42:21
try to do this padding left and we can do just colon and zero
11:42:27
and this should work and indeed it does so now this looks fine um now uh inside
11:42:35
here inside the console of our uh running app we can see we have some
11:42:41
warnings like next off URL is missing so let's add it let's go to our EnV file
11:42:50
let's see here uh let's put next off URL and this will be the same as this this so let's
11:42:57
put it like this and U Let's see we will also need a whoops this should go here
11:43:04
we will also need to have a secret for our authentication so let's just put
11:43:10
some random characters and now let's put this uh secret to our next
11:43:17
authentication so let's go to uh let's see up and let's go to API off next off
11:43:25
Route and here we need to pass secret actually we have our secret here so this
11:43:31
was already added right so this is fine now there are um small errors um let me
11:43:40
show you I will restart my environment and for example if we go to
11:43:46
this page and I refresh this page uh we should get an warning about that we have
11:43:53
a uh each child in the list should have a unique key property and this means
11:44:00
that for example let's go to that page so uh it's inside the page URI page and
11:44:08
here for example on every place where we use map we need to add a key property to
11:44:14
the child so let's do uh here for example button
11:44:20
key and uh let's see here we have another one so let's add key will be
11:44:26
let's say link URL and so we need to have unique IDs or
11:44:33
unique keys for each of the child uh probably here we will need some
11:44:41
uh Keys as well so let's go here and as you can see uh everywhere where we Loop
11:44:49
through stuff we need to add the Key Properties so for example inside the
11:44:56
radio togglers let's go to Radio togglers and here let's add a key as
11:45:03
well it will be an option value let's say right now on this page we have
11:45:11
buttons form and as you can see we are mapping through so let's go to buttons
11:45:17
form and here we have a key here so that's fine let's search if we are doing
11:45:24
other Maps we are doing it here but we have a key so that's fine here we need
11:45:32
to add a key so let's do uh we do buttons and let's do H we have a key um
11:45:40
can we use a key let's see uh let's go to uh users sorry not users we should go
11:45:47
to pages and then we have buttons no it's actually available buttons that we
11:45:53
are hoping through so let's see uh AV label buttons is actually all buttons
11:46:00
that are filtered so here we have all buttons and as you can see we have keys here so let's use this key so let's do
11:46:08
just button key and this should work now let's go to let's say let's refresh this
11:46:16
thing and let's go to Links so let's go to Links
11:46:21
form and here we are mopping through but we have a key here so that's fine
11:46:27
and then I think that's all here we have key so that's fine let's see if we have
11:46:34
other errors uh I'm going to restart my environment yes and let's try to reload
11:46:41
this page and um yeah we have another one let's see um invalid D property 4 do
11:46:51
you mean html 4 yes so we need to fix this and and um let's search where it is
11:46:59
let's search for and we have it here so uh let me see
11:47:06
four let's change this to four um HTML 4
11:47:11
let's do H HTML 4 and we put it like this and here is another one so let's do
11:47:19
HTML four yes that's better and now let's see here we have some warning
11:47:26
about only plain objects can be passed to client components from server components and this is about passing
11:47:34
page all right so we need to go to I think it's inside up we are have this uh
11:47:43
let's see account page and here we are passing Pages as you can see and uh this
11:47:50
is a mongus object and it's not like simple object it's um it has some um
11:47:58
extra extra stuff in it h but I think there is something called tojson that we
11:48:04
can run on this so this function will simplify the object so it will only
11:48:10
contain the properties for page and so on uh still we have some problems here
11:48:17
let's try something else for all of those I'm going to create a new object
11:48:23
of it and I'm going just to sprad read all of the properties now let's see um
11:48:31
let's restart uh the environment and now let's reload here and let's see if we will
11:48:37
have any warnings and looks like we H don't have anything uh here are only
11:48:44
plain objects and few builtins can be passed to client components from server components so no this will not work uh
11:48:53
let's try something else so here I'm I'm going to change to page and let's do two
11:49:01
object and then now let's see I'm going to save it and now it works the page
11:49:08
works let's try to restart environment and see if we will have any errors here
11:49:14
so um I'm going to refresh here and uh let's see it's still refreshing we still
11:49:21
get an error uh but uh let's see
11:49:26
so let's put this as lean page and uh let's do just page like this
11:49:34
a copy of it page or let's do maybe page two object so we will have the same
11:49:40
thing and let's do console log console log and let's do lean page and let's see
11:49:48
how it looks like so if I refresh here I should get a console log and as you can
11:49:53
see on the link page we have ID this version and we have links here that are
11:50:01
objects right um I don't know what is wrong really here but um there should be
11:50:07
a solution for this and let's search for plane
11:50:13
object uh copy no um clone yeah there's
11:50:19
the uh there is a lib for this uh so let's try to use it let's go here let's
11:50:25
do yarn add plane object clone and let's just use this
11:50:31
functionality um let's copy this let's put this here on the top and let's put
11:50:38
that link page will be a clone of this page and now let's try to use this lean
11:50:47
page not learn page lean page and let's see if this will work so so this didn't
11:50:55
work work let's try with another one clone deep uh one of those needs to work
11:51:02
right so yarn add clone deep and here is
11:51:07
how we are going to use it and let's do clone dip from uh let's do import way
11:51:15
import clone dip from from clone dip and
11:51:21
let's use here clone deep yes and let's restart our environment and let's do
11:51:28
refresh now we still have a problem let's see if I can just do delete Lan
11:51:35
page links if this will help and I need to restart the environment just to be
11:51:40
sure and let's hit refresh here no that was not the issue let's I'm going to
11:51:47
just delete everything almost everything and just to see uh what will actually
11:51:55
help so it looks like by deleting idore ID uh it's fixed now so um let's maybe
11:52:04
do something like this the ID will be our ID to string so let's do Lan page
11:52:10
underscore ID to string just to be sure that it will be string is let's restart
11:52:18
environment we don't need to delete the links uh I think so let's do uh let's
11:52:25
refresh here and let's see it's compiling account and looks like it works yeah we
11:52:33
don't have any warnings so now we should be able to deploy our app to do this I'm
11:52:38
going to go to my gith app and let's go to repositories and let's do new and now
11:52:46
let's do public yes let's do link list and let's create this
11:52:53
repo now here inside my terminal I'm going to do get in it and now we will
11:53:00
need this SSH URL and we just need to do
11:53:06
uh let's see um G get remote at origin so I can just copy this and paste this
11:53:13
get status Let's see we have some files that we need to push I'm going to
11:53:19
exclude this and this I don't want to push my secrets so let's go to G ignore
11:53:26
and let's add maybe here that EnV and that idea so that idea is just stuff
11:53:34
from my editor let's do G status once again and let's see fine fine this is
11:53:41
fine this is fine package JM post CSS public Source yeah everything is fine
11:53:47
let's just add everything let's do commit uh with message initial commit
11:53:54
and let's get push origin master and this should push all of the files here
11:54:00
let's see yes it worked so we can see all of the files now let's go to versal
11:54:06
whoops and let's do new project and I'm going to search to link
11:54:13
list yes let's import this one and we have some environment variables that we need to add I can just
11:54:21
go here and I going to just copy all of this
11:54:26
this and but uh yeah let's copy all of this and let's see here I'm going just
11:54:32
to paste all of this before I will hit deploy I'm going to change those URLs so
11:54:39
uh I'm going to those will be htps and it will be
11:54:45
like let's say David link list. versal
11:54:51
up and let's use the same here and I will just make sure that I will get this
11:54:58
URL so let's hit uh deploy and we will also need to update
11:55:05
our Google client ID so let's go to Google console and Link list project
11:55:13
let's go to apis and services credentials I think it's here and we
11:55:18
have this web client and let's see let's add a URL and
11:55:24
let's add this URL we need to add also this API of callback goal uh path here
11:55:31
so let's hit save now let's just make sure we can get this URL so let's go
11:55:37
to uh back to our project uh let's go to my profile and it's deploying this
11:55:45
initial comit and let's see let's go to settings
11:55:50
and let's go to domains and uh I don't want this one I want to change it I want to have like
11:55:59
David I think I can just paste this one um like this I hope this will work
11:56:07
let's hit save and yes it's uh deploying
11:56:12
so we can go to deployments here uh Missing key property on analytics page
11:56:19
so let's go here let's open this analytics page and let's search for for
11:56:25
map sorry map and here as you can see we have map here we have map that doesn't
11:56:33
have any key property so let's add a key and let's put link uh let's put link
11:56:41
title right and now we need to push it again so let's do G status G add let's
11:56:47
just add everything get commit and let's let's name it maybe key prop in in
11:56:56
analytics page and let's do G push origin master and now it should
11:57:03
automatically re uh redeploy on our versal let's see let's go to our app
11:57:09
here and as you can see it's building once again um deploying outputs but uh
11:57:16
well everything here worked and now it's green and ready so we can just go to
11:57:22
this link list project let's go to Project here and as you can see we get
11:57:28
this nice URL that we can use and everything seems to be working I can
11:57:34
zoom in a little bit let's do sign in to see if it works if I can log in with my
11:57:41
Google account it looks like it works just fine let's see uh we get a timeout
11:57:49
uh let's see maybe it's because of the database access network access let's see
11:57:55
yeah it's only my IP address so I'm going to add access from everywhere and this is a common problem
11:58:03
here uh but you just add all IPS and it should work as I did now let's try to
11:58:09
sign in again my user my Gmail account and it worked I'm logged in let's go to
11:58:15
my profile and yeah I can see all stuff uh all stuff about my profile and uh
11:58:24
looks like it just works I have my profile here and the app is published so
11:58:30
that's all for today I hope you learned something useful and if you did please click the like button and subscribe if
11:58:36
you want to see more videos like this one have a nice day and see you in the next video

